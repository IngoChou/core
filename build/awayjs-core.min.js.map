{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/CurveSubGeometry.ts",
    "awayjs-core/lib/data/Geometry.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/LineSubGeometry.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/SubGeometryBase.ts",
    "awayjs-core/lib/data/TriangleSubGeometry.ts",
    "awayjs-core/lib/data/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/GeometryEvent.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/SubGeometryEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/AssetLoaderContext.ts",
    "awayjs-core/lib/library/AssetLoaderToken.ts",
    "awayjs-core/lib/library/AssetLoader.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/SubGeometryUtils.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_attributesBufferVO",
    "Array",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "invalidateLength",
    "_buffer",
    "_contentDirty",
    "_bufferView",
    "buffer",
    "invalidateContent",
    "len",
    "invalidate",
    "dispose",
    "clone",
    "attributesBuffer",
    "bufferView",
    "view",
    "_internalClone",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "Uint8Array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "ArrayBuffer",
    "localBufferView",
    "_iAddAttributesBufferVO",
    "AttributesBufferVO",
    "push",
    "_iRemoveAttributesBufferVO",
    "splice",
    "indexOf",
    "_addView",
    "ViewVO",
    "_removeView",
    "_getOffset",
    "j",
    "newLength",
    "byteLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "_index",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/data/BitmapImage2D",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "BitmapImage2D",
    "width",
    "height",
    "transparent",
    "fillColor",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "index",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "Math",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "awayjs-core/lib/data/CurveSubGeometry",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "awayjs-core/lib/data/SubGeometryBase",
    "awayjs-core/lib/utils/SubGeometryUtils",
    "awayjs-core/lib/data/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "subGeometry",
    "parentGeometry",
    "hasEventListener",
    "SUB_GEOMETRY_ADDED",
    "dispatchEvent",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-core/lib/events/GeometryEvent",
    "ImageBase",
    "ImageUtils",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_imageObject",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/data/LineSubGeometry",
    "LineSubGeometry",
    "_thickness",
    "_colors",
    "setColors",
    "indices",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "generateColors",
    "awayjs-core/lib/data/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "image2D",
    "repeat",
    "smooth",
    "mipmap",
    "_offsetX",
    "_offsetY",
    "_scaleX",
    "_scaleY",
    "_updateRect",
    "_repeat",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_pFormat",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerCube",
    "imageCube",
    "awayjs-core/lib/data/SpecularImage2D",
    "Point",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "w",
    "h",
    "awayjs-core/lib/geom/Point",
    "AbstractMethodError",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/events/SubGeometryEvent",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "undefined",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "awayjs-core/lib/data/WaveAudio",
    "WaveAudio",
    "htmlAudioElement",
    "_htmlAudioElement",
    "message",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "name",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "addEventListener",
    "listener",
    "getEventListenerIndex",
    "removeEventListener",
    "event",
    "listenerArray",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "_subGeometry",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "_attributesView",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "_changeEvent",
    "_redMultiplier",
    "_greenMultiplier",
    "_blueMultiplier",
    "_alphaMultiplier",
    "_redOffset",
    "_greenOffset",
    "_blueOffset",
    "_alphaOffset",
    "_invalidate",
    "clear",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "k",
    "deltaTransformVector",
    "getTranslation",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "concat",
    "append",
    "lhs",
    "m111",
    "m121",
    "m131",
    "m141",
    "m112",
    "m122",
    "m132",
    "m142",
    "m113",
    "m123",
    "m133",
    "m143",
    "m114",
    "m124",
    "m134",
    "m144",
    "m211",
    "m221",
    "m231",
    "m241",
    "m212",
    "m222",
    "m232",
    "m242",
    "m213",
    "m223",
    "m233",
    "m243",
    "m214",
    "m224",
    "m234",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "slice",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "vec",
    "mr",
    "sqrt",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "identity",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m21",
    "m31",
    "m41",
    "m12",
    "m22",
    "m32",
    "m42",
    "m13",
    "m23",
    "m33",
    "m43",
    "m14",
    "m24",
    "m34",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "cos",
    "sin",
    "transformVectors",
    "oRawData",
    "rad",
    "tmp1",
    "tmp2",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Matrix",
    "tx",
    "ty",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "rotation",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "scaleBy",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "AssetLoader",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loadingSessionsGarbage",
    "_assetDictionary",
    "_loadingSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoadingSessions",
    "killLoadingSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loadingSessionGC",
    "pop",
    "clearTimeout",
    "stop",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "awayjs-core/lib/library/AssetLoaderContext",
    "AssetLoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/AssetLoaderToken",
    "AssetLoaderToken",
    "_iLoader",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_token",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsingAfterDependencies",
    "_iSuccess",
    "resolve",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "substr",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ParserUtils",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "start",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "arrayBufferToBase64",
    "mimeType",
    "byteStr",
    "base64Image",
    "window",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "Audio",
    "img",
    "Image",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "createObjectURL",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "min",
    "getBytesAvailable",
    "audioToWaveAudio",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "bitmap",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "HTMLAudioElement",
    "parseFileType",
    "arraybytes",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "minX",
    "maxX",
    "minY",
    "maxY",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "clearRect",
    "fillStyle",
    "bmpd",
    "drawImage",
    "save",
    "setTransform",
    "restore",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "_maxLength",
    "_arrayBuffer",
    "_swapBuffer",
    "_uint8Swap",
    "_uint16Swap",
    "_int16Swap",
    "_uint32Swap",
    "Uint32Array",
    "_int32Swap",
    "Int32Array",
    "_float32Swap",
    "_float64Swap",
    "Float64Array",
    "_updateViews",
    "_uint8Array",
    "aBuffer",
    "ensureSpace",
    "newMaxLength",
    "newArrayBuffer",
    "_int8Array",
    "readBytes",
    "bytes",
    "max",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "writeInt",
    "_int32Array",
    "readInt",
    "pa",
    "writeShort",
    "_int16Array",
    "writeDouble",
    "_float64Array",
    "readDouble",
    "_uint16Array",
    "_uint32Array",
    "_float32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "_currentTime",
    "indexAttributes",
    "positionAttributes",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x3",
    "y3",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "uvAttributes",
    "useFaceWeights",
    "uvDim",
    "faceTangents",
    "index1",
    "index2",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "i1",
    "i2",
    "invTranspose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "numVertices",
    "indexMappings",
    "indexOffset",
    "numIndices",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "vertices",
    "splitVerts",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now",
    "awayjs-core/lib/vos/IAttributesBufferVO",
    "awayjs-core/lib/vos/IAttributesVO",
    "awayjs-core/lib/vos/ISubGeometryVO"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,+CAAA,SAAAjB,EAAAkB,EAAAJ,GCCA,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCHtB,IAAOG,GAAS5B,EAAc,oCAG9B,IAAM6B,GAAgB,SAAAC,GAASX,EAAzBU,EAAgBC,EA4FrB,SA5FKD,GA4FOE,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAE9BF,EAAAf,KAAAK,KA1FOA,MAAAa,oBAAiD,GAAIC,MACrDd,MAAAe,OAAgB,CAChBf,MAAAgB,QAAiB,CACjBhB,MAAAiB,WAAoB,CAMpBjB,MAAAkB,SAAyB,GAAIJ,MAmFpCd,MAAKW,OAASA,CACdX,MAAKY,MAAQA,EA7EdO,OAAAC,eAAWX,EAAAF,UAAA,aDKJc,ICLP,WAEC,MAAOZ,GAAiBa,WDMlBC,WAAY,KACZC,aAAc,MCJrBL,QAAAC,eAAWX,EAAAF,UAAA,UDOJc,ICPP,WAEC,GAAIrB,KAAKyB,aACRzB,KAAK0B,eAEN,OAAO1B,MAAKgB,SDONW,ICJP,SAAkBC,GAEjB,GAAI5B,KAAKiB,YAAcW,EACtB,MAED5B,MAAKiB,WAAaW,CAElB5B,MAAK6B,oBDGCN,WAAY,KACZC,aAAc,MCDrBL,QAAAC,eAAWX,EAAAF,UAAA,SDIJc,ICJP,WAEC,MAAOrB,MAAKe,QDKNY,ICFP,SAAiBC,GAEhB,GAAI5B,KAAKe,QAAUa,EAClB,MAED5B,MAAKe,OAASa,CAEd5B,MAAK6B,oBDCCN,WAAY,KACZC,aAAc,MCErBL,QAAAC,eAAWX,EAAAF,UAAA,UDCJc,ICDP,WAEC,GAAIrB,KAAKyB,aACRzB,KAAK0B,eAEN,OAAO1B,MAAK8B,SDCNP,WAAY,KACZC,aAAc,MCErBL,QAAAC,eAAWX,EAAAF,UAAA,cDCJc,ICDP,WAEC,GAAIrB,KAAKyB,aACRzB,KAAK0B,eAEN1B,MAAK+B,cAAgB,KAErB,OAAO/B,MAAKgC,aDANL,ICGP,SAAsBC,GAErB5B,KAAKgC,YAAcJ,CACnB5B,MAAK8B,QAAU9B,KAAKgC,YAAYC,QDF1BV,WAAY,KACZC,aAAc,MCIrBL,QAAAC,eAAWX,EAAAF,UAAA,UDDJc,ICCP,WAEC,MAAOrB,MAAKe,OAAOf,KAAKgB,SDAlBO,WAAY,KACZC,aAAc,MCgBdf,GAAAF,UAAA2B,kBAAP,WAEC,GAAIlC,KAAK+B,cACR,MAED,IAAII,GAAanC,KAAKa,oBAAoBjB,MAC1C,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,EAAK9C,IAC/BW,KAAKa,oBAAoBxB,GAAG+C,YAE7BpC,MAAK+B,cAAgB,KAOftB,GAAAF,UAAAsB,iBAAP,WAEC,GAAI7B,KAAKyB,aACR,MAED,OAAOzB,KAAKa,oBAAoBjB,OAC/BI,KAAKa,oBAAoB,GAAGwB,SAE7BrC,MAAKyB,aAAe,KAGdhB,GAAAF,UAAA+B,MAAP,WAEC,GAAIC,GAAoC,GAAI9B,GAAiBT,KAAKgB,QAAShB,KAAKe,OAChFwB,GAAiBC,WAAWb,IAAI3B,KAAKwC,WAErC,IAAIL,GAAanC,KAAKkB,SAAStB,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,EAAK9C,IAC/BW,KAAKkB,SAAS7B,GAAGoD,KAAKC,eAAeH,EAEtC,OAAOA,GAMD9B,GAAAF,UAAA8B,QAAP,WAEC,MAAOrC,KAAKa,oBAAoBjB,OAC/BI,KAAKa,oBAAoB,GAAGwB,UAGvB5B,GAAAF,UAAAoC,eAAP,SAAsBC,EAAkBC,EAAiCC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAIC,GAAoBF,YAA2BG,YAA0BH,EAAkB,GAAIG,YAAWH,EAAgBZ,OAE9H,IAAIgB,GAAgBjD,KAAKkB,SAAS0B,EAClC,IAAIM,GAAiBD,EAAOrD,MAC5B,IAAIuD,GAAiBF,EAAOH,MAC5B,IAAIM,GAAgBL,EAAMnD,OAAOsD,CAGjC,IAAIlD,KAAKY,MAAQwC,EAASN,EACzB9C,KAAKY,MAAQwC,EAASN,CAEvB,IAAI9C,KAAKyB,aACRzB,KAAK0B,eAGN,IAAI1B,KAAKkB,SAAStB,QAAU,EAAG,CAC9BI,KAAKgC,YAAYL,IAAIoB,OACf,CACN,IAAK,GAAI1D,GAAW,EAAGA,EAAI+D,EAAQ/D,IAClCW,KAAKgC,YAAYL,IAAIoB,EAAMM,SAAShE,EAAE6D,GAAU7D,EAAE,GAAG6D,IAAW7D,EAAEyD,GAAQ9C,KAAKgB,QAAUmC,GAG3FnD,KAAKkC,oBAGCzB,GAAAF,UAAA+C,qBAAP,SAA4BV,GAE3B,GAAIK,GAAgBjD,KAAKkB,SAAS0B,EAClC,IAAIM,GAAiBD,EAAOrD,MAC5B,IAAIuD,GAAiBF,EAAOH,MAE5B,IAAI9C,KAAKyB,aACRzB,KAAK0B,eAGN,IAAI1B,KAAKkB,SAAStB,QAAU,EAC3B,MAAOI,MAAK8B,OAEb,IAAIyB,GAA0B,GAAIC,aAAYxD,KAAKe,OAAOmC,EAC1D,IAAIO,GAA6B,GAAIT,YAAWO,EAEhD,KAAK,GAAIlE,GAAW,EAAGA,EAAIW,KAAKe,OAAQ1B,IACvCoE,EAAgB9B,IAAI3B,KAAKgC,YAAYqB,SAAShE,EAAEW,KAAKgB,QAAUmC,EAAS9D,EAAEW,KAAKgB,QAAUmC,EAAUD,GAAU7D,EAAE6D,EAEhH,OAAOK,GAGD9C,GAAAF,UAAAmD,wBAAP,SAA+BC,GAE9B3D,KAAKa,oBAAoB+C,KAAKD,EAE9B,OAAOA,GAGDlD,GAAAF,UAAAsD,2BAAP,SAAkCF,GAEjC3D,KAAKa,oBAAoBiD,OAAO9D,KAAKa,oBAAoBkD,QAAQJ,GAAqB,EAEtF,OAAOA,GAGDlD,GAAAF,UAAAyD,SAAP,SAAgBvB,GAEf,GAAIQ,GAAgB,GAAIgB,GAAOxB,EAC/B,IAAIN,GAAanC,KAAKkB,SAAStB,MAE/BqD,GAAOH,OAASX,EAAKnC,KAAKkB,SAASiB,EAAM,GAAGW,OAAS9C,KAAKkB,SAASiB,EAAM,GAAGvC,OAAS,CAErFI,MAAKkB,SAAS0C,KAAKX,EAEnB,IAAIjD,KAAKiB,WAAagC,EAAOH,OAASG,EAAOrD,OAAQ,CACpDI,KAAKiB,WAAagC,EAAOH,OAASG,EAAOrD,MACzCI,MAAK6B,mBAIN,MAAOM,GAGD1B,GAAAF,UAAA2D,YAAP,SAAmBtB,GAElB,GAAIK,GAAgBjD,KAAKkB,SAAS4C,OAAOlB,EAAW,GAAG,EACvD,IAAIT,GAAanC,KAAKkB,SAAStB,MAE/BqD,GAAOZ,SAEP,KAAK,GAAIhD,GAAWuD,EAAWvD,EAAI8C,EAAK9C,IAAK,CAC5C4D,EAASjD,KAAKkB,SAAS7B,EACvB4D,GAAOH,OAASzD,EAAGW,KAAKkB,SAAS7B,EAAI,GAAGyD,OAAS9C,KAAKkB,SAAS7B,EAAI,GAAGO,OAAS,EAGhFI,KAAKiB,WAAagC,EAAOH,OAASG,EAAOrD,MAEzCI,MAAK6B,mBAGCpB,GAAAF,UAAA4D,WAAP,SAAkBvB,GAEjB,MAAO5C,MAAKkB,SAAS0B,GAAWE,OAG1BrC,GAAAF,UAAAmB,cAAP,WAEC1B,KAAKyB,aAAe,KAEpB,IAAIpC,EACJ,IAAI+E,EACJ,IAAIjC,GAAanC,KAAKkB,SAAStB,MAE/B,IAAIyE,GAAmBrE,KAAKiB,WAAWjB,KAAKe,MAE5C,KAAKf,KAAK8B,SAAW9B,KAAK8B,QAAQwC,YAAcD,EAAW,CAC1D,GAAIE,GAAwB,GAAIf,aAAYa,EAC5C,IAAIG,GAAqB,GAAIxB,YAAWuB,EAAW,EAAGA,EAAUD,WAChE,IAAIrB,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIsB,EAEJ,IAAIzE,KAAKgB,SAAWhB,KAAKiB,WAAY,CACpC,IAAK5B,EAAI,EAAGA,EAAI8C,EAAK9C,IAAK,CACzB4D,EAASjD,KAAKkB,SAAS7B,EACvB6D,GAAUD,EAAOrD,MACjBuD,GAAUF,EAAOH,MACjB2B,GAAaxB,EAAOyB,SACpB,KAAKN,EAAI,EAAGA,EAAIpE,KAAKe,OAAQqD,IAC5B,GAAIK,GAAc,KACjBD,EAAQ7C,IAAI,GAAIqB,YAAWhD,KAAK8B,QAASsC,EAAEpE,KAAKgB,QAAUyD,EAAYvB,GAAUkB,EAAEpE,KAAKiB,WAAakC,EAEtGF,GAAOyB,UAAYzB,EAAOH,OAG3B9C,KAAKgB,QAAUhB,KAAKiB,eACd,CACNuD,EAAQ7C,IAAI,GAAIqB,YAAWhD,KAAK8B,QAAS,EAAG9B,KAAK8B,QAAQwC,aAG1DtE,KAAK8B,QAAUyC,CACfvE,MAAKgC,YAAcwC,GAjSP/D,GAAAa,UAAmB,2BAoSlC,OAAAb,IAtS+BD,EAwS/B,IAAMyD,GAAM,WAUX,QAVKA,GAUOxB,GAEXzC,KAAKyC,KAAOA,CACZzC,MAAKJ,OAAS6C,EAAKkC,KAAKlC,EAAKmC,WAGvBX,EAAA1D,UAAA8B,QAAP,WAECrC,KAAKyC,KAAO,KAGNwB,GAAA1D,UAAA+B,MAAP,WAEC,MAAO,IAAI2B,GAAOjE,KAAKyC,MAEzB,OAAAwB,KAEAnE,GAA0BJ,QAAjBe,ID5ENoE,oCAAoC,sCAAsCC,6CAA6C,SAASlG,EAAQkB,EAAOJ,GAClJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GEjQtB,IAAOI,GAAgB7B,EAAa,8CAEpC,IAAO4B,GAAS5B,EAAc,oCAG9B,IAAMmG,GAAc,SAAArE,GAASX,EAAvBgF,EAAcrE,EAiGnB,SAjGKqE,GAiGOC,EAAkCJ,EAAmBK,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,EAEhEvE,EAAAf,KAAAK,KAEAA,MAAKkF,YAAcF,CACnBhF,MAAKmF,MAAQH,EAAWI,iBACxBpF,MAAKqF,YAAcT,CACnB5E,MAAKsF,kBAAqBL,YAAiCxE,GAAsCwE,EAAwB,GAAIxE,GAAiBT,KAAKqF,YAAYrF,KAAKmF,MAAOF,EAE3KjF,MAAKuF,OAASvF,KAAKsF,kBAAkBtB,SAAShE,MAlG/CmB,OAAAC,eAAW2D,EAAAxE,UAAA,aFwQJc,IExQP,WAEC,MAAO0D,GAAezD,WFyQhBC,WAAY,KACZC,aAAc,ME1PrBL,QAAAC,eAAW2D,EAAAxE,UAAA,UF6PJc,IE7PP,WAEC,MAAOrB,MAAKsF,mBF8PN/D,WAAY,KACZC,aAAc,MExPrBL,QAAAC,eAAW2D,EAAAxE,UAAA,QF+PJc,IE/PP,WAEC,MAAOrB,MAAKmF,OFgQNxD,IE7PP,SAAgBC,GAEf,GAAI5B,KAAKmF,OAASvD,EACjB,MAED5B,MAAKmF,MAAQvD,CAEb5B,MAAKsF,kBAAkBpB,YAAYlE,KAAKuF,OACxCvF,MAAKuF,OAASvF,KAAKsF,kBAAkBtB,SAAShE,OF4PxCuB,WAAY,KACZC,aAAc,MEtPrBL,QAAAC,eAAW2D,EAAAxE,UAAA,cF6PJc,IE7PP,WAEC,MAAOrB,MAAKqF,aF8PN1D,IE3PP,SAAsBC,GAErB,GAAI5B,KAAKqF,aAAezD,EACvB,MAED5B,MAAKqF,YAAczD,CAGnB5B,MAAKsF,kBAAkBpB,YAAYlE,KAAKuF,OACxCvF,MAAKuF,OAASvF,KAAKsF,kBAAkBtB,SAAShE,OF0PxCuB,WAAY,KACZC,aAAc,MExPrBL,QAAAC,eAAW2D,EAAAxE,UAAA,SF2PJc,IE3PP,WAEC,MAAOrB,MAAKsF,kBAAkB1E,OF4PxBe,IEzPP,SAAiBC,GAEhB5B,KAAKsF,kBAAkB1E,MAAQgB,GF0PzBL,WAAY,KACZC,aAAc,MExPrBL,QAAAC,eAAW2D,EAAAxE,UAAA,UF2PJc,IE3PP,WAEC,MAAOrB,MAAKsF,kBAAkBnB,WAAWnE,KAAKuF,SF4PxChE,WAAY,KACZC,aAAc,ME1PrBL,QAAAC,eAAW2D,EAAAxE,UAAA,UF6PJc,IE7PP,WAEC,MAAOrB,MAAKsF,kBAAkB1E,MAAMZ,KAAKqF,aF8PnC9D,WAAY,KACZC,aAAc,MEzOduD,GAAAxE,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtB9C,KAAKsF,kBAAkB3C,eAAe3C,KAAKuF,OAASC,YAAkB1E,OAAQ,GAAKd,MAAgB,YAAEwF,GAA4BA,EAAQ1C,EAEzI9C,MAAKyF,kBAAoB,KAGnBV,GAAAxE,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,IAAK9C,KAAKyF,kBACTzF,KAAKyF,kBAAoBzF,KAAKsF,kBAAkBhC,qBAAqBtD,KAAKuF,OAE3E,IAAIpD,GAAanC,KAAKqF,YAAYrF,KAAKmF,KACvC,OAAO,IAAKnF,MAAgB,YAAEA,KAAKyF,kBAAmB3C,EAAOX,EAAKvB,EAAMZ,KAAKqF,aAGvEN,GAAAxE,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIX,GAAe/E,KAAKkF,YAAalF,KAAKqF,YAAa9C,GAG5EwC,GAAAxE,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,GAAIA,EACHvC,KAAK0C,eAAeH,EAErB,KAAKvC,KAAK0F,YACT1F,KAAKsF,kBAAkBhD,OAExB,IAAIqD,GAA4B3F,KAAK0F,WACrC1F,MAAK0F,YAAc,IAEnB,OAAOC,GAMDZ,GAAAxE,UAAA8B,QAAP,WAECrC,KAAKsF,kBAAkBpB,YAAYlE,KAAKuF,OACxCvF,MAAKsF,kBAAoB,KAtJZP,GAAAzD,UAAmB,6BAwJlC,OAAAyD,IA1J6BvE,EA4J7BV,GAAwBJ,QAAfqF,IFmONlF,8CAA8C,8CAA8CgF,oCAAoC,sCAAsCe,8CAA8C,SAAShH,EAAQkB,EAAOJ,GAC/O,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GGxYtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMiH,GAAe,SAAAnF,GAASX,EAAxB8F,EAAenF,EAkBpB,SAlBKmF,GAkBOC,EAA6BC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAExCrF,EAAAf,KAAAK,KAAM+F,EAAU/C,WAAagD,UAAW,EAAGF,GAZ5C3E,OAAAC,eAAWyE,EAAAtF,UAAA,aH2YJc,IG3YP,WAEC,MAAOwE,GAAgBvE,WH4YjBC,WAAY,KACZC,aAAc,MG5XdqE,GAAAtF,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAKZ+C,GAAAtF,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAOpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGlB+C,GAAAtF,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIG,GAAgBtD,EAAkBvC,KAAKkF,aAAelC,YAG/E6C,GAAAtF,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAAyB7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GA5CxBsD,GAAAvE,UAAmB,8BA8ClC,OAAAuE,IAhD8Bd,EAkD9BjF,GAAyBJ,QAAhBmG,IH2XNf,4CAA4C,8CAA8CmB,+CAA+C,SAASrH,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GIrbtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMsH,GAAgB,SAAAxF,GAASX,EAAzBmG,EAAgBxF,EAkBrB,SAlBKwF,GAkBOJ,GAEXpF,EAAAf,KAAAK,KAAMmG,aAAc,EAAGL,GAZxB3E,OAAAC,eAAW8E,EAAA3F,UAAA,aJubJc,IIvbP,WAEC,MAAO6E,GAAiB5E,WJwblBC,WAAY,KACZC,aAAc,MI1ad0E,GAAA3F,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAGZoD,GAAA3F,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGjCoD,GAAA3F,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIQ,GAAiB3D,GAG1C2D,GAAA3F,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzB2D,GAAA5E,UAAmB,+BA0ClC,OAAA4E,IA5C+BnB,EA8CLjF,GAAAJ,QAAjBwG,IJ2aNpB,4CAA4C,8CAA8CsB,+CAA+C,SAASxH,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GKjetB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMyH,GAAgB,SAAA3F,GAASX,EAAzBsG,EAAgB3F,EAkBrB,SAlBK2F,GAkBOP,GAEXpF,EAAAf,KAAAK,KAAMmG,aAAc,EAAGL,GAZxB3E,OAAAC,eAAWiF,EAAA9F,UAAA,aLmeJc,IKneP,WAEC,MAAOgF,GAAiB/E,WLoelBC,WAAY,KACZC,aAAc,MKtdd6E,GAAA9F,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAGZuD,GAAA9F,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGjCuD,GAAA9F,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIW,GAAiB9D,GAG1C8D,GAAA9F,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzB8D,GAAA/E,UAAmB,+BA0ClC,OAAA+E,IA5C+BtB,EA8C/BjF,GAA0BJ,QAAjB2G,ILudNvB,4CAA4C,8CAA8CwB,+CAA+C,SAAS1H,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM7gBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAM2H,GAAgB,SAAA7F,GAASX,EAAzBwG,EAAgB7F,EAkBrB,SAlBK6F,GAkBOT,GAEXpF,EAAAf,KAAAK,KAAMmG,aAAc,EAAGL,GAZxB3E,OAAAC,eAAWmF,EAAAhG,UAAA,aN+gBJc,IM/gBP,WAEC,MAAOkF,GAAiBjF,WNghBlBC,WAAY,KACZC,aAAc,MMlgBd+E,GAAAhG,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAGZyD,GAAAhG,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGjCyD,GAAAhG,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIa,GAAiBhE,GAG1CgE,GAAAhG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzBgE,GAAAjF,UAAmB,+BA0ClC,OAAAiF,IA5C+BxB,EA8C/BjF,GAA0BJ,QAAjB6G,INmgBNzB,4CAA4C,8CAA8C0B,+CAA+C,SAAS5H,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GOzjBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAM6H,GAAgB,SAAA/F,GAASX,EAAzB0G,EAAgB/F,EAkBrB,SAlBK+F,GAkBOX,GAEXpF,EAAAf,KAAAK,KAAMmG,aAAc,EAAGL,GAZxB3E,OAAAC,eAAWqF,EAAAlG,UAAA,aP2jBJc,IO3jBP,WAEC,MAAOoF,GAAiBnF,WP4jBlBC,WAAY,KACZC,aAAc,MO9iBdiF,GAAAlG,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAGZ2D,GAAAlG,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGjC2D,GAAAlG,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIe,GAAiBlE,GAG1CkE,GAAAlG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzBkE,GAAAnF,UAAmB,+BA0ClC,OAAAmF,IA5C+B1B,EA8C/BjF,GAA0BJ,QAAjB+G,IP+iBN3B,4CAA4C,8CAA8C4B,+CAA+C,SAAS9H,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQrmBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAM+H,GAAgB,SAAAjG,GAASX,EAAzB4G,EAAgBjG,EAkBrB,SAlBKiG,GAkBOb,EAA6BC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAExCrF,EAAAf,KAAAK,KAAM+F,EAAUa,YAAcC,WAAY,EAAGf,GAZ9C3E,OAAAC,eAAWuF,EAAApG,UAAA,aRwmBJc,IQxmBP,WAEC,MAAOsF,GAAiBrF,WRymBlBC,WAAY,KACZC,aAAc,MQ1lBdmF,GAAApG,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAKZ6D,GAAApG,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAOpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGlB6D,GAAApG,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIiB,GAAiBpE,EAAkBvC,KAAKkF,aAAe0B,aAGhFD,GAAApG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GA3CzBoE,GAAArF,UAAmB,+BA6ClC,OAAAqF,IA/C+B5B,EAiD/BjF,GAA0BJ,QAAjBiH,IRylBN7B,4CAA4C,8CAA8CgC,+CAA+C,SAASlI,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GSlpBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMmI,GAAgB,SAAArG,GAASX,EAAzBgH,EAAgBrG,EAkBrB,SAlBKqG,GAkBOjB,EAA6BC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAExCrF,EAAAf,KAAAK,KAAM+F,EAAUa,YAAcC,WAAY,EAAGf,GAZ9C3E,OAAAC,eAAW2F,EAAAxG,UAAA,aTqpBJc,ISrpBP,WAEC,MAAO0F,GAAiBzF,WTspBlBC,WAAY,KACZC,aAAc,MSvoBduF,GAAAxG,UAAAoB,IAAP,SAAW6D,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBpC,EAAAH,UAAMoB,IAAGhC,KAAAK,KAACwF,EAAQ1C,GAKZiE,GAAAxG,UAAAc,IAAP,SAAWT,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAOpC,GAAAH,UAAMc,IAAG1B,KAAAK,KAACY,EAAOkC,GAGlBiE,GAAAxG,UAAAmC,eAAP,SAAsBH,GAErB,MAAQvC,MAAK0F,YAAc,GAAIqB,GAAiBxE,EAAkBvC,KAAKkF,aAAe0B,aAGhFG,GAAAxG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GA3CzBwE,GAAAzF,UAAmB,+BA6ClC,OAAAyF,IA/C+BhC,EAiDLjF,GAAAJ,QAAjBqH,ITsoBNjC,4CAA4C,8CAA8CkC,sCAAsC,SAASpI,EAAQkB,EAAOJ,GAC3J,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GUhsBtB,IAAO4G,GAAOrI,EAAe,+BAO7B,IAAOsI,GAAUtI,EAAc,mCAC/B,IAAOuI,GAAgBvI,EAAa,yCVsvBpC,IU1rBMwI,GAAa,SAAA1G,GAASX,EAAtBqH,EAAa1G,EAiElB,SAjEK0G,GAiEOC,EAAcC,EAAeC,EAA4BC,GAA5B,GAAAD,QAAA,GAA0B,CAA1BA,EAAA,KAA4B,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,KAEpE9G,EAAAf,KAAAK,KAAMqH,EAAOC,EA3DNtH,MAAAyH,QAAkB,KA6DzBzH,MAAK0H,aAAeH,CACpBvH,MAAK2H,aAAmCC,SAASC,cAAc,SAC/D7H,MAAK2H,aAAaN,MAAQA,CAC1BrH,MAAK2H,aAAaL,OAASA,CAC3BtH,MAAK8H,SAAW9H,KAAK2H,aAAaI,WAAW,KAE7C,IAAIP,GAAa,KAChBxH,KAAKgI,SAAShI,KAAKiI,MAAOT,GA9D5BrG,OAAAC,eAAWgG,EAAA7G,UAAA,aV4tBJc,IU5tBP,WAEC,MAAO+F,GAAc9F,WV6tBfC,WAAY,KACZC,aAAc,MUntBrBL,QAAAC,eAAWgG,EAAA7G,UAAA,eV8tBJc,IU9tBP,WAEC,MAAOrB,MAAK0H,cV+tBN/F,IU5tBP,SAAuBC,GAEtB5B,KAAK0H,aAAe9F,GV6tBdL,WAAY,KACZC,aAAc,MU3qBd4F,GAAA7G,UAAA+B,MAAP,WAEC,GAAIxD,GAAkB,GAAIsI,GAAcpH,KAAKqH,MAAOrH,KAAKsH,OAAQtH,KAAKuH,YACtEzI,GAAEoJ,KAAKlI,KACP,OAAOlB,GAcDsI,GAAA7G,UAAA4H,eAAP,SAAsBC,EAAgBD,GAErC,IAAKnI,KAAKyH,QACTzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEjF,IAAIiB,GAAqBvI,KAAKqI,WAAWE,IAEzC,IAAIlJ,GAAmB+E,EAAmBoE,CAC1C,KAAKnJ,EAAI,EAAGA,EAAI+I,EAAKf,QAAShI,EAAG,CAChC,IAAK+E,EAAI,EAAGA,EAAIgE,EAAKd,SAAUlD,EAAG,CACjCoE,GAASnJ,EAAI+I,EAAKK,GAAKrE,EAAIgE,EAAKM,GAAG1I,KAAKqH,OAAO,CAE/CkB,GAAKC,GAASD,EAAKC,GAAOL,EAAeQ,cAAgBR,EAAeS,SACxEL,GAAKC,EAAQ,GAAKD,EAAKC,EAAQ,GAAGL,EAAeU,gBAAkBV,EAAeW,WAClFP,GAAKC,EAAQ,GAAKD,EAAKC,EAAQ,GAAGL,EAAeY,eAAiBZ,EAAea,UACjFT,GAAKC,EAAQ,GAAKD,EAAKC,EAAQ,GAAGL,EAAec,gBAAkBd,EAAee,aAIpF,IAAKlJ,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBA8CCkF,GAAA7G,UAAA6I,YAAP,SAAmBC,EAA4BC,EAAsBC,EAAiBC,EAAsBC,GAE3G,GAAIC,GAAsBL,EAAaf,cAEvC,KAAKtI,KAAKyH,QACTzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEjF,IAAIqC,GAA2BN,EAAaf,eAAeC,IAC3D,IAAIqB,GAAyB5J,KAAKqI,WAAWE,IAE7C,IAAIsB,GAAsBC,KAAKC,MAAMD,KAAKE,IAAIR,GAAeM,KAAKE,IAAI,GACtE,IAAIC,GAAoBH,KAAKC,MAAMD,KAAKE,IAAIP,GAAaK,KAAKE,IAAI,GAElE,IAAI3K,GAAmB+E,EAAmB8F,EAA6BC,CACvE,KAAK9K,EAAI,EAAGA,EAAIiK,EAAWjC,QAAShI,EAAG,CACtC,IAAK+E,EAAI,EAAGA,EAAIkF,EAAWhC,SAAUlD,EAAG,CACvC8F,GAAe7K,EAAIiK,EAAWb,GAAKrE,EAAIkF,EAAWZ,GAAGW,EAAahC,OAAO,CACzE8C,IAAa9K,EAAIkK,EAAUd,GAAKrE,EAAImF,EAAUb,GAAG1I,KAAKqH,OAAO,CAE7DuC,GAASO,EAAYF,GAAcN,EAAWO,EAAcL,IAI9D,IAAK7J,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBA4CCkF,GAAA7G,UAAA6J,WAAP,SAAkBC,EAAYf,EAAsBgB,GAEnD,GAAID,YAAkBjD,GACrBiD,EAASA,EAAOE,WAEjB,IAAIvK,KAAKyH,QAAS,CAQjBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/ClB,GAAiBqD,YAAYxK,KAAK8H,SAAUuC,EAAQf,EAAYgB,EAChEtK,MAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,YAE1E,CACNH,EAAiBqD,YAAYxK,KAAK8H,SAAUuC,EAAQf,EAAYgB,GAGjEtK,KAAKkC,oBAsBCkF,GAAA7G,UAAA8B,QAAP,WAEC3B,EAAAH,UAAM8B,QAAO1C,KAAAK,KAEbA,MAAK8H,SAAW,IAChB9H,MAAK2H,aAAe,IACpB3H,MAAKqI,WAAa,IAClBrI,MAAKiI,MAAQ,IACbjI,MAAK0H,aAAe,IACpB1H,MAAKyH,QAAU,KA6ETL,GAAA7G,UAAA2H,KAAP,SAAYmC,EAAYI,EAAgBtC,EAAgCuC,EAAsBC,EAAqBC,GAElH,GAAIP,YAAkBjD,GACrBiD,EAASA,EAAOE,WAEjB,IAAIvK,KAAKyH,QAAS,CAQjBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/ClB,GAAiB0D,MAAM7K,KAAK8H,SAAUuC,EAAQI,EAAQtC,EAAgBuC,EAAWC,EAAUC,EAC3F5K,MAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,YAC1E,CACNH,EAAiB0D,MAAM7K,KAAK8H,SAAUuC,EAAQI,EAAQtC,EAAgBuC,EAAWC,EAAUC,GAG5F5K,KAAKkC,oBAYCkF,GAAA7G,UAAAyH,SAAP,SAAgBI,EAAgB0C,GAE/B,GAAI9K,KAAKyH,QAAS,CAQjB,GAAIzH,KAAKqI,WACRrI,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAEhDlB,GAAiB4D,UAAU/K,KAAK8H,SAAUM,EAAM0C,EAAO9K,KAAK0H,aAE5D,IAAI1H,KAAKqI,WACRrI,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,YAC3E,CACNH,EAAiB4D,UAAU/K,KAAK8H,SAAUM,EAAM0C,EAAO9K,KAAK0H,cAG7D1H,KAAKkC,oBA0BCkF,GAAA7G,UAAAyK,SAAP,SAAgBvC,EAAGC,GAElB,GAAI1J,EACJ,IAAIiM,EACJ,IAAI/K,EACJ,IAAId,EAEJ,KAAKY,KAAKyH,QAAS,CAClB,GAAIyD,GAAsBlL,KAAK8H,SAASQ,aAAaG,EAAGC,EAAG,EAAG,EAE9D1J,GAAIkM,EAAU3C,KAAK,EACnB0C,GAAIC,EAAU3C,KAAK,EACnBrI,GAAIgL,EAAU3C,KAAK,EACnBnJ,GAAI8L,EAAU3C,KAAK,OAEb,CACN,GAAIC,IAAgBC,EAAIC,EAAE1I,KAAK2H,aAAaN,OAAO,CAEnDrI,GAAIgB,KAAKqI,WAAWE,KAAKC,EAAQ,EACjCyC,GAAIjL,KAAKqI,WAAWE,KAAKC,EAAQ,EACjCtI,GAAIF,KAAKqI,WAAWE,KAAKC,EAAQ,EACjCpJ,GAAIY,KAAKqI,WAAWE,KAAKC,EAAQ,GAIlC,IAAKpJ,EACJ,MAAO,EAER,OAAQJ,IAAK,GAAOiM,GAAK,EAAK/K,EAyBxBkH,GAAA7G,UAAA4K,WAAP,SAAkB1C,EAAGC,GAEpB,GAAI1J,EACJ,IAAIiM,EACJ,IAAI/K,EACJ,IAAId,EAEJ,KAAKY,KAAKyH,QAAS,CAClB,GAAIyD,GAAsBlL,KAAK8H,SAASQ,aAAaG,EAAGC,EAAG,EAAG,EAE9D1J,GAAIkM,EAAU3C,KAAK,EACnB0C,GAAIC,EAAU3C,KAAK,EACnBrI,GAAIgL,EAAU3C,KAAK,EACnBnJ,GAAI8L,EAAU3C,KAAK,OAEb,CACN,GAAIC,IAAgBC,EAAIC,EAAE1I,KAAK2H,aAAaN,OAAO,CAEnDrI,GAAIgB,KAAKqI,WAAWE,KAAKC,EAAQ,EACjCyC,GAAIjL,KAAKqI,WAAWE,KAAKC,EAAQ,EACjCtI,GAAIF,KAAKqI,WAAWE,KAAKC,EAAQ,EACjCpJ,GAAIY,KAAKqI,WAAWE,KAAKC,EAAQ,GAGlC,MAAQpJ,IAAK,GAAOJ,GAAK,GAAOiM,GAAK,EAAK/K,EAWpCkH,GAAA7G,UAAA6K,KAAP,WAEC,GAAIpL,KAAKyH,QACR,MAEDzH,MAAKyH,QAAU,IACfzH,MAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,QAe1EF,GAAA7G,UAAA8K,SAAP,SAAgBjD,EAAgBkD,GAE/B,IAAKtL,KAAKyH,QACTzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEjF,IAAIjI,GAAmB+E,EAAmBoE,EAAuB+C,CACjE,KAAKlM,EAAI,EAAGA,EAAI+I,EAAKf,QAAShI,EAAG,CAChC,IAAK+E,EAAI,EAAGA,EAAIgE,EAAKd,SAAUlD,EAAG,CACjCmH,EAAOrE,EAAWsE,mBAAmBF,EAAWjM,EAAI+E,EAAEgE,EAAKf,OAC3DmB,IAASnJ,EAAI+I,EAAKK,GAAKrE,EAAIgE,EAAKM,GAAG1I,KAAK2H,aAAaN,OAAO,CAE5DrH,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,IAIzC,IAAKvL,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBAoBCkF,GAAA7G,UAAAkL,SAAP,SAAgBhD,EAAUC,EAAUoC,GAEnC,GAAIS,GAAgBrE,EAAWsE,mBAAmBV,EAElD,KAAK9K,KAAKyH,QACTzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEjF,IAAIkB,IAAgBC,EAAIC,EAAE1I,KAAK2H,aAAaN,OAAO,CAEnDrH,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK,GAElC,KAAKxI,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBAkCCkF,GAAA7G,UAAAmL,WAAP,SAAkBjD,EAAGC,EAAGoC,GAEvB,GAAIS,GAAgBrE,EAAWsE,mBAAmBV,EAElD,KAAK9K,KAAKyH,QACTzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEjF,IAAIkB,IAAgBC,EAAIC,EAAE1I,KAAK2H,aAAaN,OAAO,CAEnDrH,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EACvCvL,MAAKqI,WAAWE,KAAKC,EAAQ,GAAK+C,EAAK,EAEvC,KAAKvL,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBAsBCkF,GAAA7G,UAAAoL,UAAP,SAAiBvD,EAAgBwD,GAEhC,IAAK5L,KAAKyH,QACTzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEjFsE,GAAeC,SAAW,CAC1B,IAAIxM,GAAmB+E,EAAmBoE,CAC1C,KAAKnJ,EAAI,EAAGA,EAAI+I,EAAKf,QAAShI,EAAG,CAChC,IAAK+E,EAAI,EAAGA,EAAIgE,EAAKd,SAAUlD,EAAG,CACjCoE,GAASnJ,EAAI+I,EAAKK,GAAKrE,EAAIgE,EAAKM,GAAG1I,KAAK2H,aAAaN,OAAO,CAE5DrH,MAAKqI,WAAWE,KAAKC,EAAQ,GAAKoD,EAAeE,iBACjD9L,MAAKqI,WAAWE,KAAKC,EAAQ,GAAKoD,EAAeE,iBACjD9L,MAAKqI,WAAWE,KAAKC,EAAQ,GAAKoD,EAAeE,iBACjD9L,MAAKqI,WAAWE,KAAKC,EAAQ,GAAKoD,EAAeE,mBAInD,IAAK9L,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBAeCkF,GAAA7G,UAAAwL,OAAP,WAEC,IAAK/L,KAAKyH,QACT,MAEDzH,MAAKyH,QAAU,KAEfzH,MAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAC/CrI,MAAKqI,WAAa,KAOZjB,GAAA7G,UAAA+H,aAAP,WAEC,IAAKtI,KAAKyH,QACT,MAAOzH,MAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,OAEtE,OAAOtH,MAAKqI,WAONjB,GAAA7G,UAAAgK,UAAP,WAEC,MAAOvK,MAAK2H,aASNP,GAAA7G,UAAAyL,SAAP,SAAgB3E,EAAcC,GAE7B,GAAItH,KAAKyH,QACRzH,KAAK8H,SAASqB,aAAanJ,KAAKqI,WAAY,EAAG,EAEhDrI,MAAK2H,aAAaN,MAAQA,CAC1BrH,MAAK2H,aAAaL,OAASA,CAE3B5G,GAAAH,UAAMyL,SAAQrM,KAAAK,KAACqH,EAAOC,EAEtB,IAAItH,KAAKyH,QACRzH,KAAKqI,WAAarI,KAAK8H,SAASQ,aAAa,EAAG,EAAGtI,KAAKiI,MAAMZ,MAAOrH,KAAKiI,MAAMX,QAhxBpEF,GAAA9F,UAAmB,uBAkxBlC,OAAA8F,IApxB4BH,EAsxB5BnH,GAAuBJ,QAAd0H,IVseN6E,+BAA+B,+BAA+BC,yCAAyC,yCAAyCC,mCAAmC,qCAAqCC,2CAA2C,SAASxN,EAAQkB,EAAOJ,GWh0C9R,GAAM2M,GAAkB,WAAxB,QAAMA,MAESA,EAAAC,MAAwB,CACxBD,GAAAE,KAAuB,CACvBF,GAAAG,MAAwB,CACxBH,GAAAI,IAAsB,CACrC,OAAAJ,KAEAvM,GAA4BJ,QAAnB2M,OXo0CHK,wCAAwC,SAAS9N,EAAQkB,EAAOJ,GACtE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYj1CtB,IAAO+G,GAAaxI,EAAa,qCACjC,IAAO+N,GAAS/N,EAAc,iCAI9B,IAAOgO,GAAShO,EAAc,iCAG9B,IAAOsI,GAAUtI,EAAc,mCAE/B,IAAOuI,GAAgBvI,EAAa,yCZu4CpC,IY50CMiO,GAAe,SAAAnM,GAASX,EAAxB8M,EAAenM,EAwEpB,SAxEKmM,GAwEOlI,EAAa4C,EAA4BC,GAA5B,GAAAD,QAAA,GAA0B,CAA1BA,EAAA,KAA4B,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,KAEpD9G,EAAAf,KAAAK,KAAM2E,EA/DC3E,MAAA2H,aAAwC,GAAI7G,OAAyB,EACrEd,MAAA8H,SAA2C,GAAIhH,OAAgC,EAC/Ed,MAAAqI,WAA8B,GAAIvH,OAAiB,EAEnDd,MAAAyH,QAAkB,KA6DzBzH,MAAK0H,aAAeH,CAEpB,KAAK,GAAIlI,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCW,KAAK2H,aAAatI,GAAyBuI,SAASC,cAAc,SAClE7H,MAAK2H,aAAatI,GAAGgI,MAAQ1C,CAC7B3E,MAAK2H,aAAatI,GAAGiI,OAAS3C,CAC9B3E,MAAK8H,SAASzI,GAAKW,KAAK2H,aAAatI,GAAG0I,WAAW,KAEnD,IAAIP,GAAa,KAChBxH,KAAKgI,SAAS3I,EAAG,GAAIuN,GAAU,EAAG,EAAGjI,EAAMA,GAAO6C,IAhErDrG,OAAAC,eAAWyL,EAAAtM,UAAA,aZ42CJc,IY52CP,WAEC,MAAOwL,GAAgBvL,WZ62CjBC,WAAY,KACZC,aAAc,MYn2CrBL,QAAAC,eAAWyL,EAAAtM,UAAA,eZ82CJc,IY92CP,WAEC,MAAOrB,MAAK0H,cZ+2CN/F,IY52CP,SAAuBC,GAEtB5B,KAAK0H,aAAe9F,GZ62CdL,WAAY,KACZC,aAAc,MYxzCdqL,GAAAtM,UAAA+B,MAAP,WAEC,GAAIxD,GAAoB,GAAI+N,GAAgB7M,KAAKmF,MAAOnF,KAAKuH,YAE7D,KAAK,GAAIlI,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCP,EAAEoJ,KAAK7I,EAAGW,KAAKuK,UAAUlL,IAE1B,MAAOP,GAcD+N,GAAAtM,UAAA4H,eAAP,SAAsB2E,EAAa1E,EAAgBD,GAElD,IAAKnI,KAAKyH,QACTzH,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAIoD,GAAqBvI,KAAKqI,WAAWyE,GAAMvE,IAE/C,IAAIlJ,GAAmB+E,EAAmBoE,CAC1C,KAAKnJ,EAAI,EAAGA,EAAI+I,EAAKf,QAAShI,EAAG,CAChC,IAAK+E,EAAI,EAAGA,EAAIgE,EAAKd,SAAUlD,EAAG,CACjCoE,GAASnJ,EAAI+I,EAAKK,GAAKrE,EAAIgE,EAAKM,GAAG1I,KAAKmF,OAAO,CAE/CoD,GAAKC,GAASD,EAAKC,GAAOL,EAAeQ,cAAgBR,EAAeS,SACxEL,GAAKC,EAAQ,GAAKD,EAAKC,EAAQ,GAAGL,EAAeU,gBAAkBV,EAAeW,WAClFP,GAAKC,EAAQ,GAAKD,EAAKC,EAAQ,GAAGL,EAAeY,eAAiBZ,EAAea,UACjFT,GAAKC,EAAQ,GAAKD,EAAKC,EAAQ,GAAGL,EAAec,gBAAkBd,EAAee,aAIpF,IAAKlJ,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D9M,MAAKqI,WAAWyE,GAAQ,KAGzB9M,KAAKkC,oBA8CC2K,GAAAtM,UAAA6I,YAAP,SAAmB0D,EAAazD,EAA4BC,EAAsBC,EAAiBC,EAAsBC,GAExH,GAAIC,GAAsBL,EAAaf,cAEvC,KAAKtI,KAAKyH,QACTzH,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAIwE,GAA2BN,EAAaf,eAAeC,IAC3D,IAAIqB,GAAyB5J,KAAKqI,WAAWyE,GAAMvE,IAEnD,IAAIsB,GAAsBC,KAAKC,MAAMD,KAAKE,IAAIR,GAAeM,KAAKE,IAAI,GACtE,IAAIC,GAAoBH,KAAKC,MAAMD,KAAKE,IAAIP,GAAaK,KAAKE,IAAI,GAElE,IAAI3K,GAAmB+E,EAAmB8F,EAA6BC,CACvE,KAAK9K,EAAI,EAAGA,EAAIiK,EAAWjC,QAAShI,EAAG,CACtC,IAAK+E,EAAI,EAAGA,EAAIkF,EAAWhC,SAAUlD,EAAG,CACvC8F,GAAe7K,EAAIiK,EAAWb,GAAKrE,EAAIkF,EAAWZ,GAAGW,EAAahC,OAAO,CACzE8C,IAAa9K,EAAIkK,EAAUd,GAAKrE,EAAImF,EAAUb,GAAG1I,KAAKmF,OAAO,CAE7DyE,GAASO,EAAYF,GAAcN,EAAWO,EAAcL,IAI9D,IAAK7J,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D9M,MAAKqI,WAAWyE,GAAQ,KAGzB9M,KAAKkC,oBA4CC2K,GAAAtM,UAAA6J,WAAP,SAAkB0C,EAAazC,EAAYf,EAAsBgB,GAEhE,GAAID,YAAkBjD,GACrBiD,EAASA,EAAOE,WAEjB,IAAIvK,KAAKyH,QAAS,CAQjBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D3F,GAAiBqD,YAAYxK,KAAK8H,SAASgF,GAAOzC,EAAQf,EAAYgB,EACtEtK,MAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,WAE1E,CACNgC,EAAiBqD,YAAYxK,KAAK8H,SAASgF,GAAOzC,EAAQf,EAAYgB,GAGvEtK,KAAKkC,oBAsBC2K,GAAAtM,UAAA8B,QAAP,WAEC3B,EAAAH,UAAM8B,QAAO1C,KAAAK,KAEb,KAAK,GAAIX,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCW,KAAK8H,SAASzI,GAAK,IACnBW,MAAK2H,aAAatI,GAAK,IACvBW,MAAKqI,WAAWhJ,GAAK,KAGtBW,KAAK0H,aAAe,IACpB1H,MAAKyH,QAAU,KA6EToF,GAAAtM,UAAA2H,KAAP,SAAY4E,EAAazC,EAAYI,EAAgBtC,EAAgCuC,EAAsBC,EAAqBC,GAE/H,GAAIP,YAAkBjD,GACrBiD,EAASA,EAAOE,WAEjB,IAAIvK,KAAKyH,QAAS,CAQjBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D3F,GAAiB0D,MAAM7K,KAAK8H,SAASgF,GAAOzC,EAAQI,EAAQtC,EAAgBuC,EAAWC,EAAUC,EACjG5K,MAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,WAC1E,CACNgC,EAAiB0D,MAAM7K,KAAK8H,SAASgF,GAAOzC,EAAQI,EAAQtC,EAAgBuC,EAAWC,EAAUC,GAGlG5K,KAAKkC,oBAYC2K,GAAAtM,UAAAyH,SAAP,SAAgB8E,EAAa1E,EAAgB0C,GAE5C,GAAI9K,KAAKyH,QAAS,CAQjB,GAAIzH,KAAKqI,WAAWyE,GACnB9M,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAE5D3F,GAAiB4D,UAAU/K,KAAK8H,SAASgF,GAAO1E,EAAM0C,EAAO9K,KAAK0H,aAElE,IAAI1H,KAAKqI,WAAWyE,GACnB9M,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,WAC3E,CACNgC,EAAiB4D,UAAU/K,KAAK8H,SAASgF,GAAO1E,EAAM0C,EAAO9K,KAAK0H,cAGnE1H,KAAKkC,oBA0BC2K,GAAAtM,UAAAyK,SAAP,SAAgB8B,EAAarE,EAAUC,GAEtC,GAAI1J,EACJ,IAAIiM,EACJ,IAAI/K,EACJ,IAAId,EAEJ,KAAKY,KAAKyH,QAAS,CAClB,GAAIyD,GAAsBlL,KAAK8H,SAASgF,GAAMxE,aAAaG,EAAGC,EAAG,EAAG,EAEpE1J,GAAIkM,EAAU3C,KAAK,EACnB0C,GAAIC,EAAU3C,KAAK,EACnBrI,GAAIgL,EAAU3C,KAAK,EACnBnJ,GAAI8L,EAAU3C,KAAK,OAEb,CACN,GAAIC,IAAgBC,EAAIC,EAAE1I,KAAKmF,OAAO,CAEtCnG,GAAIgB,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,EACvCyC,GAAIjL,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,EACvCtI,GAAIF,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,EACvCpJ,GAAIY,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAIxC,IAAKpJ,EACJ,MAAO,EAER,OAAQJ,IAAK,GAAOiM,GAAK,EAAK/K,EAyBxB2M,GAAAtM,UAAA4K,WAAP,SAAkB2B,EAAarE,EAAGC,GAEjC,GAAI1J,EACJ,IAAIiM,EACJ,IAAI/K,EACJ,IAAId,EAEJ,KAAKY,KAAKyH,QAAS,CAClB,GAAIyD,GAAsBlL,KAAK8H,SAASgF,GAAMxE,aAAaG,EAAGC,EAAG,EAAG,EAEpE1J,GAAIkM,EAAU3C,KAAK,EACnB0C,GAAIC,EAAU3C,KAAK,EACnBrI,GAAIgL,EAAU3C,KAAK,EACnBnJ,GAAI8L,EAAU3C,KAAK,OAEb,CACN,GAAIC,IAAgBC,EAAIC,EAAE1I,KAAKmF,OAAO,CAEtCnG,GAAIgB,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,EACvCyC,GAAIjL,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,EACvCtI,GAAIF,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,EACvCpJ,GAAIY,KAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAGxC,MAAQpJ,IAAK,GAAOJ,GAAK,GAAOiM,GAAK,EAAK/K,EAWpC2M,GAAAtM,UAAA6K,KAAP,WAEC,GAAIpL,KAAKyH,QACR,MAEDzH,MAAKyH,QAAU,IAEf,KAAK,GAAIpI,GAAW,EAAGA,EAAI,EAAGA,IAC7BW,KAAKqI,WAAWhJ,GAAKW,KAAK8H,SAASzI,GAAGiJ,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,OAerE0H,GAAAtM,UAAA8K,SAAP,SAAgByB,EAAa1E,EAAgBkD,GAE5C,IAAKtL,KAAKyH,QACTzH,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAI9F,GAAmB+E,EAAmBoE,EAAuB+C,CACjE,KAAKlM,EAAI,EAAGA,EAAI+I,EAAKf,QAAShI,EAAG,CAChC,IAAK+E,EAAI,EAAGA,EAAIgE,EAAKd,SAAUlD,EAAG,CACjCmH,EAAOrE,EAAWsE,mBAAmBF,EAAWjM,EAAI+E,EAAEgE,EAAKf,OAC3DmB,IAASnJ,EAAI+I,EAAKK,GAAKrE,EAAIgE,EAAKM,GAAG1I,KAAKmF,OAAO,CAE/CnF,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,IAI/C,IAAKvL,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D9M,MAAKqI,WAAWyE,GAAQ,KAGzB9M,KAAKkC,oBAoBC2K,GAAAtM,UAAAkL,SAAP,SAAgBqB,EAAarE,EAAUC,EAAUoC,GAEhD,GAAIS,GAAgBrE,EAAWsE,mBAAmBV,EAElD,KAAK9K,KAAKyH,QACTzH,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAIqD,IAAgBC,EAAIC,EAAE1I,KAAKmF,OAAO,CAEtCnF,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK,GAExC,KAAKxI,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D9M,MAAKqI,WAAa,KAGnBrI,KAAKkC,oBAkCC2K,GAAAtM,UAAAmL,WAAP,SAAkBoB,EAAarE,EAAGC,EAAGoC,GAEpC,GAAIS,GAAgBrE,EAAWsE,mBAAmBV,EAElD,KAAK9K,KAAKyH,QACTzH,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAIqD,IAAgBC,EAAIC,EAAE1I,KAAKmF,OAAO,CAEtCnF,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAC7CvL,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAK+C,EAAK,EAE7C,KAAKvL,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D9M,MAAKqI,WAAWyE,GAAQ,KAGzB9M,KAAKkC,oBAsBC2K,GAAAtM,UAAAoL,UAAP,SAAiBmB,EAAa1E,EAAgBwD,GAE7C,IAAK5L,KAAKyH,QACTzH,KAAKqI,WAAWyE,GAAQ9M,KAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEjFyG,GAAeC,SAAW,CAC1B,IAAIxM,GAAmB+E,EAAmBoE,CAC1C,KAAKnJ,EAAI,EAAGA,EAAI+I,EAAKf,QAAShI,EAAG,CAChC,IAAK+E,EAAI,EAAGA,EAAIgE,EAAKd,SAAUlD,EAAG,CACjCoE,GAASnJ,EAAI+I,EAAKK,GAAKrE,EAAIgE,EAAKM,GAAG1I,KAAKmF,OAAO,CAE/CnF,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAKoD,EAAeE,iBACvD9L,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAKoD,EAAeE,iBACvD9L,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAKoD,EAAeE,iBACvD9L,MAAKqI,WAAWyE,GAAMvE,KAAKC,EAAQ,GAAKoD,EAAeE,mBAIzD,IAAK9L,KAAKyH,QAAS,CAClBzH,KAAK8H,SAASgF,GAAM3D,aAAanJ,KAAKqI,WAAWyE,GAAO,EAAG,EAC3D9M,MAAKqI,WAAWyE,GAAQ,KAGzB9M,KAAKkC,oBAeC2K,GAAAtM,UAAAwL,OAAP,WAEC,IAAK/L,KAAKyH,QACT,MAEDzH,MAAKyH,QAAU,KAEf,KAAK,GAAIpI,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCW,KAAK8H,SAASzI,GAAG8J,aAAanJ,KAAKqI,WAAWhJ,GAAI,EAAG,EACrDW,MAAKqI,WAAWhJ,GAAK,MAQhBwN,GAAAtM,UAAA+H,aAAP,SAAoBwE,GAEnB,IAAK9M,KAAKyH,QACT,MAAOzH,MAAK8H,SAASgF,GAAMxE,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,MAEhE,OAAOnF,MAAKqI,WAAWyE,GAOjBD,GAAAtM,UAAAgK,UAAP,SAAiBuC,GAEhB,MAAO9M,MAAK2H,aAAamF,GASnBD,GAAAtM,UAAAyL,SAAP,SAAgBrH,GAEfjE,EAAAH,UAAMyL,SAAQrM,KAAAK,KAAC2E,EAEf,KAAK,GAAItF,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClC,GAAIW,KAAKyH,QACRzH,KAAK8H,SAASzI,GAAG8J,aAAanJ,KAAKqI,WAAWhJ,GAAI,EAAG,EAEtDW,MAAK2H,aAAatI,GAAGgI,MAAQ1C,CAC7B3E,MAAK2H,aAAatI,GAAGiI,OAAS3C,CAE9B,IAAI3E,KAAKyH,QACRzH,KAAKqI,WAAWhJ,GAAKW,KAAK8H,SAASzI,GAAGiJ,aAAa,EAAG,EAAGtI,KAAKmF,MAAOnF,KAAKmF,QApyB/D0H,GAAAvL,UAAmB,yBAEnBuL,GAAAE,KAAc,CACdF,GAAAG,KAAc,CACdH,GAAAI,KAAc,CACdJ,GAAAK,KAAc,CACdL,GAAAM,KAAc,CACdN,GAAAO,KAAc,CAgyB7B,OAAAP,IAzyB8BF,EA2yBL7M,GAAAJ,QAAhBmN,IZsnCN7F,qCAAqC,qCAAqCqG,iCAAiC,iCAAiCC,iCAAiC,iCAAiCpB,yCAAyC,yCAAyCC,mCAAmC,qCAAqCoB,kCAAkC,SAAS3O,EAAQkB,EAAOJ,GAWra,Gav+DM8N,GAAS,WAAf,QAAMA,MAYSA,EAAAC,IAAa,KAUbD,GAAAlB,MAAe,OAcfkB,GAAAE,OAAgB,QAahBF,GAAAG,WAAoB,YASpBH,GAAAI,MAAe,OAYfJ,GAAAK,UAAmB,WAKnBL,GAAAM,OAAgB,QAYhBN,GAAAO,MAAe,OAcfP,GAAAQ,QAAiB,SAejBR,GAAAS,SAAkB,UAOlBT,GAAAU,OAAgB,QAYhBV,GAAAW,QAAiB,SAQjBX,GAAAY,OAAgB,QAqBhBZ,GAAAa,OAAgB,QAYhBb,GAAAc,SAAkB,UACjC,OAAAd,KAEA1N,GAAmBJ,QAAV8N,Ob49DHe,yCAAyC,SAAS3P,EAAQkB,EAAOJ,GACvE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gc7pEtB,IAAOkG,GAAgB3H,EAAa,8CACpC,IAAOyH,GAAgBzH,EAAa,8CAEpC,IAAO4P,GAAe5P,EAAa,uCAInC,IAAO6P,GAAgB7P,EAAa,yCd+pEpC,Ic1pEM8P,GAAgB,SAAAhO,GAASX,EAAzB2O,EAAgBhO,EAgGrB,SAhGKgO,GAgGOC,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXjO,EAAAf,KAAAK,KAAM2O,EA9FC3O,MAAA4O,aAAsB,CACtB5O,MAAA6O,UAAoB,IAMpB7O,MAAA8O,eAAyB,KAEzB9O,MAAA+O,QAAiB,CACjB/O,MAAAgP,QAAiB,CAsFxBhP,MAAKiP,WAAa,GAAI1I,GAAiBvG,KAAKkP,oBAE5ClP,MAAKmP,QAAU,GAAI9I,GAAiBrG,KAAKkP,qBArF1C/N,OAAAC,eAAWsN,EAAAnO,UAAA,ad0pEJc,Ic1pEP,WAEC,MAAOqN,GAAiBpN,Wd2pElBC,WAAY,KACZC,aAAc,MczpErBL,QAAAC,eAAWsN,EAAAnO,UAAA,ed4pEJc,Ic5pEP,WAEC,MAAOrB,MAAK4O,cd6pENrN,WAAY,KACZC,aAAc,MctpErBL,QAAAC,eAAWsN,EAAAnO,UAAA,iBd8pEJc,Ic9pEP,WAEC,MAAOrB,MAAK8O,gBd+pENnN,Ic5pEP,SAAyBC,GAExB,GAAI5B,KAAK8O,gBAAkBlN,EAC1B,MAED5B,MAAK8O,eAAiBlN,CAEtB,IAAIA,EACH5B,KAAK6O,UAAY,Md2pEZtN,WAAY,KACZC,aAAc,MctpErBL,QAAAC,eAAWsN,EAAAnO,UAAA,Ud4pEJc,Ic5pEP,WAEC,MAAOrB,MAAK+O,Sd6pENxN,WAAY,KACZC,aAAc,McxpErBL,QAAAC,eAAWsN,EAAAnO,UAAA,Ud8pEJc,Ic9pEP,WAEC,MAAOrB,MAAKgP,Sd+pENzN,WAAY,KACZC,aAAc,Mc1pErBL,QAAAC,eAAWsN,EAAAnO,UAAA,adgqEJc,IchqEP,WAEC,MAAOrB,MAAKiP,YdiqEN1N,WAAY,KACZC,aAAc,Mc5pErBL,QAAAC,eAAWsN,EAAAnO,UAAA,UdkqEJc,IclqEP,WAEC,MAAOrB,MAAKmP;EdmqEN5N,WAAY,KACZC,aAAc,Mc5pErBL,QAAAC,eAAWsN,EAAAnO,UAAA,OdkqEJc,IclqEP,WAEC,GAAIrB,KAAK6O,UACR7O,KAAKoP,OAAOpP,KAAKqP,KAElB,OAAOrP,MAAKqP,MdkqEN9N,WAAY,KACZC,aAAc,McppEdkN,GAAAnO,UAAA+O,qBAAP,WAEC,MAAOtP,MAAKiP,WAAW5N,IAAIrB,KAAK4O,cAS1BF,GAAAnO,UAAAgP,aAAP,SAAoB/J,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAI0C,GAAUxF,KAAKiP,WAClB,MAED,IAAIzJ,YAAkBe,GAAkB,CACvCvG,KAAKwP,sBAAsBxP,KAAKiP,WAChCjP,MAAKiP,WAAgCzJ,MAC/B,IAAIA,EAAQ,CAClBxF,KAAKiP,WAAWtN,IAAI6D,EAAQ1C,OACtB,CACN9C,KAAKwP,sBAAsBxP,KAAKiP,WAChCjP,MAAKiP,WAAa,GAAI1I,GAAiBvG,KAAKkP,qBAG7ClP,KAAK4O,aAAe5O,KAAKiP,WAAWrO,KAEpC,IAAIZ,KAAK8O,eACR9O,KAAKyP,qBAAqBzP,KAAKqP,KAEhCrP,MAAK0P,mBAEL1P,MAAKyP,qBAAqBzP,KAAKiP,WAE/BjP,MAAK2P,eAAe3P,KAAKiP,WAAWW,IAAM,MASpClB,GAAAnO,UAAAsP,UAAP,SAAiBrK,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAI0C,GAAUxF,KAAKmP,QAClB,MAED,IAAI3J,YAAkBa,GAAkB,CACvCrG,KAAKwP,sBAAsBxP,KAAKmP,QAChCnP,MAAKmP,QAA6B3J,MAC5B,IAAIA,EAAQ,CAClBxF,KAAKmP,QAAQxN,IAAI6D,EAAQ1C,OACnB,CACN9C,KAAKwP,sBAAsBxP,KAAKmP,QAChCnP,MAAKmP,QAAU,GAAI9I,GAAiBrG,KAAKkP,qBAG1ClP,KAAKyP,qBAAqBzP,KAAKmP,QAE/BnP,MAAK2P,eAAe3P,KAAKmP,QAAQS,IAAM,MAUjClB,GAAAnO,UAAA6O,OAAP,SAAc5J,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAK9C,KAAK8O,eAAgB,CACzB,GAAItJ,GAAUxF,KAAKqP,KAClB,MAED,IAAI7J,YAAkBa,GAAkB,CACvCrG,KAAKwP,sBAAsBxP,KAAKqP,KAChCrP,MAAKqP,KAA0B7J,MACzB,IAAIA,EAAQ,CAClB,IAAKxF,KAAKqP,KACTrP,KAAKqP,KAAO,GAAIhJ,GAAiBrG,KAAKkP,oBAEvClP,MAAKqP,KAAK1N,IAAI6D,EAAQ1C,OAChB,IAAI9C,KAAKqP,KAAM,CACrBrP,KAAKwP,sBAAsBxP,KAAKqP,KAChCrP,MAAKqP,KAAO,IACZ,aAEK,CACNrP,KAAKqP,KAAOZ,EAAiBqB,YAAY9P,KAAK+P,UAAW/P,KAAKqP,KAAMrP,KAAKkP,oBAAqBlP,KAAK4O,cAGpG5O,KAAKyP,qBAAqBzP,KAAKqP,KAE/BrP,MAAK2P,eAAe3P,KAAKqP,KAAKO,IAAM,MAO9BlB,GAAAnO,UAAA8B,QAAP,WAEC3B,EAAAH,UAAM8B,QAAO1C,KAAAK,KAEbA,MAAKiP,WAAW5M,SAChBrC,MAAKiP,WAAa,IAElBjP,MAAKmP,QAAQ9M,SACbrC,MAAKmP,QAAU,IAEf,IAAInP,KAAKqP,KAAM,CACdrP,KAAKqP,KAAKhN,SACVrC,MAAKqP,KAAO,MASPX,GAAAnO,UAAA+B,MAAP,WAEC,GAAIA,GAAyB,GAAIoM,GAAiB1O,KAAKkP,oBAAqBlP,KAAKkP,oBAAoB5M,QAAU,KAE/GA,GAAM0N,WAAWhQ,KAAK+P,UAAUzN,QAEhCA,GAAMiN,aAAavP,KAAKiP,WAAW3M,QAEnCA,GAAMuN,UAAU7P,KAAKmP,QAAQ7M,QAE7BA,GAAM8M,OAAQpP,KAAKqP,OAASrP,KAAK8O,eAAiB9O,KAAKqP,KAAK/M,QAAU,KAEtE,OAAOA,GAGDoM,GAAAnO,UAAA0P,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC1B,EAAiB2B,SAASF,EAAQC,EAAQnQ,KAAKqQ,IAAKrQ,KAAKqQ,IAAIzP,OAYvD8N,GAAAnO,UAAA+P,MAAP,SAAaA,GAEZ7B,EAAiB6B,MAAMA,EAAOtQ,KAAKuQ,UAAWvQ,KAAK4O,cAG7CF,GAAAnO,UAAAiQ,oBAAP,SAA2BC,GAE1BhC,EAAiB+B,oBAAoBC,EAAWzQ,KAAKuQ,UAAW,KAAM,KAAMvQ,KAAKuQ,UAAU3P,OAvQ9E8N,GAAApN,UAAmB,0BAyQlC,OAAAoN,IA3Q+BF,EA6QL1O,GAAAJ,QAAjBgP,IdymENtI,8CAA8C,8CAA8CE,8CAA8C,8CAA8CoK,uCAAuC,uCAAuCC,yCAAyC,2CAA2CC,iCAAiC,SAAShS,EAAQkB,EAAOJ,GACtZ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gev4EtB,IAAOwQ,GAAajS,EAAa,uCAGjC,IAAO4B,GAAS5B,EAAc,oCfs5E9B,Iet4EMkS,GAAQ,SAAApQ,GAASX,EAAjB+Q,EAAQpQ,EAsBb,SAtBKoQ,KAwBJpQ,EAAAf,KAAAK,KAEAA,MAAK+Q,eAAiB,GAAIjQ,OApB3BK,OAAAC,eAAW0P,EAAAvQ,UAAA,af04EJc,Ie14EP,WAEC,MAAOyP,GAASxP,Wf24EVC,WAAY,KACZC,aAAc,Met4ErBL,QAAAC,eAAW0P,EAAAvQ,UAAA,iBf44EJc,Ie54EP,WAEC,MAAOrB,MAAK+Q,gBf64ENxP,WAAY,KACZC,aAAc,Mej4EdsP,GAAAvQ,UAAAiQ,oBAAP,SAA2BC,GAE1B,GAAItO,GAAanC,KAAK+Q,eAAenR,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,IAAO9C,EACjCW,KAAK+Q,eAAe1R,GAAGmR,oBAAoBC,GAOtCK,GAAAvQ,UAAAyQ,eAAP,SAAsBC,GAErBjR,KAAK+Q,eAAenN,KAAKqN,EAEzBA,GAAYC,eAAiBlR,IAE7B,IAAIA,KAAKmR,iBAAiBN,EAAcO,oBACvCpR,KAAKqR,cAAc,GAAIR,GAAcA,EAAcO,mBAAoBH,GAExEjR,MAAKsR,kBAAkBL,GAOjBH,GAAAvQ,UAAAgR,kBAAP,SAAyBN,GAExBjR,KAAK+Q,eAAejN,OAAO9D,KAAK+Q,eAAehN,QAAQkN,GAAc,EAErEA,GAAYC,eAAiB,IAE7B,IAAIlR,KAAKmR,iBAAiBN,EAAcW,sBACvCxR,KAAKqR,cAAc,GAAIR,GAAcA,EAAcW,qBAAsBP,GAE1EjR,MAAKsR,kBAAkBL,GAOjBH,GAAAvQ,UAAA+B,MAAP,WAEC,GAAIA,GAAiB,GAAIwO,EACzB,IAAI3O,GAAanC,KAAK+Q,eAAenR,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,IAAO9C,EACjCiD,EAAM0O,eAAehR,KAAK+Q,eAAe1R,GAAGiD,QAE7C,OAAOA,GAODwO,GAAAvQ,UAAA+P,MAAP,SAAaA,GAEZ,GAAImB,GAAqBzR,KAAK+Q,eAAenR,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAIoS,IAAepS,EACzCW,KAAK+Q,eAAe1R,GAAGiR,MAAMA,GAMxBQ,GAAAvQ,UAAA8B,QAAP,WAEC,GAAIoP,GAAqBzR,KAAK+Q,eAAenR,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAIoS,IAAepS,EAAG,CAC5C,GAAIqS,GAA0B1R,KAAK+Q,eAAe,EAClD/Q,MAAKuR,kBAAkBG,EACvBA,GAAQrP,WASHyO,GAAAvQ,UAAA0P,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIsB,GAAqBzR,KAAK+Q,eAAenR,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAIoS,IAAepS,EACzCW,KAAK+Q,eAAe1R,GAAG4Q,QAAQC,EAAQC,GAGlCW,GAAAvQ,UAAA+Q,kBAAP,SAAyBI,GAExB,GAAI1R,KAAKmR,iBAAiBN,EAAcc,gBACvC3R,KAAKqR,cAAc,GAAIR,GAAcA,EAAcc,eAAgBD,IA1HvDZ,GAAAxP,UAAmB,kBA4HlC,OAAAwP,IA9HuBtQ,EAgIvBV,GAAkBJ,QAAToR,If+2ENc,uCAAuC,uCAAuC/M,oCAAoC,sCAAsCoH,gCAAgC,SAASrN,EAAQkB,EAAOJ,GACnN,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgBxgFtB,IAAOwR,GAASjT,EAAc,iCAC9B,IAAOgO,GAAShO,EAAc,iCAC9B,IAAOkT,GAAUlT,EAAc,mCAE/B,IAAMqI,GAAO,SAAAvG,GAASX,EAAhBkH,EAAOvG,EA4DZ,SA5DKuG,GA4DOI,EAAcC,GAEzB5G,EAAAf,KAAAK,KAEAA,MAAKiI,MAAQ,GAAI2E,GAAU,EAAG,EAAGvF,EAAOC,EAExCtH,MAAK+R,kBAxDN5Q,OAAAC,eAAW6F,EAAA1G,UAAA,ahB8gFJc,IgB9gFP,WAEC,MAAO4F,GAAQ3F,WhB+gFTC,WAAY,KACZC,aAAc,MgB1gFrBL,QAAAC,eAAW6F,EAAA1G,UAAA,UhBghFJc,IgBhhFP,WAEC,MAAOrB,MAAKiI,MAAMX,QhBihFZ3F,IgB9gFP,SAAkBC,GAEjB,GAAI5B,KAAKiI,MAAMX,QAAU1F,EACxB,MAED5B,MAAKgM,SAAShM,KAAKiI,MAAMZ,MAAOzF,IhB8gF1BL,WAAY,KACZC,aAAc,MgBvgFrBL,QAAAC,eAAW6F,EAAA1G,UAAA,QhB+gFJc,IgB/gFP,WAEC,MAAOrB,MAAKiI,OhBghFN1G,WAAY,KACZC,aAAc,MgB3gFrBL,QAAAC,eAAW6F,EAAA1G,UAAA,ShBihFJc,IgBjhFP,WAEC,MAAOrB,MAAKiI,MAAMZ,OhBkhFZ1F,IgB/gFP,SAAiBC,GAEhB,GAAI5B,KAAKiI,MAAMZ,OAASzF,EACvB,MAED5B,MAAKgM,SAASpK,EAAO5B,KAAKiI,MAAMX,ShB+gF1B/F,WAAY,KACZC,aAAc,MgB3/EdyF,GAAA1G,UAAAyL,SAAP,SAAgB3E,EAAcC,GAE7B,GAAItH,KAAKiI,MAAMZ,OAASA,GAASrH,KAAKiI,MAAMX,QAAUA,EACrDtH,KAAKgS,gBAENhS,MAAKiI,MAAMZ,MAAQA,CACnBrH,MAAKiI,MAAMX,OAASA,CAEpBtH,MAAK+R,kBAOE9K,GAAA1G,UAAAwR,gBAAR,WAEC,IAAKD,EAAWG,iBAAiBjS,KAAKiI,MAAMZ,SAAWyK,EAAWG,iBAAiBjS,KAAKiI,MAAMX,QAC7F,KAAM,IAAI/H,OAAM,iFA3FJ0H,GAAA3F,UAAmB,iBA6FlC,OAAA2F,IA/FsB4K,EAiGtB/R,GAAiBJ,QAARuH,IhBigFNiL,iCAAiC,iCAAiC5E,iCAAiC,iCAAiC6E,mCAAmC,qCAAqCD,kCAAkC,SAAStT,EAAQkB,EAAOJ,GACzQ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiBtmFtB,IAAOG,GAAS5B,EAAc,oCAI9B,IAAMiT,GAAS,SAAAnR,GAASX,EAAlB8R,EAASnR,EAOd,SAPKmR,KASJnR,EAAAf,KAAAK,KAPOA,MAAAoS,aAAmC,GAAItR,OAaxC+Q,EAAAtR,UAAA2B,kBAAP,WAEC,GAAIC,GAAanC,KAAKoS,aAAaxS,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,EAAK9C,IAC/BW,KAAKoS,aAAa/S,GAAG+C,aAOhByP,GAAAtR,UAAAyR,eAAP,WAEC,MAAOhS,KAAKoS,aAAaxS,OACxBI,KAAKoS,aAAa,GAAG/P,UAMhBwP,GAAAtR,UAAA8B,QAAP,WAEC,MAAOrC,KAAKoS,aAAaxS,OACxBI,KAAKoS,aAAa,GAAG/P,UAIhBwP,GAAAtR,UAAA8R,iBAAP,SAAwBC,GAEvBtS,KAAKoS,aAAaxO,KAAK0O,EAEvB,OAAOA,GAGDT,GAAAtR,UAAAgS,oBAAP,SAA2BD,GAE1BtS,KAAKoS,aAAatO,OAAO9D,KAAKoS,aAAarO,QAAQuO,GAAc,EAEjE,OAAOA,GAET,OAAAT,IAvDwBrR,EAyDLV,GAAAJ,QAAVmS,IjBwlFNhN,oCAAoC,sCAAsCwI,kCAAkC,SAASzO,EAAQkB,EAAOJ,GACvI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkB/pFtB,IAAOwR,GAASjT,EAAc,iCAC9B,IAAOkT,GAAUlT,EAAc,mCAE/B,IAAM+N,GAAS,SAAAjM,GAASX,EAAlB4M,EAASjM,EAkCd,SAlCKiM,GAkCOhI,GAEXjE,EAAAf,KAAAK,KAEAA,MAAKmF,MAAQR,CAEb3E,MAAK+R,kBA9BN5Q,OAAAC,eAAWuL,EAAApM,UAAA,alBqqFJc,IkBrqFP,WAEC,MAAOsL,GAAUrL,WlBsqFXC,WAAY,KACZC,aAAc,MkBjqFrBL,QAAAC,eAAWuL,EAAApM,UAAA,QlBuqFJc,IkBvqFP,WAEC,MAAOrB,MAAKmF,OlBwqFNxD,IkBrqFP,SAAgBC,GAEf,GAAI5B,KAAKmF,OAASvD,EACjB,MAED5B,MAAKgM,SAAShM,KAAKmF,QlBqqFb5D,WAAY,KACZC,aAAc,MkBjpFdmL,GAAApM,UAAAyL,SAAP,SAAgBrH,GAEf,GAAI3E,KAAKmF,OAASR,EACjB3E,KAAKgS,gBAENhS,MAAKmF,MAAQR,CAEb3E,MAAK+R,kBAOEpF,GAAApM,UAAAwR,gBAAR,WAEC,IAAKD,EAAWG,iBAAiBjS,KAAKmF,OACrC,KAAM,IAAI5F,OAAM,iFAhEJoN,GAAArL,UAAmB,mBAkElC,OAAAqL,IApEwBkF,EAsEL/R,GAAAJ,QAAViN,IlBupFNuF,iCAAiC,iCAAiCC,mCAAmC,qCAAqCK,wCAAwC,SAAS5T,EAAQkB,EAAOJ,GAC7M,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmBpuFtB,IAAO0E,GAAcnG,EAAa,4CAClC,IAAOiH,GAAejH,EAAa,6CAEnC,IAAOsH,GAAgBtH,EAAa,8CAEpC,IAAO4P,GAAe5P,EAAa,uCAGnC,IAAO6P,GAAgB7P,EAAa,yCnBsuFpC,ImBjuFM6T,GAAe,SAAA/R,GAASX,EAAxB0S,EAAe/R,EAyDpB,SAzDK+R,GAyDO9D,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXjO,EAAAf,KAAAK,KAAM2O,EAvDC3O,MAAA4O,aAAsB,CAyD7B5O,MAAKiP,WAAa,GAAIlK,GAAeoB,aAAc,EAAGwI,GA/CvDxN,OAAAC,eAAWqR,EAAAlS,UAAA,anBmuFJc,ImBnuFP,WAEC,MAAOoR,GAAgBnR,WnBouFjBC,WAAY,KACZC,aAAc,MmB/tFrBL,QAAAC,eAAWqR,EAAAlS,UAAA,anBquFJc,ImBruFP,WAEC,MAAOrB,MAAKiP,YnBsuFN1N,WAAY,KACZC,aAAc,MmBjuFrBL,QAAAC,eAAWqR,EAAAlS,UAAA,anBuuFJc,ImBvuFP,WAEC,MAAOrB,MAAK0S,YnBwuFNnR,WAAY,KACZC,aAAc,MmBnuFrBL,QAAAC,eAAWqR,EAAAlS,UAAA,UnByuFJc,ImBzuFP,WAEC,IAAKrB,KAAK2S,QACT3S,KAAK4S,UAAU5S,KAAK2S,QAErB,OAAO3S,MAAK2S,SnByuFNpR,WAAY,KACZC,aAAc,MmBpuFrBL,QAAAC,eAAWqR,EAAAlS,UAAA,enB0uFJc,ImB1uFP,WAEC,MAAOrB,MAAK4O,cnB2uFNrN,WAAY,KACZC,aAAc,MmB/tFdiR,GAAAlS,UAAA+O,qBAAP,WAEC,MAAsBtP,MAAKiP,WAAW5N,IAAIrB,KAAK4O,cASzC6D,GAAAlS,UAAAgP,aAAP,SAAoB/J,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAI0C,YAAkBT,GAAgB,CACrC/E,KAAKwP,sBAAsBxP,KAAKiP,WAChCjP,MAAKiP,WAA8BzJ,MAC7B,IAAIA,EAAQ,CAClB,GAAInG,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIoE,GAAe,CACnB,IAAI+H,GAAyB,GAAIpK,cAAaX,EAAO5F,OAAO,EAC5D,IAAIiT,GAAsB,GAAIjM,aAAYpB,EAAO5F,OAEjD,OAAOP,EAAImG,EAAO5F,OAAQ,CACzB,GAAI4I,EAAM,EAAI,EAAG,CAChB+H,EAAU/H,GAAShD,EAAOnG,EAAI,EAC9BkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAC9BkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,OAC5B,CACNkR,EAAU/H,GAAShD,EAAOnG,EAC1BkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,EAClCkR,GAAU/H,EAAQ,GAAKhD,EAAOnG,EAAI,GAGnCmJ,GAAS,CAET,MAAMpE,GAAK,EAAG,CACb,GAAIlF,GAAWsJ,EAAM,EAAI,CACzBqK,GAAQlR,KAAKzC,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpD+E,GAAI,CACJ/E,IAAK,GAIPW,KAAKiP,WAAWtN,IAAI4O,EAAWzN,EAAO,EAEtC9C,MAAKgQ,WAAW6C,EAAS/P,OACnB,CACN9C,KAAKwP,sBAAsBxP,KAAKiP,WAChCjP,MAAKiP,WAAa,GAAIlK,GAAeoB,aAAc,EAAGnG,KAAKkP,qBAG5DlP,KAAK4O,aAAe5O,KAAKiP,WAAWrO,KAEpCZ,MAAK0P,mBAEL1P,MAAKyP,qBAAqBzP,KAAKiP,WAE/BjP,MAAK2P,eAAe3P,KAAKiP,WAAWW,IAAM,MASpC6C,GAAAlS,UAAAuS,aAAP,SAAoBtN,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAI0C,YAAkBU,GAAkB,CACvClG,KAAK0S,WAAgClN,MAC/B,IAAIA,EAAQ,CAClB,IAAKxF,KAAK0S,WACT1S,KAAK0S,WAAa,GAAIxM,GAAiBlG,KAAKkP,oBAE7C,IAAI7P,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIoE,GAAe,CACnB,IAAIuK,GAAyB,GAAI5M,cAAaX,EAAO5F,OAAO,EAE5D,OAAOP,EAAImG,EAAO5F,OAAQ,CACzBmT,EAAUvK,GAAUsB,KAAKkJ,MAAM,GAAIxK,EAAQ,IAAO,GAAKhD,EAAOnG,GAAKmG,EAAOnG,EAE1E,MAAM+E,GAAK,EAAG,CACbA,EAAI,CACJ/E,KAGDmJ,IAGDxI,KAAK0S,WAAW/Q,IAAIoR,EAAWjQ,EAAO,OAChC,IAAI9C,KAAK0S,WAAY,CAC3B1S,KAAK0S,WAAWrQ,SAChBrC,MAAK0S,WAAa,KAGnB1S,KAAKyP,qBAAqBzP,KAAK0S,WAE/B1S,MAAK2P,eAAe3P,KAAK0S,WAAW9C,IAAM,MAUpC6C,GAAAlS,UAAAqS,UAAP,SAAiBpN,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAI0C,EAAQ,CACX,GAAIA,GAAUxF,KAAK2S,QAClB,MAED,IAAInN,YAAkBK,GAAiB,CACtC7F,KAAKwP,sBAAsBxP,KAAK2S,QAChC3S,MAAK2S,QAA4BnN,MAC3B,CACN,IAAKxF,KAAK2S,QACT3S,KAAK2S,QAAU,GAAI9M,GAAgB7F,KAAKkP,oBAGzC,IAAI7P,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIoE,GAAe,CACnB,IAAIyK,GAAoB,GAAIjQ,YAAWwC,EAAO5F,OAAO,EAErD,OAAOP,EAAImG,EAAO5F,OAAQ,CACzB,GAAI4I,EAAM,EAAI,EAAG,CAChByK,EAAOzK,GAAShD,EAAOnG,EAAI,EAC3B4T,GAAOzK,EAAQ,GAAKhD,EAAOnG,EAAI,EAC/B4T,GAAOzK,EAAQ,GAAKhD,EAAOnG,EAAI,EAC/B4T,GAAOzK,EAAQ,GAAKhD,EAAOnG,EAAI,OACzB,CACN4T,EAAOzK,GAAShD,EAAOnG,EACvB4T,GAAOzK,EAAQ,GAAKhD,EAAOnG,EAAI,EAC/B4T,GAAOzK,EAAQ,GAAKhD,EAAOnG,EAAI,EAC/B4T,GAAOzK,EAAQ,GAAKhD,EAAOnG,EAAI,GAIhC,KAAM+E,GAAK,EAAG,CACbA,EAAI,CACJ/E,IAAK,EAGNmJ,GAAS,EAGVxI,KAAK2S,QAAQhR,IAAI6D,EAAQ1C,EAAO,QAE3B,CAEN9C,KAAK2S,QAAUlE,EAAiByE,eAAelT,KAAK+P,UAAW/P,KAAK2S,QAAS3S,KAAKkP,oBAAqBlP,KAAK4O,cAG7G5O,KAAKyP,qBAAqBzP,KAAK2S,QAE/B3S,MAAK2P,eAAe3P,KAAK2S,QAAQ/C,IAAM,MAMjC6C,GAAAlS,UAAA8B,QAAP,WAEC3B,EAAAH,UAAM8B,QAAO1C,KAAAK,KAEbA,MAAKiP,WAAa,IAClBjP,MAAK0S,WAAa,IAClB1S,MAAK2S,QAAU,KAOTF,GAAAlS,UAAA+B,MAAP,WAEC,GAAIA,GAAwB,GAAImQ,GAAgBzS,KAAKkP,oBAAqBlP,KAAKkP,oBAAoB5M,QAAU,KAE7GA,GAAM0N,WAAWhQ,KAAK+P,UAAUzN,QAEhCA,GAAMiN,aAAavP,KAAKiP,WAAW3M,QACnCA,GAAMwQ,aAAa9S,KAAK0S,WAAWpQ,QACnCA,GAAMsQ,UAAU5S,KAAK2S,QAAQrQ,QAE7B,OAAOA,GAhQMmQ,GAAAnR,UAAmB,yBAkQlC,OAAAmR,IApQ8BjE,EAsQ9B1O,GAAyBJ,QAAhB+S,InBmrFN3N,4CAA4C,4CAA4Cc,6CAA6C,6CAA6CK,8CAA8C,8CAA8CyK,uCAAuC,uCAAuCC,yCAAyC,2CAA2CwC,kCAAkC,SAASvU,EAAQkB,EAAOJ,GAC7e,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoB58FtB,IAAO+S,GAAWxU,EAAc,mCpBm+FhC,IoB18FMyU,GAAS,SAAA3S,GAASX,EAAlBsT,EAAS3S,EAsJd,SAtJK2S,GAsJOC,EAAwBC,EAAwBC,EAAwBC,GAAxE,GAAAH,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAEnF/S,EAAAf,KAAAK,KApJOA,MAAA0T,SAAkB,CAClB1T,MAAA2T,SAAkB,CAElB3T,MAAA4T,QAAiB,CACjB5T,MAAA6T,QAAiB,CAkJxB7T,MAAKsT,QAAUA,CAEftT,MAAKuT,OAASA,CACdvT,MAAKwT,OAASA,CACdxT,MAAKyT,OAASA,CAEdzT,MAAK8T,cA7IN3S,OAAAC,eAAWiS,EAAA9S,UAAA,apBm9FJc,IoBn9FP,WAEC,MAAOgS,GAAU/R,WpBo9FXC,WAAY,KACZC,aAAc,MoBj7FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,WpB68FJc,IoB78FP,WAEC,MAAOrB,MAAK0T,UpB88FNnS,WAAY,KACZC,aAAc,MoBz8FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,WpB+8FJc,IoB/8FP,WAEC,MAAOrB,MAAK2T,UpBg9FNpS,WAAY,KACZC,aAAc,MoB38FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,UpBi9FJc,IoBj9FP,WAEC,MAAOrB,MAAK4T,SpBk9FNrS,WAAY,KACZC,aAAc,MoB78FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,UpBm9FJc,IoBn9FP,WAEC,MAAOrB,MAAK6T,SpBo9FNtS,WAAY,KACZC,aAAc,MoB/8FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,UpBq9FJc,IoBr9FP,WAEC,MAAOrB,MAAK+T,SpBs9FNpS,IoBp9FP,SAAkBC,GAEjB,GAAI5B,KAAK+T,SAAWnS,EACnB,MAED5B,MAAK+T,QAAUnS,GpBq9FTL,WAAY,KACZC,aAAc,MoB98FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,apBo9FJc,IoBp9FP,WAEC,MAAOrB,MAAKgU,YpBq9FNrS,IoBn9FP,SAAqBC,GAEpB,GAAI5B,KAAKgU,YAAcpS,EACtB,MAED5B,MAAKgU,WAAapS,CAElB5B,MAAK8T,epBk9FCvS,WAAY,KACZC,aAAc,MoB78FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,apBm9FJc,IoBn9FP,WAEC,MAAOrB,MAAKiU,YpBo9FNtS,IoBl9FP,SAAqBC,GAEpB,GAAI5B,KAAKiU,YAAcrS,EACtB,MAED5B,MAAKiU,WAAarS,CAElB5B,MAAK8T,epBi9FCvS,WAAY,KACZC,aAAc,MoB58FrBL,QAAAC,eAAWiS,EAAA9S,UAAA,QpBk9FJc,IoBl9FP,WAEC,MAAOrB,MAAKiI,OpBm9FN1G,WAAY,KACZC,aAAc,MoB/7Fb6R,GAAA9S,UAAAuT,YAAR,WAEC,GAAI9T,KAAKgU,WACRhU,KAAKiI,MAAQjI,KAAKgU,eAElBhU,MAAKiI,MAAQjI,KAAKsT,QAAQlL,IAE3B,IAAIpI,KAAKgU,WAAY,CACpBhU,KAAK0T,SAAW1T,KAAKgU,WAAWvL,EAAEzI,KAAKsT,QAAQjM,KAC/CrH,MAAK2T,SAAW3T,KAAKgU,WAAWtL,EAAE1I,KAAKsT,QAAQhM,MAE/CtH,MAAK4T,QAAU5T,KAAKgU,WAAW3M,MAAMrH,KAAKsT,QAAQjM,KAClDrH,MAAK6T,QAAU7T,KAAKgU,WAAW1M,OAAOtH,KAAKsT,QAAQhM,WAC7C,CACNtH,KAAK0T,SAAW,CAChB1T,MAAK2T,SAAW,CAEhB3T,MAAK4T,QAAU,CACf5T,MAAK6T,QAAU,GAnLHR,GAAA/R,UAAmB,mBAuLlC,OAAA+R,IAzLwBD,EA2LxBtT,GAAmBJ,QAAV2T,IpBg8FNa,mCAAmC,qCAAqCA,oCAAoC,SAAStV,EAAQkB,EAAOJ,GACvI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqBxpGtB,IAAOG,GAAS5B,EAAc,oCrB8pG9B,IqBzpGMwU,GAAW,SAAA1S,GAASX,EAApBqT,EAAW1S,EA4ChB,SA5CK0S,KA8CJ1S,EAAAf,KAAAK,KAzCMA,MAAAmU,SAAkB,OAKzBhT,OAAAC,eAAWgS,EAAA7S,UAAA,UrB4pGJc,IqB5pGP,WAEC,MAAOrB,MAAKoU,SrB6pGNzS,IqB3pGP,SAAkBC,GAEjB,GAAI5B,KAAKoU,SAAWxS,EACnB,MAED5B,MAAKoU,QAAUxS,GrB4pGTL,WAAY,KACZC,aAAc,MqBrpGrBL,QAAAC,eAAWgS,EAAA7S,UAAA,UrB2pGJc,IqB3pGP,WAEC,MAAOrB,MAAKqU,SrB4pGN1S,IqB1pGP,SAAkBC,GAEjB,GAAI5B,KAAKqU,SAAWzS,EACnB,MAED5B,MAAKqU,QAAUzS,GrB2pGTL,WAAY,KACZC,aAAc,MqB3oGrBL,QAAAC,eAAWgS,EAAA7S,UAAA,UrBkpGJc,IqBlpGP,WAEC,MAAOrB,MAAKmU,UrBmpGN5S,WAAY,KACZC,aAAc,MqBlpGtB,OAAA4R,IAzD0B5S,EA2D1BV,GAAqBJ,QAAZ0T,IrBspGNvO,oCAAoC,sCAAsCyP,oCAAoC,SAAS1V,EAAQkB,EAAOJ,GACzI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsB5tGtB,IAAO+S,GAAWxU,EAAc,mCtBmvGhC,IsB5tGM2V,GAAW,SAAA7T,GAASX,EAApBwU,EAAW7T,EAuBhB,SAvBK6T,GAuBOC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEX9T,EAAAf,KAAAK,KAEAA,MAAKwU,UAAYA,EAnBlBrT,OAAAC,eAAWmT,EAAAhU,UAAA,atBquGJc,IsBruGP,WAEC,MAAOkT,GAAYjT,WtBsuGbC,WAAY,KACZC,aAAc,MsB/uGP+S,GAAAjT,UAAmB,qBA2BlC,OAAAiT,IA7B0BnB,EA+B1BtT,GAAqBJ,QAAZ6U,ItBytGNL,mCAAmC,qCAAqCO,wCAAwC,SAAS7V,EAAQkB,EAAOJ,GAC3I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuBpxGtB,IAAO+G,GAAaxI,EAAa,qCACjC,IAAOyN,GAAkBzN,EAAY,0CACrC,IAAOqI,GAAOrI,EAAe,+BAC7B,IAAO8V,GAAK9V,EAAe,6BvB0xG3B,IuBrxGM+V,GAAe,SAAAjU,GAASX,EAAxB4U,EAAejU,EAuDpB,SAvDKiU,GAuDOC,EAAqCC,GAArC,GAAAD,QAAA,GAAmC,CAAnCA,EAAA,KAAqC,GAAAC,QAAA,GAAgC,CAAhCA,EAAA,KAEhDnU,EAAAf,KAAAK,KAAM,EAAG,EAETA,MAAK8U,gBAAkBF,CACvB5U,MAAK+U,aAAeF,CAEpB7U,MAAKgV,QAAU,GAAI5N,GAAc,EAAG,EAAG,MAAO,SAE9CpH,MAAKiV,YApDN9T,OAAAC,eAAWuT,EAAApU,UAAA,avB4xGJc,IuB5xGP,WAEC,MAAOsT,GAAgBrT,WvB6xGjBC,WAAY,KACZC,aAAc,MuB3xGrBL,QAAAC,eAAWuT,EAAApU,UAAA,kBvB8xGJc,IuB9xGP,WAEC,MAAOrB,MAAK8U,iBvB+xGNnT,IuB5xGP,SAA0BC,GAEzB,GAAI5B,KAAK8U,iBAAmBlT,EAC3B,MAED5B,MAAK8U,gBAAkBlT,CAEvB5B,MAAKkC,mBAELlC,MAAKiV,avB0xGC1T,WAAY,KACZC,aAAc,MuBvxGrBL,QAAAC,eAAWuT,EAAApU,UAAA,evB0xGJc,IuB1xGP,WAEC,MAAOrB,MAAK+U,cvB2xGNpT,IuBxxGP,SAAuBC,GAEtB,GAAI5B,KAAK+U,cAAgBnT,EACxB,MAED5B,MAAK+U,aAAenT,CAEpB5B,MAAKkC,mBAELlC,MAAKiV,avBsxGC1T,WAAY,KACZC,aAAc,MuB/vGdmT,GAAApU,UAAA+B,MAAP,WAEC,MAAO,IAAIqS,GAAgB3U,KAAK8U,gBAAiB9U,KAAK+U,cAsBhDJ,GAAApU,UAAA8B,QAAP,WAEC3B,EAAAH,UAAM8B,QAAO1C,KAAAK,KAEbA,MAAKiI,MAAQ,IAEbjI,MAAKgV,QAAQ3S,UAOPsS,GAAApU,UAAA+H,aAAP,WAEC,GAAI4M,GAAe,GAAIR,EAEvB1U,MAAKgV,QAAQhN,SAAShI,KAAKiI,MAAO,SAElC,IAAIjI,KAAK+U,aACR/U,KAAKgV,QAAQ5L,YAAYpJ,KAAK+U,aAAc/U,KAAKiI,MAAOiN,EAAQ7I,EAAmBG,MAAOH,EAAmBG,MAE9G,IAAIxM,KAAK8U,gBACR9U,KAAKgV,QAAQ5L,YAAYpJ,KAAK8U,gBAAiB9U,KAAKiI,MAAOiN,EAAQ7I,EAAmBI,IAAKJ,EAAmBI,IAE/G,OAAOzM,MAAKgV,QAAQ1M,eAOdqM,GAAApU,UAAAgK,UAAP,WAEC,MAAOvK,MAAKgV,QAAQzK,YASdoK,GAAApU,UAAAyL,SAAP,SAAgB3E,EAAcC,GAE7B5G,EAAAH,UAAMyL,SAAQrM,KAAAK,KAACqH,EAAOC,EAEtBtH,MAAKgV,QAAQhJ,SAAS3E,EAAOC,GAGtBqN,GAAApU,UAAA0U,UAAR,WAEC,GAAIE,GAAUC,CAEd,IAAIpV,KAAK8U,gBAAiB,CACzBK,EAAInV,KAAK8U,gBAAgBzN,KACzB+N,GAAIpV,KAAK8U,gBAAgBxN,WACnB,IAAItH,KAAK+U,aAAc,CAC7BI,EAAInV,KAAK+U,aAAa1N,KACtB+N,GAAIpV,KAAK+U,aAAazN,WAChB,CACN6N,EAAI,CACJC,GAAI,EAGL,GAAID,GAAKnV,KAAKgV,QAAQ3N,OAAS+N,GAAKpV,KAAKgV,QAAQ1N,OAAQ,CACxDtH,KAAKgV,QAAQ3S,SACbrC,MAAKgV,QAAU,GAAI5N,GAAc+N,EAAGC,EAAG,MAAO,UAG/CpV,KAAKgM,SAASmJ,EAAGC,GArKJT,GAAArT,UAAmB,yBAuKlC,OAAAqT,IAzK8B1N,EA2KLnH,GAAAJ,QAAhBiV,IvBuvGN3N,qCAAqC,qCAAqCoF,0CAA0C,0CAA0CH,+BAA+B,+BAA+BoJ,6BAA6B,+BAA+B3E,wCAAwC,SAAS9R,EAAQkB,EAAOJ,GAC3V,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwB56GtB,IAAO0G,GAAgBnI,EAAa,8CAEpC,IAAO0W,GAAmB1W,EAAY,6CACtC,IAAO2W,GAAgB3W,EAAa,0CAGpC,IAAO4B,GAAS5B,EAAc,oCxB+6G9B,IwBz6GM4P,GAAe,SAAA9N,GAASX,EAAxByO,EAAe9N,EA4CpB,SA5CK8N,GA4COG,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXjO,EAAAf,KAAAK,KA5COA,MAAAwV,eAAuC,GAAI1U,MAI3Cd,MAAAyV,aAAsB,CAMvBzV,MAAA2P,eAAwB,GAAIxO,OAC5BnB,MAAA0V,iBAA0B,GAAIvU,OAmCpCnB,MAAKkP,oBAAsBP,EAjC5BxN,OAAAC,eAAWoN,EAAAjO,UAAA,sBxBy6GJc,IwBz6GP,WAEC,MAAOrB,MAAKkP,qBxB06GN3N,WAAY,KACZC,aAAc,MwBr6GrBL,QAAAC,eAAWoN,EAAAjO,UAAA,WxB26GJc,IwB36GP,WAEC,MAAOrB,MAAK+P,WxB46GNxO,WAAY,KACZC,aAAc,MwBv6GrBL,QAAAC,eAAWoN,EAAAjO,UAAA,exB66GJc,IwB76GP,WAEC,MAAOrB,MAAKyV,cxB86GNlU,WAAY,KACZC,aAAc,MwB56GrBL,QAAAC,eAAWoN,EAAAjO,UAAA,exB+6GJc,IwB/6GP,WAEC,KAAM,IAAIiU,IxBg7GJ/T,WAAY,KACZC,aAAc,MwBh6GdgN,GAAAjO,UAAA6B,WAAP,WAEC,GAAID,GAAanC,KAAKwV,eAAe5V,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,EAAK9C,IAC/BW,KAAKwV,eAAenW,GAAG+C,aAMlBoM,GAAAjO,UAAA8B,QAAP,WAEC,MAAOrC,KAAKwV,eAAe5V,OAC1BI,KAAKwV,eAAe,GAAGnT,SAExBrC,MAAK+P,UAAU1N,SACfrC,MAAK+P,UAAY,KAWXvB,GAAAjO,UAAAyP,WAAP,SAAkBxK,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAI0C,YAAkBuB,GAAkB,CACvC,GAAI/G,KAAK+P,UACR/P,KAAK2V,sBAEN3V,MAAK+P,UAA+BvK,MAC9B,IAAIA,EAAQ,CAClB,IAAKxF,KAAK+P,UACT/P,KAAK+P,UAAY,GAAIhJ,EAEtB/G,MAAK+P,UAAUpO,IAAI6D,EAAQ1C,OACrB,IAAI9C,KAAK+P,UAAW,CAC1B/P,KAAK+P,UAAU1N,SACfrC,MAAK+P,UAAY,IAEjB/P,MAAK2V,uBAGN,GAAI3V,KAAK+P,UAAW,CACnB/P,KAAKyV,aAAezV,KAAK+P,UAAUnP,KAEnCZ,MAAK4V,0BACC,CACN5V,KAAKyV,aAAe,GAOfjH,GAAAjO,UAAAmP,kBAAP,WAEC,GAAI1P,KAAKkR,eACRlR,KAAKkR,eAAeI,kBAAkBtR,MAcjCwO,GAAAjO,UAAA+B,MAAP,WAEC,KAAM,IAAIgT,GAGJ9G,GAAAjO,UAAAiQ,oBAAP,SAA2BC,IASpBjC,GAAAjO,UAAA+P,MAAP,SAAaA,IAKN9B,GAAAjO,UAAA0P,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3B3B,GAAAjO,UAAA+O,qBAAP,WAEC,KAAM,IAAIgG,GAGH9G,GAAAjO,UAAAqV,oBAAR,WAEC,IAAK5V,KAAK6V,gBACT7V,KAAK6V,gBAAkB,GAAIN,GAAiBA,EAAiBO,gBAAiB9V,KAAK+P,UAEpF/P,MAAKqR,cAAcrR,KAAK6V,iBAGjBrH,GAAAjO,UAAAoV,qBAAR,WAEC3V,KAAKqR,cAAc,GAAIkE,GAAiBA,EAAiBQ,iBAAkB/V,KAAK+P,YAG1EvB,GAAAjO,UAAAkP,qBAAP,SAA4BuG,GAE3B,IAAKA,GAAkBhW,KAAK2P,eAAeqG,EAAepG,IACzD,MAED5P,MAAK2P,eAAeqG,EAAepG,IAAM,IAEzC,KAAK5P,KAAK0V,iBAAiBM,EAAepG,IACzC5P,KAAK0V,iBAAiBM,EAAepG,IAAM,GAAI2F,GAAiBA,EAAiBU,iBAAkBD,EAEpGhW,MAAKqR,cAAcrR,KAAK0V,iBAAiBM,EAAepG,KAIlDpB,GAAAjO,UAAAiP,sBAAP,SAA6BwG,GAE5B,IAAKA,EACJ,MAEDA,GAAe3T,SAEfrC,MAAKqR,cAAc,GAAIkE,GAAiBA,EAAiBW,kBAAmBF,GAE5EhW,MAAK2P,eAAeqG,EAAepG,IAAM,IACzC5P,MAAK0V,iBAAiBM,EAAepG,IAAM,KAGrCpB,GAAAjO,UAAA4V,mBAAP,SAA0BC,GAEzBpW,KAAKwV,eAAe5R,KAAKwS,EAEzB,OAAOA,GAGD5H,GAAAjO,UAAA8V,sBAAP,SAA6BD,GAE5BpW,KAAKwV,eAAe1R,OAAO9D,KAAKwV,eAAezR,QAAQqS,GAAgB,EAEvE,OAAOA,GAET,OAAA5H,IApN8BhO,EAsNLV,GAAAJ,QAAhB8O,IxB82GN1H,8CAA8C,8CAA8CwP,6CAA6C,6CAA6CC,0CAA0C,0CAA0C1R,oCAAoC,sCAAsC2R,4CAA4C,SAAS5X,EAAQkB,EAAOJ,GAC3Z,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyBvlHtB,IAAO0E,GAAcnG,EAAa,4CAElC,IAAO2H,GAAgB3H,EAAa,8CACpC,IAAOyH,GAAgBzH,EAAa,8CAGpC,IAAO4P,GAAe5P,EAAa,uCAInC,IAAO6P,GAAgB7P,EAAa,yCzBulHpC,IyBllHM6X,GAAmB,SAAA/V,GAASX,EAA5B0W,EAAmB/V,EA2OxB,SA3OK+V,GA2OO9H,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXjO,EAAAf,KAAAK,KAAM2O,EAzOC3O,MAAA4O,aAAsB,CACtB5O,MAAA0W,kBAA4B,IAC5B1W,MAAA2W,mBAA6B,IAe7B3W,MAAA4W,mBAA6B,IAC7B5W,MAAA6W,oBAA8B,IAC9B7W,MAAA8O,eAAyB,KAwNhC9O,MAAKiP,WAAa,GAAI1I,GAAiBvG,KAAKkP,qBAnN7C/N,OAAAC,eAAWqV,EAAAlW,UAAA,azBukHJc,IyBvkHP,WAEC,MAAOoV,GAAoBnV,WzBwkHrBC,WAAY,KACZC,aAAc,MyBrkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,ezBwkHJc,IyBxkHP,WAEC,MAAOrB,MAAK4O,czBykHNrN,WAAY,KACZC,aAAc,MyBlkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,uBzB0kHJc,IyB1kHP,WAEC,MAAOrB,MAAK8W,sBzB2kHNnV,IyBxkHP,SAA+BC,GAE9B,GAAI5B,KAAK8W,sBAAwBlV,EAChC,MAED5B,MAAK8W,qBAAuBlV,GzBwkHtBL,WAAY,KACZC,aAAc,MyBnkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,mBzBykHJc,IyBzkHP,WAEC,MAAOrB,MAAK+W,kBzB0kHNpV,IyBvkHP,SAA2BC,GAE1B,GAAI5B,KAAK+W,kBAAoBnV,EAC5B,MAED5B,MAAK+W,iBAAmBnV,CAExB,IAAI5B,KAAKgX,cACRhX,KAAKgX,cAAcpS,WAAa5E,KAAK+W,gBAEtC,IAAI/W,KAAKiX,cACRjX,KAAKiX,cAAcrS,WAAa5E,KAAK+W,kBzBqkHhCxV,WAAY,KACZC,aAAc,MyB9jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,iBzBskHJc,IyBtkHP,WAEC,MAAOrB,MAAK8O,gBzBukHNnN,IyBpkHP,SAAyBC,GAExB,GAAI5B,KAAK8O,gBAAkBlN,EAC1B,MAED5B,MAAK8O,eAAiBlN,CAEtB,IAAIA,EACH5B,KAAKyP,qBAAqBzP,KAAKqP,OzBmkH1B9N,WAAY,KACZC,aAAc,MyB7jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,qBzBokHJc,IyBpkHP,WAEC,MAAOrB,MAAK4W,oBzBqkHNjV,IyBlkHP,SAA6BC,GAE5B,GAAI5B,KAAK4W,oBAAsBhV,EAC9B,MAED5B,MAAK4W,mBAAqBhV,CAE1B,IAAIA,EACH5B,KAAKyP,qBAAqBzP,KAAKkX,WzBikH1B3V,WAAY,KACZC,aAAc,MyB3jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,sBzBkkHJc,IyBlkHP,WAEC,MAAOrB,MAAK6W,qBzBmkHNlV,IyBhkHP,SAA8BC,GAE7B,GAAI5B,KAAK6W,qBAAuBjV,EAC/B,MAED5B,MAAK6W,oBAAsBjV,CAE3B,IAAIA,EACH5B,KAAKyP,qBAAqBzP,KAAKmX,YzB+jH1B5V,WAAY,KACZC,aAAc,MyB1jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,azBgkHJc,IyBhkHP,WAEC,MAAOrB,MAAKiP,YzBikHN1N,WAAY,KACZC,aAAc,MyB5jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,WzBkkHJc,IyBlkHP,WAEC,IAAKrB,KAAKkX,UAAYlX,KAAK2P,eAAe3P,KAAKkX,SAAStH,IACvD5P,KAAKoX,WAAWpX,KAAKkX,SAEtB,OAAOlX,MAAKkX,UzBkkHN3V,WAAY,KACZC,aAAc,MyB7jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,YzBmkHJc,IyBnkHP,WAEC,IAAKrB,KAAKmX,WAAanX,KAAK2P,eAAe3P,KAAKmX,UAAUvH,IACzD5P,KAAKqX,YAAYrX,KAAKmX,UAEvB,OAAOnX,MAAKmX,WzBmkHN5V,WAAY,KACZC,aAAc,MyB9jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,ezBokHJc,IyBpkHP,WAEC,GAAIrB,KAAK0W,kBACR1W,KAAKsX,mBAEN,OAAOtX,MAAKuX,czBokHNhW,WAAY,KACZC,aAAc,MyB/jHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,gBzBqkHJc,IyBrkHP,WAEC,GAAIrB,KAAK2W,mBACR3W,KAAKwX,oBAEN,OAAOxX,MAAKyX,ezBqkHNlW,WAAY,KACZC,aAAc,MyBhkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,OzBskHJc,IyBtkHP,WAEC,IAAKrB,KAAKqP,MAAQrP,KAAK2P,eAAe3P,KAAKqP,KAAKO,IAC/C5P,KAAKoP,OAAOpP,KAAKqP,KAElB,OAAOrP,MAAKqP,MzBskHN9N,WAAY,KACZC,aAAc,MyBjkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,gBzBukHJc,IyBvkHP,WAEC,MAAOrB,MAAK0X,ezBwkHNnW,WAAY,KACZC,aAAc,MyBnkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,gBzBykHJc,IyBzkHP,WAEC,MAAOrB,MAAKgX,ezB0kHNzV,WAAY,KACZC,aAAc,MyBrkHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,gBzB2kHJc,IyB3kHP,WAEC,MAAOrB,MAAKiX,ezB4kHN1V,WAAY,KACZC,aAAc,MyB1kHrBL,QAAAC,eAAWqV,EAAAlW,UAAA,wBzB6kHJc,IyB7kHP,WAEC,MAAOrB,MAAK2X,uBzB8kHNpW,WAAY,KACZC,aAAc,MyBlkHdiV,GAAAlW,UAAA+O,qBAAP,WAEC,MAAOtP,MAAKiP,WAAW5N,IAAIrB,KAAK4O,cAS1B6H,GAAAlW,UAAAgP,aAAP,SAAoB/J,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAI0C,GAAUxF,KAAKiP,WAClB,MAED,IAAIzJ,YAAkBe,GAAkB,CACvCvG,KAAKwP,sBAAsBxP,KAAKiP,WAChCjP,MAAKiP,WAAgCzJ,MAC/B,IAAIA,EAAQ,CAClBxF,KAAKiP,WAAWtN,IAAI6D,EAAQ1C,OACtB,CACN9C,KAAKwP,sBAAsBxP,KAAKiP,WAChCjP,MAAKiP,WAAa,GAAI1I,GAAiBvG,KAAKkP,qBAG7ClP,KAAK4O,aAAe5O,KAAKiP,WAAWrO,KAEpC,IAAIZ,KAAK4W,mBACR5W,KAAKyP,qBAAqBzP,KAAKkX,SAEhC,IAAIlX,KAAK6W,oBACR7W,KAAKyP,qBAAqBzP,KAAKmX,UAEhC,IAAInX,KAAK8O,eACR9O,KAAKyP,qBAAqBzP,KAAKqP,KAEhCrP,MAAK0P,mBAEL1P,MAAKyP,qBAAqBzP,KAAKiP,WAE/BjP,MAAK2P,eAAe3P,KAAKiP,WAAWW,IAAM,MASpC6G,GAAAlW,UAAA6W,WAAP,SAAkB5R,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAK9C,KAAK4W,mBAAoB,CAC7B,GAAIpR,GAAUxF,KAAKkX,SAClB,MAED,IAAI1R,YAAkBe,GAAkB,CACvCvG,KAAKwP,sBAAsBxP,KAAKkX,SAChClX,MAAKkX,SAA8B1R,MAC7B,IAAIA,EAAQ,CAClB,IAAKxF,KAAKkX,SACTlX,KAAKkX,SAAW,GAAI3Q,GAAiBvG,KAAKkP,oBAE3ClP,MAAKkX,SAASvV,IAAI6D,EAAQ1C,OACpB,IAAI9C,KAAKkX,SAAU,CACzBlX,KAAKwP,sBAAsBxP,KAAKkX,SAChClX,MAAKkX,SAAW,IAChB,aAEK,CACN,GAAIlX,KAAK0W,kBACR1W,KAAKsX,mBAENtX,MAAKkX,SAAWzI,EAAiBmJ,gBAAgB5X,KAAK+P,UAAW/P,KAAKuX,aAAcvX,KAAKkX,SAAUlX,KAAKkP,qBAGzGlP,KAAKyP,qBAAqBzP,KAAKkX,SAE/BlX,MAAK2P,eAAe3P,KAAKkX,SAAStH,IAAM,MASlC6G,GAAAlW,UAAA8W,YAAP,SAAmB7R,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAK9C,KAAK6W,oBAAqB,CAC9B,GAAIrR,GAAUxF,KAAKmX,UAClB,MAED,IAAI3R,YAAkBe,GAAkB,CACvCvG,KAAKwP,sBAAsBxP,KAAKmX,UAChCnX,MAAKmX,UAA+B3R,MAC9B,IAAIA,EAAQ,CAClB,IAAKxF,KAAKmX,UACTnX,KAAKmX,UAAY,GAAI5Q,GAAiBvG,KAAKkP,oBAE5ClP,MAAKmX,UAAUxV,IAAI6D,EAAQ1C,OACrB,IAAI9C,KAAKmX,UAAW,CAC1BnX,KAAKwP,sBAAsBxP,KAAKmX,UAChCnX,MAAKmX,UAAY,IACjB,aAEK,CACN,GAAInX,KAAK2W,mBACR3W,KAAKwX,oBAEN,IAAIxX,KAAK0W,kBACR1W,KAAKsX,mBAENtX,MAAKmX,UAAY1I,EAAiBoJ,iBAAiB7X,KAAK+P,UAAW/P,KAAKyX,cAAezX,KAAKuX,aAAcvX,KAAKmX,UAAWnX,KAAKkP,qBAGhIlP,KAAKyP,qBAAqBzP,KAAKmX,UAE/BnX,MAAK2P,eAAe3P,KAAKmX,UAAUvH,IAAM,MASnC6G,GAAAlW,UAAA6O,OAAP,SAAc5J,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAK9C,KAAK8O,eAAgB,CACzB,GAAItJ,GAAUxF,KAAKqP,KAClB,MAED,IAAI7J,YAAkBa,GAAkB,CACvCrG,KAAKwP,sBAAsBxP,KAAKqP,KAChCrP,MAAKqP,KAA0B7J,MACzB,IAAIA,EAAQ,CAClB,IAAKxF,KAAKqP,KACTrP,KAAKqP,KAAO,GAAIhJ,GAAiBrG,KAAKkP,oBAEvClP,MAAKqP,KAAK1N,IAAI6D,EAAQ1C,OAChB,IAAI9C,KAAKqP,KAAM,CACrBrP,KAAKwP,sBAAsBxP,KAAKqP,KAChCrP,MAAKqP,KAAO,IACZ,aAEK,CACNrP,KAAKqP,KAAOZ,EAAiBqB,YAAY9P,KAAK+P,UAAW/P,KAAKqP,KAAMrP,KAAKkP,oBAAqBlP,KAAK4O,cAGpG,GAAI5O,KAAK6W,oBACR7W,KAAKyP,qBAAqBzP,KAAKmX,UAEhCnX,MAAKyP,qBAAqBzP,KAAKqP,KAE/BrP,MAAK2P,eAAe3P,KAAKqP,KAAKO,IAAM,MAS9B6G,GAAAlW,UAAAuX,gBAAP,SAAuBtS,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAI0C,GAAUxF,KAAK0X,cAClB,MAED,IAAIlS,YAAkBa,GAAkB,CACvCrG,KAAKwP,sBAAsBxP,KAAK0X,cAChC1X,MAAK0X,cAAmClS,MAClC,IAAIA,EAAQ,CAClB,IAAKxF,KAAK0X,cACT1X,KAAK0X,cAAgB,GAAIrR,GAAiBrG,KAAKkP,oBAEhDlP,MAAK0X,cAAc/V,IAAI6D,EAAQ1C,OACzB,IAAI9C,KAAK0X,cAAe,CAC9B1X,KAAKwP,sBAAsBxP,KAAK0X,cAChC1X,MAAK0X,cAAgB,IACrB,QAGD1X,KAAKyP,qBAAqBzP,KAAK0X,cAE/B1X,MAAK2P,eAAe3P,KAAK0X,cAAc9H,IAAM,MASvC6G,GAAAlW,UAAAwX,gBAAP,SAAuBvS,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAI0C,GAAUxF,KAAKgX,cAClB,MAED,IAAIxR,YAAkBT,GAAgB,CACrC/E,KAAKwP,sBAAsBxP,KAAKgX,cAChChX,MAAKgX,cAAiCxR,MAChC,IAAIA,EAAQ,CAClB,IAAKxF,KAAKgX,cACThX,KAAKgX,cAAgB,GAAIjS,GAAeoB,aAAcnG,KAAK+W,iBAAkB/W,KAAKkP,oBAEnF,IAAIlP,KAAK8W,qBAAsB,CAC9B,GAAIzX,GAAW,CACf,IAAI2Y,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAI/W,OAErBnB,MAAK2X,sBAAwB,GAAI7W,MAEjC,OAAOzB,EAAImG,EAAO5F,OAAQ,CACzBoY,EAAWxS,EAAOnG,EAGlB,IAAI6Y,EAAIF,IAAaG,UAAW,CAC/BD,EAAIF,GAAYC,CAChBjY,MAAK2X,sBAAsBM,KAAcD,EAI1CxS,EAAOnG,KAAO6Y,EAAIF,IAIpBhY,KAAKgX,cAAcrV,IAAI6D,EAAQ1C,OAEzB,IAAI9C,KAAKgX,cAAe,CAC9BhX,KAAKwP,sBAAsBxP,KAAKgX,cAChChX,MAAKgX,cAAgB,IACrB,QAGDhX,KAAKyP,qBAAqBzP,KAAKgX,cAE/BhX,MAAK2P,eAAe3P,KAAKgX,cAAcpH,IAAM,MASvC6G,GAAAlW,UAAA6X,gBAAP,SAAuB5S,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAI0C,GAAUxF,KAAKiX,cAClB,MAED,IAAIzR,YAAkBT,GAAgB,CACrC/E,KAAKwP,sBAAsBxP,KAAKiX,cAChCjX,MAAKiX,cAAiCzR,MAChC,IAAIA,EAAQ,CAClB,IAAKxF,KAAKiX,cACTjX,KAAKiX,cAAgB,GAAIlS,GAAeoB,aAAcnG,KAAK+W,iBAAkB/W,KAAKkP,oBAEnFlP,MAAKiX,cAActV,IAAI6D,EAAQ1C,OAEzB,IAAI9C,KAAKiX,cAAe,CAC9BjX,KAAKwP,sBAAsBxP,KAAKiX,cAChCjX,MAAKiX,cAAgB,IACrB,QAGDjX,KAAKyP,qBAAqBzP,KAAKiX,cAE/BjX,MAAK2P,eAAe3P,KAAKiX,cAAcrH,IAAM,MAMvC6G,GAAAlW,UAAA8B,QAAP,WAEC3B,EAAAH,UAAM8B,QAAO1C,KAAAK,KAEbA,MAAKiP,WAAW5M,SAChBrC,MAAKiP,WAAa,IAElB,IAAIjP,KAAKkX,SAAU,CAClBlX,KAAKkX,SAAS7U,SACdrC,MAAKkX,SAAW,KAGjB,GAAIlX,KAAKmX,UAAW,CACnBnX,KAAKmX,UAAU9U,SACfrC,MAAKmX,UAAY,KAGlB,GAAInX,KAAKqP,KAAM,CACdrP,KAAKqP,KAAKhN,SACVrC,MAAKqP,KAAO,KAGb,GAAIrP,KAAK0X,cAAe,CACvB1X,KAAK0X,cAAcrV,SACnBrC,MAAK0X,cAAgB,KAGtB,GAAI1X,KAAKgX,cAAe,CACvBhX,KAAKgX,cAAc3U,SACnBrC,MAAKgX,cAAgB,KAGtB,GAAIhX,KAAKiX,cAAe,CACvBjX,KAAKiX,cAAc5U,SACnBrC,MAAKiX,cAAgB,KAGtB,GAAIjX,KAAKuX,aAAc,CACtBvX,KAAKuX,aAAalV,SAClBrC,MAAKuX,aAAe,KAGrB,GAAIvX,KAAKyX,cAAe,CACvBzX,KAAKyX,cAAcpV,SACnBrC;KAAKyX,cAAgB,MAYhBhB,GAAAlW,UAAAyP,WAAP,SAAkBxK,EAAY1C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7BpC,EAAAH,UAAMyP,WAAUrQ,KAAAK,KAACwF,EAAQ1C,EAEzB9C,MAAK0W,kBAAoB,IACzB1W,MAAK2W,mBAAqB,IAE1B,IAAI3W,KAAK4W,mBACR5W,KAAKyP,qBAAqBzP,KAAKkX,SAEhC,IAAIlX,KAAK6W,oBACR7W,KAAKyP,qBAAqBzP,KAAKmX,UAEhC,IAAInX,KAAK8O,eACR9O,KAAKyP,qBAAqBzP,KAAKqP,MAO1BoH,GAAAlW,UAAA+B,MAAP,WAEC,GAAIA,GAA4B,GAAImU,GAAoBzW,KAAKkP,oBAAqBlP,KAAKkP,oBAAoB5M,QAAU,KAErHA,GAAM0N,WAAWhQ,KAAK+P,UAAUzN,QAEhCA,GAAMiN,aAAavP,KAAKiP,WAAW3M,QAEnCA,GAAM8U,WAAYpX,KAAKkX,WAAalX,KAAK4W,mBAAqB5W,KAAKkX,SAAS5U,QAAU,KAEtFA,GAAM8M,OAAQpP,KAAKqP,OAASrP,KAAK8O,eAAiB9O,KAAKqP,KAAK/M,QAAU,KAEtEA,GAAM+U,YAAarX,KAAKmX,YAAcnX,KAAK6W,oBAAsB7W,KAAKmX,UAAU7U,QAAU,KAE1F,IAAItC,KAAK0X,cACRpV,EAAMwV,gBAAgB9X,KAAK0X,cAAcpV,QAE1C,IAAItC,KAAKgX,cAAe,CACvB1U,EAAM+V,gBAAkBrY,KAAK+W,gBAC7BzU,GAAMyV,gBAAgB/X,KAAKgX,cAAc1U,SAG1C,GAAItC,KAAKiX,cACR3U,EAAM8V,gBAAgBpY,KAAKiX,cAAc3U,QAE1C,OAAOA,GAGDmU,GAAAlW,UAAA0P,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC1B,EAAiB2B,SAASF,EAAQC,EAAQnQ,KAAKqQ,IAAKrQ,KAAKqQ,IAAIzP,OAOvD6V,GAAAlW,UAAA+P,MAAP,SAAaA,GAEZ7B,EAAiB6B,MAAMA,EAAOtQ,KAAKuQ,UAAWvQ,KAAK4O,cAG7C6H,GAAAlW,UAAAiQ,oBAAP,SAA2BC,GAE1BhC,EAAiB+B,oBAAoBC,EAAWzQ,KAAKuQ,UAAWvQ,KAAKsY,QAAStY,KAAKuY,SAAUvY,KAAK4O,cAM3F6H,GAAAlW,UAAAiX,mBAAR,WAECxX,KAAKyX,cAAgBhJ,EAAiB+J,qBAAqBxY,KAAK+P,UAAW/P,KAAKiP,WAAYjP,KAAKqQ,IAAKrQ,KAAKyX,cAAezX,KAAK+P,UAAUnP,MAEzIZ,MAAK2W,mBAAqB,MAMnBF,GAAAlW,UAAA+W,kBAAR,WAECtX,KAAKuX,aAAe9I,EAAiBgK,oBAAoBzY,KAAK+P,UAAW/P,KAAKiP,WAAYjP,KAAKuX,aAAcvX,KAAK+P,UAAUnP,MAE5HZ,MAAK0W,kBAAoB,MAhpBZD,GAAAnV,UAAmB,6BAkpBlC,OAAAmV,IAppBkCjI,EAspBL1O,GAAAJ,QAApB+W,IzB88GN3R,4CAA4C,4CAA4CsB,8CAA8C,8CAA8CE,8CAA8C,8CAA8CoK,uCAAuC,uCAAuCC,yCAAyC,2CAA2C+H,kCAAkC,SAAS9Z,EAAQkB,EAAOJ,GAC/e,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0BpnItB,IAAOG,GAAS5B,EAAc,oC1BwnI9B,I0BpnIM+Z,GAAS,SAAAjY,GAASX,EAAlB4Y,EAASjY,EAUd,SAVKiY,GAUOC,GAEXlY,EAAAf,KAAAK,KACAA,MAAK6Y,kBAAoBD,EAO1BzX,OAAAC,eAAWuX,EAAApY,UAAA,a1B8mIJc,I0B9mIP,WAEC,MAAOsX,GAAUrX,W1B+mIXC,WAAY,KACZC,aAAc,M0B7mIrBL,QAAAC,eAAWuX,EAAApY,UAAA,oB1BgnIJc,I0BhnIP,WAEC,MAAOrB,MAAK6Y,mB1BinINlX,I0B9mIP,SAA4BC,GAE3B5B,KAAK6Y,kBAAoBjX,G1B+mInBL,WAAY,KACZC,aAAc,M0B7mIdmX,GAAApY,UAAA8B,QAAP,WAECrC,KAAK6Y,kBAAoB,KAnCZF,GAAArX,UAAmB,mBAqClC,OAAAqX,IAvCwBnY,EAyCxBV,GAAmBJ,QAAViZ,I1BinIN9T,oCAAoC,sCAAsCyR,8CAA8C,SAAS1X,EAAQkB,EAAOJ,GACnJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2BxqItB,IAAOd,GAAKX,EAAe,+B3B+qI3B,I2BzqIM0W,GAAmB,SAAA5U,GAASX,EAA5BuV,EAAmB5U,EAOxB,SAPK4U,GAOOwD,EAAuBlJ,GAAvB,GAAAkJ,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAlJ,QAAA,GAAa,CAAbA,EAAA,EAElClP,EAAAf,KAAAK,KAAM8Y,GAAW,gJAAiJlJ,GAEpK,MAAA0F,IAXkC/V,EAaLO,GAAAJ,QAApB4V,I3B4qINyD,+BAA+B,iCAAiCC,wCAAwC,SAASpa,EAAQkB,EAAOJ,GACnI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4BpsItB,IAAOd,GAAKX,EAAe,+B5B2sI3B,I4BrsIMqa,GAAa,SAAAvY,GAASX,EAAtBkZ,EAAavY,EAQlB,SARKuY,GAQOH,EAAuBlJ,GAAvB,GAAAkJ,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAlJ,QAAA,GAAa,CAAbA,EAAA,EAElClP,EAAAf,KAAAK,KAAM8Y,GAAW,gBAAiBlJ,GAEpC,MAAAqJ,IAZ4B1Z,EAcLO,GAAAJ,QAAduZ,I5BwsINF,+BAA+B,iCAAiCG,wCAAwC,SAASta,EAAQkB,EAAOJ,GACnI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6BjuItB,IAAOd,GAAKX,EAAe,+BAE3B,IAAMua,GAAa,SAAAzY,GAASX,EAAtBoZ,EAAazY,EAIlB,SAJKyY,GAIOL,EAAkClJ,GAAlC,GAAAkJ,QAAA,GAAgC,CAAhCA,EAAA,gBAAkC,GAAAlJ,QAAA,GAAa,CAAbA,EAAA,EAE7ClP,EAAAf,KAAAK,KAAM8Y,EAASlJ,GAJFuJ,EAAAC,wBAAiC,sBAMhD,OAAAD,IAR4B5Z,EAULO,GAAAJ,QAAdyZ,I7BouINJ,+BAA+B,iCAAiCA,gCAAgC,SAASna,EAAQkB,EAAOJ,G8BhvI3H,GAAMH,GAAK,WAOV,QAPKA,GAOOuZ,EAAqBlJ,EAAeyJ,GAApC,GAAAP,QAAA,GAAmB,CAAnBA,EAAA,GAAqB,GAAAlJ,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAyJ,QAAA,GAAiB,CAAjBA,EAAA,GAJxCrZ,KAAAsZ,SAAkB,CAClBtZ,MAAAuZ,UAAmB,EACnBvZ,MAAAqZ,MAAe,EAKtBrZ,MAAKuZ,UAAYT,CACjB9Y,MAAKqZ,MAAQG,IACbxZ,MAAKsZ,SAAW1J,EAQjBzO,OAAAC,eAAW7B,EAAAgB,UAAA,W9B8uIJc,I8B9uIP,WAGC,MAAOrB,MAAKuZ,W9BkvIN5X,I8B1uIP,SAAmBC,GAGlB5B,KAAKuZ,UAAY3X,G9B0uIXL,WAAY,KACZC,aAAc,M8BnuIrBL,QAAAC,eAAW7B,EAAAgB,UAAA,Q9B0uIJc,I8B1uIP,WAGC,MAAOrB,MAAKqZ,O9B8uIN1X,I8BtuIP,SAAgBC,GAGf5B,KAAKqZ,MAAQzX,G9BsuIPL,WAAY,KACZC,aAAc,M8B/tIrBL,QAAAC,eAAW7B,EAAAgB,UAAA,W9BsuIJc,I8BtuIP,WAGC,MAAOrB,MAAKsZ,U9BsuIN/X,WAAY,KACZC,aAAc,M8BnuItB,OAAAjC,KAEAO,GAAeJ,QAANH,O9BuuIHka,qDAAqD,SAAS7a,EAAQkB,EAAOJ,GACnF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+BrzItB,IAAOd,GAAKX,EAAe,+B/B4zI3B,I+BtzIM8a,GAA0B,SAAAhZ,GAASX,EAAnC2Z,EAA0BhZ,EAO/B,SAPKgZ,GAOOC,EAAwB/J,GAAxB,GAAA+J,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAA/J,QAAA,GAAa,CAAbA,EAAA,EAEnClP,EAAAf,KAAAK,KAAM,sFAAwF2Z,EAAY/J,GAE5G,MAAA8J,IAXyCna,EAaLO,GAAAJ,QAA3Bga,I/ByzINX,+BAA+B,iCAAiCa,qCAAqC,SAAShb,EAAQkB,EAAOJ,GAChI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgCj1ItB,IAAOd,GAAKX,EAAe,+BhCw1I3B,IgCl1IMib,GAAU,SAAAnZ,GAASX,EAAnB8Z,EAAUnZ,EAQf,SARKmZ,GAQOf,EAAuBlJ,GAAvB,GAAAkJ,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAlJ,QAAA,GAAa,CAAbA,EAAA,EAElClP,EAAAf,KAAAK,KAAM8Y,GAAW,aAAclJ,GAEjC,MAAAiK,IAZyBta,EAczBO,GAAoBJ,QAAXma,IhCq1INd,+BAA+B,iCAAiCe,qCAAqC,SAASlb,EAAQkB,EAAOJ,GAChI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiC72ItB,IAAO0Z,GAAKnb,EAAe,+BjCm3I3B,IiC92IMob,GAAU,SAAAtZ,GAASX,EAAnBia,EAAUtZ,EA4Bf,SA5BKsZ,GA4BOC,EAAaC,EAAqBC,GAArB,GAAAD,QAAA,GAAmB,CAAnBA,EAAA,KAAqB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAE7CzZ,EAAAf,KAAAK,KAAMia,EAENja,MAAKoa,OAASF,CACdla,MAAKqa,UAAYF,IAAana,KAAKoa,OAAQpa,KAAKoa,OAAOZ,KAAO,MAM/DrY,OAAAC,eAAW4Y,EAAAzZ,UAAA,SjCu1IJc,IiCv1IP,WAEC,MAAOrB,MAAKoa,QjCw1IN7Y,WAAY,KACZC,aAAc,MiCn1IrBL,QAAAC,eAAW4Y,EAAAzZ,UAAA,iBjCy1IJc,IiCz1IP,WAEC,MAAOrB,MAAKqa,WjC01IN9Y,WAAY,KACZC,aAAc,MiCr1IdwY,GAAAzZ,UAAA+B,MAAP,WAEC,MAAe,IAAI0X,GAAWha,KAAKia,KAAMja,KAAKka,MAAOla,KAAKsa,eApD7CN,GAAAO,eAAwB,eAKxBP,GAAAQ,aAAsB,aAKtBR,GAAAS,wBAAiC,uBAKjCT,GAAAU,mBAA4B,kBAuC3C,OAAAV,IA3DyBD,EA6DzBja,GAAoBJ,QAAXsa,IjC22INW,+BAA+B,iCAAiCC,0CAA0C,SAAShc,EAAQkB,EAAOJ,GAOrI,GkC76IMmb,GAAe,WAKpB,QALKA,GAKOC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAHJ9a,KAAA+a,UAAmC,GAAIja,MAK9Cd,MAAK8a,OAASA,GAAU9a,KASlB6a,EAAAta,UAAAya,iBAAP,SAAwBf,EAAagB,GAEpC,GAAIjb,KAAK+a,UAAWd,KAAW9B,UAC9BnY,KAAK+a,UAAWd,GAAS,GAAInZ,MAE9B,IAAId,KAAKkb,sBAAsBjB,EAAMgB,MAAe,EACnDjb,KAAK+a,UAAWd,GAAOrW,KAAKqX,GASvBJ,GAAAta,UAAA4a,oBAAP,SAA2BlB,EAAagB,GAEvC,GAAIzS,GAAexI,KAAKkb,sBAAsBjB,EAAMgB,EAEpD,IAAIzS,KAAW,EACdxI,KAAK+a,UAAWd,GAAOnW,OAAO0E,EAAO,GAQhCqS,GAAAta,UAAA8Q,cAAP,SAAqB+J,GAEpB,GAAIC,GAAgCrb,KAAK+a,UAAWK,EAAMnB,KAE1D,IAAIoB,IAAkBlD,UAAW,CAChC,GAAI1Y,GAAW4b,EAAczb,MAE7Bwb,GAAMN,OAAS9a,KAAK8a,MAEpB,KAAK,GAAIzb,GAAW,EAAGA,EAAII,EAAGJ,IAC7Bgc,EAAchc,GAAG+b,IAUZP,GAAAta,UAAA2a,sBAAR,SAA8BjB,EAAagB,GAE1C,GAAIjb,KAAK+a,UAAWd,KAAW9B,UAAW,CACzC,GAAI/Y,GAAoBY,KAAK+a,UAAWd,EACxC,IAAIxa,GAAWL,EAAEQ,MAEjB,KAAK,GAAIP,GAAW,EAAGA,EAAII,EAAGJ,IAC7B,GAAI4b,GAAY7b,EAAEC,GACjB,MAAOA,GAGV,OAAQ,EASFwb,GAAAta,UAAA4Q,iBAAP,SAAwB8I,EAAagB,GAEpC,GAAIA,GAAY,KAAM,CACrB,MAASjb,MAAKkb,sBAAsBjB,EAAMgB,MAAe,MACnD,CACN,GAAIjb,KAAK+a,UAAWd,KAAW9B,UAC9B,MAASnY,MAAK+a,UAAWd,GAAOra,OAAS,CAE1C,OAAO,OAGR,MAAO,OAET,OAAAib,KAEA/a,GAAyBJ,QAAhBmb,OlC05IHF,gCAAgC,SAAS/b,EAAQkB,EAAOJ,GmCrgJ9D,GAAMqa,GAAK,WA4BV,QA5BKA,GA4BOE,GATLja,KAAAia,KAAc9B,SAOdnY,MAAA8a,OAAa3C,SAInBnY,MAAKia,KAAOA,EAONF,EAAAxZ,UAAA+B,MAAP,WAEC,MAAO,IAAIyX,GAAM/Z,KAAKia,MApCTF,GAAAuB,SAAkB,UAClBvB,GAAAwB,KAAc,MAEdxB,GAAAyB,YAAqB,YACrBzB,GAAA0B,WAAoB,WAGpB1B,GAAA2B,OAAgB,QAChB3B,GAAA4B,MAAe,OACf5B,GAAA6B,OAAgB,QA6B/B,OAAA7B,KAEAja,GAAeJ,QAANqa,OnC6/IHnI,wCAAwC,SAAShT,EAAQkB,EAAOJ,GACtE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoC5iJtB,IAAO0Z,GAAKnb,EAAe,+BpCqjJ3B,IoC7iJMiS,GAAa,SAAAnQ,GAASX,EAAtB8Q,EAAanQ,EAwBlB,SAxBKmQ,GAwBOoJ,EAAahJ,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExBvQ,EAAAf,KAAAK,KAAMia,EAENja,MAAK6b,aAAe5K,EAMrB9P,OAAAC,eAAWyP,EAAAtQ,UAAA,epC2hJJc,IoC3hJP,WAEC,MAAOrB,MAAK6b,cpC4hJNta,WAAY,KACZC,aAAc,MoCthJdqP,GAAAtQ,UAAA+B,MAAP,WAEC,MAAO,IAAIuO,GAAc7Q,KAAKia,KAAMja,KAAK6b,cAxC5BhL,GAAAO,mBAA4B,kBAK5BP,GAAAW,qBAA8B,oBAK9BX,GAAAc,eAAwB,eAgCvC,OAAAd,IA/C4BkJ,EAiDLja,GAAAJ,QAAdmR,IpCyiJN8J,+BAA+B,iCAAiCmB,0CAA0C,SAASld,EAAQkB,EAAOJ,GACrI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqCxmJtB,IAAO0Z,GAAKnb,EAAe,+BrC8mJ3B,IqCzmJMmd,GAAe,SAAArb,GAASX,EAAxBgc,EAAerb,EAOpB,SAPKqb,GAOO9B,EAAa+B,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAExBtb,EAAAf,KAAAK,KAAMia,EAENja,MAAKgc,OAASA,EARDD,EAAAE,YAAqB,YAWpC,OAAAF,IAd8BhC,EAgBLja,GAAAJ,QAAhBqc,IrCqmJNpB,+BAA+B,iCAAiCuB,2CAA2C,SAAStd,EAAQkB,EAAOJ,SAEhIyc,uCAAuC,SAASvd,EAAQkB,EAAOJ,GACrE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsCjoJtB,IAAO0Z,GAAKnb,EAAe,+BAE3B,IAAMwd,GAAY,SAAA1b,GAASX,EAArBqc,EAAY1b,EAKjB,SALK0b,GAKOnC,GAEXvZ,EAAAf,KAAAK,KAAMia,GAJOmC,EAAAC,SAAkB,SAOjC,OAAAD,IAV2BrC,EAY3Bja,GAAsBJ,QAAb0c,ItCgoJNzB,+BAA+B,iCAAiC2B,sCAAsC,SAAS1d,EAAQkB,EAAOJ,GACjI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuClpJtB,IAAO0Z,GAAKnb,EAAe,+BAE3B,IAAM2d,GAAW,SAAA7b,GAASX,EAApBwc,EAAW7b,EAkBhB,SAlBK6b,GAkBOtC,EAAauC,EAAmBC,EAAuBC,GAA1C,GAAAF,QAAA,GAAiB,CAAjBA,EAAA,KAAmB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAElEhc,EAAAf,KAAAK,KAAMia,EAENja,MAAK2c,KAAOH,CACZxc,MAAK4c,SAAWH,CAChBzc,MAAK6c,QAAUH,EAMhBvb,OAAAC,eAAWmb,EAAAhc,UAAA,WvC2oJJc,IuC3oJP,WAEC,MAAOrB,MAAK4c,UvC4oJNrb,WAAY,KACZC,aAAc,MuCvoJrBL,QAAAC,eAAWmb,EAAAhc,UAAA,OvC6oJJc,IuC7oJP,WAEC,MAAOrB,MAAK2c,MvC8oJNpb,WAAY,KACZC,aAAc,MuCzoJrBL,QAAAC,eAAWmb,EAAAhc,UAAA,UvC+oJJc,IuC/oJP,WAEC,MAAOrB,MAAK6c,SvCgpJNtb,WAAY,KACZC,aAAc,MuC1oJd+a,GAAAhc,UAAA+B,MAAP,WAEC,MAAe,IAAIia,GAAYvc,KAAKia,KAAMja,KAAK2c,KAAM3c,KAAK4c,SAAU5c,KAAK6c,SApD5DN,GAAAO,kBAA2B,kBAsD1C,OAAAP,IA3D0BxC,EA6D1Bja,GAAqBJ,QAAZ6c,IvCqpJN5B,+BAA+B,iCAAiCoC,sCAAsC,SAASne,EAAQkB,EAAOJ,GACjI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwC1tJtB,IAAO0Z,GAAKnb,EAAe,+BAE3B,IAAMoe,GAAW,SAAAtc,GAASX,EAApBid,EAAWtc,EAwBhB,SAxBKsc,GAwBO/C,EAAanB,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,GAExBpY,EAAAf,KAAAK,KAAMia,EAENja,MAAKid,SAAWnE,EAOjB3X,OAAAC,eAAW4b,EAAAzc,UAAA,WxCmsJJc,IwCnsJP,WAEC,MAAOrB,MAAKid,UxCosJN1b,WAAY,KACZC,aAAc,MwCjsJdwb,GAAAzc,UAAA+B,MAAP,WAEC,MAAO,IAAI0a,GAAYhd,KAAKia,KAAMja,KAAK8Y,SApC1BkE,GAAAE,eAAwB,eAMxBF,GAAAG,YAAqB,YAQrBH,GAAAI,uBAAgC,sBAwB/C,OAAAJ,IA7C0BjD,EA+C1Bja,GAAqBJ,QAAZsd,IxCmtJNrC,+BAA+B,iCAAiC0C,wCAAwC,SAASze,EAAQkB,EAAOJ,GACnI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyCzwJtB,IAAO0Z,GAAKnb,EAAe,+BAE3B,IAAM0e,GAAa,SAAA5c,GAASX,EAAtBud,EAAa5c,EAQlB,SARK4c,GAQOrD,GAEXvZ,EAAAf,KAAAK,KAAMia,GAROqD,EAAAC,SAAkB,UAUjC,OAAAD,IAZ4BvD,EAc5Bja,GAAuBJ,QAAd4d,IzCswJN3C,+BAA+B,iCAAiC6C,0CAA0C,SAAS5e,EAAQkB,EAAOJ,GACrI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0C3xJtB,IAAO0Z,GAAKnb,EAAe,+BAG3B,IAAM6e,GAAe,SAAA/c,GAASX,EAAxB0d,EAAe/c,EAMpB,SANK+c,GAMOxD,EAAayD,GAExBhd,EAAAf,KAAAK,KAAMia,EACNja,MAAK2d,YAAcD,EAGpBvc,OAAAC,eAAWqc,EAAAld,UAAA,c1CsxJJc,I0CtxJP,WAEC,MAAOrB,MAAK2d,a1CuxJNpc,WAAY,KACZC,aAAc,M0CpyJPic,GAAAG,eAAwB,eAcvC,OAAAH,IAhB8B1D,EAkB9Bja,GAAyBJ,QAAhB+d,I1C2xJN9C,+BAA+B,iCAAiCpE,2CAA2C,SAAS3X,EAAQkB,EAAOJ,GACtI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2CpzJtB,IAAO0Z,GAAKnb,EAAe,+B3C6zJ3B,I2CrzJM2W,GAAgB,SAAA7U,GAASX,EAAzBwV,EAAgB7U,EA8BrB,SA9BK6U,GA8BO0E,EAAajE,GAExBtV,EAAAf,KAAAK,KAAMia,EAENja,MAAK6d,gBAAkB7H,EAMxB7U,OAAAC,eAAWmU,EAAAhV,UAAA,kB3C4xJJc,I2C5xJP,WAEC,MAAOrB,MAAK6d,iB3C6xJNtc,WAAY,KACZC,aAAc,M2CtxJd+T,GAAAhV,UAAA+B,MAAP,WAEC,MAAO,IAAIiT,GAAiBvV,KAAKia,KAAMja,KAAK6d,iBA/C/BtI,GAAAO,gBAAyB,gBAKzBP,GAAAQ,iBAA0B,iBAK1BR,GAAAU,iBAA0B,iBAK1BV,GAAAW,kBAA2B,kBAkC1C,OAAAX,IAtD+BwE,EAwD/Bja,GAA0BJ,QAAjB6V,I3C8yJNoF,+BAA+B,iCAAiCmD,qCAAqC,SAASlf,EAAQkB,EAAOJ,GAChI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Cp3JtB,IAAO0Z,GAAKnb,EAAe,+BAE3B,IAAMmf,GAAU,SAAArd,GAASX,EAAnBge,EAAUrd,EAMf,SANKqd,GAMO9D,GAEXvZ,EAAAf,KAAAK,KAAMia,GALO8D,EAAAC,MAAe,OACfD,GAAAE,eAAwB,eAOvC,OAAAF,IAXyBhE,EAazBja,GAAmBJ,QAAVqe,I5Cm3JNpD,+BAA+B,iCAAiCuD,4BAA4B,SAAStf,EAAQkB,EAAOJ,G6Cl4JvH,GAAOye,GAAQvf,EAAe,gC7Cg6J9B,I6Cl4JMwf,GAAG,WAsOR,QAtOKA,GAsOO3V,EAAcC,EAAc2V,EAAchX,EAAkBC,EAAmBgX,GAA/E,GAAA7V,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA2V,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAhX,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAgX,QAAA,GAAgB,CAAhBA,EAAA,EAE1Fte,KAAKyI,EAAIA,CACTzI,MAAK0I,EAAIA,CACT1I,MAAKqe,EAAIA,CACTre,MAAKqH,MAAQA,CACbrH,MAAKsH,OAASA,CACdtH,MAAKse,MAAQA,EA9Kdnd,OAAAC,eAAWgd,EAAA7d,UAAA,Q7Cw2JJc,I6Cx2JP,WAEC,MAAOrB,MAAKqe,EAAIre,KAAKse,O7Cy2Jf3c,I6Ct2JP,SAAgB4c,GAEfve,KAAKse,MAAQC,EAAMve,KAAKqe,G7Cu2JlB9c,WAAY,KACZC,aAAc,M6Cl2JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,U7Cw2JJc,I6Cx2JP,WAEC,MAAOrB,MAAK0I,EAAI1I,KAAKsH,Q7Cy2Jf3F,I6Ct2JP,SAAkB4c,GAEjBve,KAAKsH,OAASiX,EAAMve,KAAK0I,G7Cu2JnBnH,WAAY,KACZC,aAAc,M6Cj2JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,mB7Cw2JJc,I6Cx2JP,WAEC,GAAIrB,KAAKwe,kBAAoB,KAC5Bxe,KAAKwe,iBAAmB,GAAIL,EAE7Bne,MAAKwe,iBAAiB/V,EAAIzI,KAAKyI,EAAIzI,KAAKqH,KACxCrH,MAAKwe,iBAAiB9V,EAAI1I,KAAK0I,EAAI1I,KAAKsH,MACxCtH,MAAKwe,iBAAiBH,EAAIre,KAAKqe,EAAIre,KAAKse,KAExC,OAAOte,MAAKwe,kB7Cu2JNjd,WAAY,KACZC,aAAc,M6C11JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,S7Cw2JJc,I6Cx2JP,WAEC,MAAOrB,MAAKqe,G7Cy2JN1c,I6Ct2JP,SAAiB4c,GAEhBve,KAAKse,OAASte,KAAKqe,EAAIE,CACvBve,MAAKqe,EAAIE,G7Cu2JHhd,WAAY,KACZC,aAAc,M6C31JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,Q7Cw2JJc,I6Cx2JP,WAEC,MAAOrB,MAAKyI,G7Cy2JN9G,I6Ct2JP,SAAgB4c,GAEfve,KAAKqH,OAASrH,KAAKyI,EAAI8V,CACvBve,MAAKyI,EAAI8V,G7Cu2JHhd,WAAY,KACZC,aAAc,M6Cl2JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,S7Cw2JJc,I6Cx2JP,WAEC,MAAOrB,MAAKyI,EAAIzI,KAAKqH,O7Cy2Jf1F,I6Ct2JP,SAAiB4c,GAEhBve,KAAKqH,MAAQkX,EAAMve,KAAKyI,G7Cu2JlBlH,WAAY,KACZC,aAAc,M6Ch2JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,Q7Cw2JJc,I6Cx2JP,WAEC,GAAIrB,KAAKmF,OAAS,KACjBnF,KAAKmF,MAAQ,GAAIgZ,EAElBne,MAAKmF,MAAMsD,EAAIzI,KAAKqH,KACpBrH,MAAKmF,MAAMuD,EAAI1I,KAAKsH,MACpBtH,MAAKmF,MAAMkZ,EAAIre,KAAKse,KAEpB,OAAOte,MAAKmF,O7Cu2JN5D,WAAY,KACZC,aAAc,M6C31JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,O7Cw2JJc,I6Cx2JP,WAEC,MAAOrB,MAAK0I,G7Cy2JN/G,I6Ct2JP,SAAe4c,GAEdve,KAAKsH,QAAWtH,KAAK0I,EAAI6V,CACzBve,MAAK0I,EAAI6V,G7Cu2JHhd,WAAY,KACZC,aAAc,M6Cj2JrBL,QAAAC,eAAWgd,EAAA7d,UAAA,gB7Cw2JJc,I6Cx2JP,WAEC,GAAIrB,KAAKye,eAAiB,KACzBze,KAAKye,cAAgB,GAAIN,EAE1Bne,MAAKye,cAAchW,EAAIzI,KAAKyI,CAC5BzI,MAAKye,cAAc/V,EAAI1I,KAAK0I,CAC5B1I,MAAKye,cAAcJ,EAAIre,KAAKqe,CAE5B,OAAOre,MAAKye,e7Cu2JNld,WAAY,KACZC,aAAc,M6C/zJd4c,GAAA7d,UAAA+B,MAAP,WAEC,MAAO,IAAI8b,GAAIpe,KAAKyI,EAAGzI,KAAK0I,EAAG1I,KAAKqe,EAAGre,KAAKqH,MAAOrH,KAAKsH,OAAQtH,KAAKse,OAa/DF,GAAA7d,UAAAme,SAAP,SAAgBjW,EAAUC,EAAU2V,GAEnC,MAAQre,MAAKyI,GAAKA,GAAKzI,KAAKyI,EAAIzI,KAAKqH,OAASoB,GAAKzI,KAAK0I,GAAKA,GAAK1I,KAAK0I,EAAI1I,KAAKsH,QAAUoB,GAAK1I,KAAKqe,GAAKA,GAAKre,KAAKqe,EAAIre,KAAKse,OAASD,EAc/HD,GAAA7d,UAAAoe,cAAP,SAAqB9S,GAEpB,MAAQ7L,MAAKyI,GAAKoD,EAASpD,GAAKzI,KAAKyI,EAAIzI,KAAKqH,OAASwE,EAASpD,GAAKzI,KAAK0I,GAAKmD,EAASnD,GAAK1I,KAAK0I,EAAI1I,KAAKsH,QAAUuE,EAASnD,GAAK1I,KAAKqe,GAAKxS,EAASwS,GAAKre,KAAKqe,EAAIre,KAAKse,OAASzS,EAASwS,EAarLD,GAAA7d,UAAAqe,YAAP,SAAmBC,GAElB,MAAQ7e,MAAKyI,GAAKoW,EAAIpW,GAAKzI,KAAKyI,EAAIzI,KAAKqH,OAASwX,EAAIpW,EAAIoW,EAAIxX,OAASrH,KAAK0I,GAAKmW,EAAInW,GAAK1I,KAAK0I,EAAI1I,KAAKsH,QAAUuX,EAAInW,EAAImW,EAAIvX,QAAUtH,KAAKqe,GAAKQ,EAAIR,GAAKre,KAAKqe,EAAIre,KAAKse,OAASO,EAAIR,EAAIQ,EAAIP,MASxLF,GAAA7d,UAAAue,SAAP,SAAgBC,GAEf/e,KAAKyI,EAAIsW,EAAUtW,CACnBzI,MAAK0I,EAAIqW,EAAUrW,CACnB1I,MAAKqe,EAAIU,EAAUV,CACnBre,MAAKqH,MAAQ0X,EAAU1X,KACvBrH,MAAKsH,OAASyX,EAAUzX,MACxBtH,MAAKse,MAAQS,EAAUT,MAgBjBF,GAAA7d,UAAAye,OAAP,SAAcC,GAEb,MAAQjf,MAAKyI,GAAKwW,EAAUxW,GAAKzI,KAAK0I,GAAKuW,EAAUvW,GAAK1I,KAAKqe,GAAKY,EAAUZ,GAAKre,KAAKqH,OAAS4X,EAAU5X,OAASrH,KAAKsH,QAAU2X,EAAU3X,QAAUtH,KAAKse,OAASW,EAAUX,MAoBzKF,GAAA7d,UAAA2e,QAAP,SAAeC,EAAWC,EAAWC,GAEpCrf,KAAKyI,GAAK0W,EAAG,CACbnf,MAAK0I,GAAK0W,EAAG,CACbpf,MAAKqe,GAAKgB,EAAG,CACbrf,MAAKqH,OAAS8X,EAAG,CACjBnf,MAAKsH,QAAU8X,EAAG,CAClBpf,MAAKse,OAASe,EAAG,EAiBXjB,GAAA7d,UAAA+e,aAAP,SAAoBC,GAEnBvf,KAAKyI,GAAK8W,EAAM9W,EAAE,CAClBzI,MAAK0I,GAAK6W,EAAM7W,EAAE,CAClB1I,MAAKqe,GAAKkB,EAAMlB,EAAE,CAClBre,MAAKqH,OAASkY,EAAM9W,EAAE,CACtBzI,MAAKsH,QAAUiY,EAAM7W,EAAE,CACvB1I,MAAKse,OAASiB,EAAMlB,EAAE,EAiBhBD,GAAA7d,UAAAif,aAAP,SAAoBC,GAEnB,GAAIzf,KAAK0f,WAAWD,GAAc,CACjC,GAAIpgB,GAAQ,GAAI+e,EAEhB,IAAIpe,KAAKyI,EAAIgX,EAAYhX,EAAG,CAC3BpJ,EAAEoJ,EAAIzI,KAAKyI,CACXpJ,GAAEgI,MAAQoY,EAAYhX,EAAIzI,KAAKyI,EAAIgX,EAAYpY,KAE/C,IAAIhI,EAAEgI,MAAQrH,KAAKqH,MAClBhI,EAAEgI,MAAQrH,KAAKqH,UACV,CACNhI,EAAEoJ,EAAIgX,EAAYhX,CAClBpJ,GAAEgI,MAAQrH,KAAKyI,EAAIgX,EAAYhX,EAAIzI,KAAKqH,KAExC,IAAIhI,EAAEgI,MAAQoY,EAAYpY,MACzBhI,EAAEgI,MAAQoY,EAAYpY,MAGxB,GAAIrH,KAAK0I,EAAI+W,EAAY/W,EAAG,CAC3BrJ,EAAEqJ,EAAI1I,KAAK0I,CACXrJ,GAAEiI,OAASmY,EAAY/W,EAAI1I,KAAK0I,EAAI+W,EAAYnY,MAEhD,IAAIjI,EAAEiI,OAAStH,KAAKsH,OACnBjI,EAAEiI,OAAStH,KAAKsH,WACX,CACNjI,EAAEqJ,EAAI+W,EAAY/W,CAClBrJ,GAAEiI,OAAStH,KAAK0I,EAAI+W,EAAY/W,EAAI1I,KAAKsH,MAEzC,IAAIjI,EAAEiI,OAASmY,EAAYnY,OAC1BjI,EAAEiI,OAASmY,EAAYnY,OAIzB,GAAItH,KAAKqe,EAAIoB,EAAYpB,EAAG,CAC3Bhf,EAAEgf,EAAIre,KAAKqe,CACXhf,GAAEif,MAAQmB,EAAYpB,EAAIre,KAAKqe,EAAIoB,EAAYnB,KAE/C,IAAIjf,EAAEif,MAAQte,KAAKse,MAClBjf,EAAEif,MAAQte,KAAKse,UACV,CACNjf,EAAEgf,EAAIoB,EAAYpB,CAClBhf,GAAEif,MAAQte,KAAKqe,EAAIoB,EAAYpB,EAAIre,KAAKse,KAExC,IAAIjf,EAAEif,MAAQmB,EAAYnB,MACzBjf,EAAEif,MAAQmB,EAAYnB,MAGxB,MAAOjf,GAGR,MAAO,IAAI+e,GAcLA,GAAA7d,UAAAmf,WAAP,SAAkBD,GAEjB,MAAQzf,MAAKyI,EAAIzI,KAAKqH,MAAQoY,EAAYhX,GAAKzI,KAAKyI,EAAIgX,EAAYhX,EAAIgX,EAAYpY,OAASrH,KAAK0I,EAAI1I,KAAKsH,OAASmY,EAAY/W,GAAK1I,KAAK0I,EAAI+W,EAAY/W,EAAI+W,EAAYnY,QAAUtH,KAAKqe,EAAIre,KAAKse,MAAQmB,EAAYpB,GAAKre,KAAKqe,EAAIoB,EAAYpB,EAAIoB,EAAYnB,MAG1PF,GAAA7d,UAAAof,gBAAP,SAAuB9T,EAAmB+T,EAAoBC,GAE7D,GAAI7f,KAAK2e,cAAc9S,GACtB,MAAO,EAER,IAAIiU,GAAsB9f,KAAKqH,MAAM,CACrC,IAAI0Y,GAAsB/f,KAAKsH,OAAO,CACtC,IAAI0Y,GAAsBhgB,KAAKse,MAAM,CAErC,IAAI2B,GAAiBjgB,KAAKyI,EAAIqX,CAC9B,IAAII,GAAiBlgB,KAAK0I,EAAIqX,CAC9B,IAAII,GAAiBngB,KAAKqe,EAAI2B,CAE9B,IAAII,GAAYvU,EAASpD,EAAIwX,CAC7B,IAAII,GAAYxU,EAASnD,EAAIwX,CAC7B,IAAII,GAAYzU,EAASwS,EAAI8B,CAE7B,IAAII,GAAYX,EAAUnX,CAC1B,IAAI+X,GAAYZ,EAAUlX,CAC1B,IAAI+X,GAAYb,EAAUvB,CAE1B,IAAIqC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,E7C0yJE,I6CvyJFnB,EACJ,IAAIa,EAAK,EAAG,CACXM,GAAqBf,EAAeM,GAAKG,CACzC,IAAIM,EAAmB,EAAG,CACzBF,EAAKN,EAAKQ,EAAiBL,CAC3BI,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIE,GAAMZ,GAAgBY,EAAKZ,GAAgBa,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAapX,EAAI,CACjBoX,GAAanX,EAAI,CACjBmX,GAAaxB,EAAI,CAEjBqB,GAAa,OAIhB,IAAKA,GAAca,EAAK,EAAG,CAC1BM,IAAsBf,EAAeM,GAAKG,CAC1C,IAAIM,EAAmB,EAAG,CACzBF,EAAKN,EAAKQ,EAAiBL,CAC3BI,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIE,GAAMZ,GAAgBY,EAAKZ,GAAgBa,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAapX,GAAK,CAClBoX,GAAanX,EAAI,CACjBmX,GAAaxB,EAAI,CACjBqB,GAAa,OAIhB,IAAKA,GAAcc,EAAK,EAAG,CAC1BK,GAAqBd,EAAeM,GAAKG,CACzC,IAAIK,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BK,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIC,GAAMZ,GAAgBY,EAAKZ,GAAgBc,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAapX,EAAI,CACjBoX,GAAanX,EAAI,CACjBmX,GAAaxB,EAAI,CACjBqB,GAAa,OAIhB,IAAKA,GAAcc,EAAK,EAAG,CAC1BK,IAAsBd,EAAeM,GAAKG,CAC1C,IAAIK,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BK,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIC,GAAMZ,GAAgBY,EAAKZ,GAAgBc,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAapX,EAAI,CACjBoX,GAAanX,GAAK,CAClBmX,GAAaxB,EAAI,CACjBqB,GAAa,OAIhB,IAAKA,GAAce,EAAK,EAAG,CAC1BI,GAAqBb,EAAeM,GAAKG,CACzC,IAAII,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BI,GAAKN,EAAKQ,EAAiBL,CAC3B,IAAIG,GAAMZ,GAAgBY,EAAKZ,GAAgBW,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFD,EAAapX,EAAI,CACjBoX,GAAanX,EAAI,CACjBmX,GAAaxB,EAAI,CACjBqB,GAAa,OAIhB,IAAKA,GAAce,EAAK,EAAG,CAC1BI,IAAsBb,EAAeM,GAAKG,CAC1C,IAAII,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BI,GAAKN,EAAKQ,EAAiBL,CAC3B,IAAIG,GAAMZ,GAAgBY,EAAKZ,GAAgBW,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFD,EAAapX,EAAI,CACjBoX,GAAanX,EAAI,CACjBmX,GAAaxB,GAAK,CAClBqB,GAAa,OAKhB,MAAOA,GAAYmB,GAAoB,EAUjCzC,GAAA7d,UAAAugB,oBAAP,SAA2BC,EAAgBjG,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE1C,GAAI3a,EAEJ,IAAI2a,GAAU,KACbA,EAAS,GAAIqD,EAEdhe,GAAI4gB,EAAMtY,CACV,IAAItI,EAAIH,KAAKyI,EACZtI,EAAIH,KAAKyI,CACV,IAAItI,EAAIH,KAAKyI,EAAIzI,KAAKqH,MACrBlH,EAAIH,KAAKyI,EAAIzI,KAAKqH,KACnByT,GAAOrS,EAAItI,CAEXA,GAAI4gB,EAAMrY,CACV,IAAIvI,EAAIH,KAAK0I,EAAI1I,KAAKsH,OACrBnH,EAAIH,KAAK0I,EAAI1I,KAAKsH,MACnB,IAAInH,EAAIH,KAAK0I,EACZvI,EAAIH,KAAK0I,CACVoS,GAAOpS,EAAIvI,CAEXA,GAAI4gB,EAAM1C,CACV,IAAIle,EAAIH,KAAKqe,EACZle,EAAIH,KAAKqe,CACV,IAAIle,EAAIH,KAAKqe,EAAIre,KAAKse,MACrBne,EAAIH,KAAKqe,EAAIre,KAAKse,KACnBxD,GAAOuD,EAAIle,CAEX,OAAO2a,GASDsD,GAAA7d,UAAAygB,QAAP,WAEC,MAAQhhB,MAAKyI,GAAK,GAAKzI,KAAK0I,GAAK,GAAK1I,KAAKqe,GAAK,GAAKre,KAAKqH,OAAS,GAAKrH,KAAKsH,QAAU,GAAKtH,KAAKse,OAAS,EAWpGF,GAAA7d,UAAAuC,OAAP,SAAcqc,EAAWC,EAAWC,GAEnCrf,KAAKyI,GAAK0W,CACVnf,MAAK0I,GAAK0W,CACVpf,MAAKqe,GAAKgB,EAUJjB,GAAA7d,UAAA0gB,eAAP,SAAsBpV,GAErB7L,KAAKyI,GAAKoD,EAASpD,CACnBzI,MAAK0I,GAAKmD,EAASnD,CACnB1I,MAAKqe,GAAKxS,EAASwS,EAYbD,GAAA7d,UAAA2gB,SAAP,WAEClhB,KAAKyI,EAAI,CACTzI,MAAK0I,EAAI,CACT1I,MAAKqe,EAAI,CACTre,MAAKqH,MAAQ,CACbrH,MAAKsH,OAAS,CACdtH,MAAKse,MAAQ,EAgBPF,GAAA7d,UAAA4gB,MAAP,SAAaC,EAAWC,EAAWC,EAAWC,EAAeC,EAAgBC,GAE5EzhB,KAAKyI,EAAI2Y,CACTphB,MAAK0I,EAAI2Y,CACTrhB,MAAKqe,EAAIiD,CACTthB,MAAKqH,MAAQka,CACbvhB,MAAKsH,OAASka,CACdxhB,MAAKse,MAAQmD,EAWPrD,GAAA7d,UAAAmhB,SAAP,WAEC,MAAO,YAAc1hB,KAAKyI,EAAI,OAASzI,KAAK0I,EAAI,OAAS1I,KAAKqe,EAAI,WAAare,KAAKqH,MAAQ,YAAcrH,KAAKsH,OAAS,WAAatH,KAAKse,MAAQ,IAc5IF,GAAA7d,UAAAohB,MAAP,SAAaC,GAEZ,GAAIziB,GAAQ,GAAIif,EAEhB,IAAIpe,KAAKyI,EAAImZ,EAAQnZ,EAAG,CACvBtJ,EAAEsJ,EAAIzI,KAAKyI,CACXtJ,GAAEkI,MAAQua,EAAQnZ,EAAIzI,KAAKyI,EAAImZ,EAAQva,KAEvC,IAAIlI,EAAEkI,MAAQrH,KAAKqH,MAClBlI,EAAEkI,MAAQrH,KAAKqH,UACV,CACNlI,EAAEsJ,EAAImZ,EAAQnZ,CACdtJ,GAAEkI,MAAQrH,KAAKyI,EAAImZ,EAAQnZ,EAAIzI,KAAKqH,KAEpC,IAAIlI,EAAEkI,MAAQua,EAAQva,MACrBlI,EAAEkI,MAAQua,EAAQva,MAGpB,GAAIrH,KAAK0I,EAAIkZ,EAAQlZ,EAAG,CACvBvJ,EAAEuJ,EAAI1I,KAAK0I,CACXvJ,GAAEmI,OAASsa,EAAQlZ,EAAI1I,KAAK0I,EAAIkZ,EAAQta,MAExC,IAAInI,EAAEmI,OAAStH,KAAKsH,OACnBnI,EAAEmI,OAAStH,KAAKsH,WACX,CACNnI,EAAEuJ,EAAIkZ,EAAQlZ,CACdvJ,GAAEmI,OAAStH,KAAK0I,EAAIkZ,EAAQlZ,EAAI1I,KAAKsH,MAErC,IAAInI,EAAEmI,OAASsa,EAAQta,OACtBnI,EAAEmI,OAASsa,EAAQta,OAGrB,GAAItH,KAAKqe,EAAIuD,EAAQvD,EAAG,CACvBlf,EAAEkf,EAAIre,KAAKqe,CACXlf,GAAEmf,MAAQsD,EAAQvD,EAAIre,KAAKqe,EAAIuD,EAAQtD,KAEvC,IAAInf,EAAEmf,MAAQte,KAAKse,MAClBnf,EAAEmf,MAAQte,KAAKse,UACV,CACNnf,EAAEkf,EAAIuD,EAAQvD,CACdlf,GAAEmf,MAAQte,KAAKqe,EAAIuD,EAAQvD,EAAIre,KAAKse,KAEpC,IAAInf,EAAEmf,MAAQsD,EAAQtD,MACrBnf,EAAEmf,MAAQsD,EAAQtD,MAGpB,MAAOnf,GAET,OAAAif,KAEate,GAAAJ,QAAJ0e,I7C4wJNyD,gCAAgC,kCAAkCC,uCAAuC,SAASljB,EAAQkB,EAAOJ,GACpI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8CtjLtB,IAAO6G,GAAUtI,EAAa,mCAC9B,IAAOic,GAAejc,EAAY,yCAClC,IAAOmb,GAAKnb,EAAc,+B9CimL1B,I8CvjLMmjB,GAAc,SAAArhB,GAASX,EAAvBgiB,EAAcrhB,EAyMnB,SAzMKqhB,GAyMOpZ,EAA0BE,EAA4BE,EAA2BE,EAA4BL,EAAsBE,EAAwBE,EAAuBE,GAAlL,GAAAP,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAE,QAAA,GAA0B,CAA1BA,EAAA,EAA4B,GAAAE,QAAA,GAAyB,CAAzBA,EAAA,EAA2B,GAAAE,QAAA,GAA0B,CAA1BA,EAAA,EAA4B,GAAAL,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAE,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAE,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAE,QAAA,GAAsB,CAAtBA,EAAA,EAEvLxI,EAAAf,KAAAK,KArJIA,MAAAgiB,aAAqB,GAAIjI,GAAMA,EAAM6B,OAsJ/C5b,MAAKiiB,eAAiBtZ,CACtB3I,MAAKkiB,iBAAmBrZ,CACxB7I,MAAKmiB,gBAAkBpZ,CACvB/I,MAAKoiB,iBAAmBnZ,CACxBjJ,MAAKqiB,WAAazZ,CAClB5I,MAAKsiB,aAAexZ,CACpB9I,MAAKuiB,YAAcvZ,CACnBhJ,MAAKwiB,aAAetZ,EA3JlB/H,OAAAC,eAAW2gB,EAAAxhB,UAAA,mB9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKoiB,kB9C4iLZzgB,I8CziLJ,SAA2BC,GAEvB5B,KAAKoiB,iBAAmBxgB,CACxB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,e9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKwiB,c9C4iLZ7gB,I8CziLJ,SAAuBC,GAEnB5B,KAAKwiB,aAAe5gB,CACpB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,iB9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKiiB,gB9C4iLZtgB,I8CziLJ,SAAyBC,GAErB5B,KAAKiiB,eAAiBrgB,CACtB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,a9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKqiB,Y9C4iLZ1gB,I8CziLJ,SAAqBC,GAEjB5B,KAAKqiB,WAAazgB,CAClB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,mB9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKkiB,kB9C4iLZvgB,I8CziLJ,SAA2BC,GAEvB5B,KAAKkiB,iBAAmBtgB,CACxB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,e9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKsiB,c9C4iLZ3gB,I8CziLJ,SAAuBC,GAEnB5B,KAAKsiB,aAAe1gB,CACpB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,kB9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKmiB,iB9C4iLZxgB,I8CziLJ,SAA0BC,GAEtB5B,KAAKmiB,gBAAkBvgB,CACvB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxiLlBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,c9C2iLPc,I8C3iLJ,WAEI,MAAOrB,MAAKuiB,a9C4iLZ5gB,I8CziLJ,SAAsBC,GAElB5B,KAAKuiB,YAAc3gB,CACnB5B,MAAKyiB,e9C0iLLlhB,WAAY,KACZC,aAAc,M8CxhLrBL,QAAAC,eAAW2gB,EAAAxhB,UAAA,S9C2iLJc,I8C3iLP,WAEC,MAAQrB,MAAKqiB,YAAc,GAAQriB,KAAKsiB,cAAgB,EAAKtiB,KAAKuiB,a9C4iL5D5gB,I8CziLP,SAAiBC,GAEhB,GAAI2J,GAAgBrE,EAAWsE,mBAAmB5J,EAElD5B,MAAKqiB,WAAa9W,EAAK,EACvBvL,MAAKsiB,aAAe/W,EAAK,EACzBvL,MAAKuiB,YAAchX,EAAK,EAExBvL,MAAKiiB,eAAiB,CACtBjiB,MAAKkiB,iBAAmB,CACxBliB,MAAKmiB,gBAAkB,CAEjBniB,MAAKyiB,e9CuiLLlhB,WAAY,KACZC,aAAc,M8CngLXugB,GAAAxhB,UAAAmiB,MAAP,WAEI1iB,KAAKiiB,eAAiB,CACtBjiB,MAAKkiB,iBAAmB,CACxBliB,MAAKmiB,gBAAkB,CACvBniB,MAAKoiB,iBAAmB,CACxBpiB,MAAKqiB,WAAa,CAClBriB,MAAKsiB,aAAe,CACpBtiB,MAAKuiB,YAAc,CACnBviB,MAAKwiB,aAAe,EAGjBT,GAAAxhB,UAAAue,SAAP,SAAgBzU,GAEZrK,KAAKiiB,eAAiB5X,EAAO1B,aAC7B3I,MAAKkiB,iBAAmB7X,EAAOxB,eAC/B7I,MAAKmiB,gBAAkB9X,EAAOtB,cAC9B/I,MAAKoiB,iBAAmB/X,EAAOpB,eAC/BjJ,MAAKqiB,WAAahY,EAAOzB,SACzB5I,MAAKsiB,aAAejY,EAAOvB,WAC3B9I,MAAKuiB,YAAclY,EAAOrB,UAC1BhJ,MAAKwiB,aAAenY,EAAOnB,YAGvB6Y,GAAAxhB,UAAAkiB,YAAR,WAEIziB,KAAKqR,cAAcrR,KAAKgiB,cAGrBD,GAAAxhB,UAAAoiB,QAAP,SAAeC,GAEX5iB,KAAKqiB,YAAcO,EAAGha,UAAY5I,KAAKiiB,cACvCjiB,MAAKsiB,cAAgBM,EAAG9Z,YAAc9I,KAAKkiB,gBAC3CliB,MAAKuiB,aAAeK,EAAG5Z,WAAahJ,KAAKmiB,eACzCniB,MAAKwiB,cAAgBI,EAAG1Z,YAAclJ,KAAKoiB,gBAE3CpiB,MAAKiiB,gBAAkBW,EAAGja,aAC1B3I,MAAKkiB,kBAAoBU,EAAG/Z,eAC5B7I,MAAKmiB,iBAAmBS,EAAG7Z,cAC3B/I,MAAKoiB,kBAAoBQ,EAAG3Z,eAE5BjJ,MAAKyiB,cAEb,OAAAV,IAjQ6BlH,EAmQ7B/a,GAAwBJ,QAAfqiB,I9C8/KNpH,+BAA+B,+BAA+BC,yCAAyC,yCAAyCzO,mCAAmC,qCAAqC0W,mCAAmC,SAASjkB,EAAQkB,EAAOJ,GAItR,G+C9yLMojB,GAAU,WAAhB,QAAMA,MAKSA,EAAAC,mBAA4B,IAAIjZ,KAAKkZ,EAKrCF,GAAAG,mBAA4BnZ,KAAKkZ,GAAG,GACnD,OAAAF,KAEoBhjB,GAAAJ,QAAXojB,O/CgzLHI,sCAAsC,SAAStkB,EAAQkB,EAAOJ,GgD/zLpE,GAAOyjB,GAAQvkB,EAAe,gCAE9B,IAAOuf,GAAQvf,EAAe,gChDm0L9B,IgD7zLMwkB,GAAa,WAAnB,QAAMA,MAeSA,EAAAC,kBAAd,SAAgCC,EAAwBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEvD,GAAI9a,GAAW6a,EAAY7a,CAC3B,IAAIC,GAAW4a,EAAY5a,CAC3B,IAAI2V,GAAWiF,EAAYjF,CAC3B,IAAIlJ,GAAWmO,EAAYnO,CAE3B,IAAIqO,GAAY/a,EAAEA,CAClB,IAAIgb,GAAYhb,EAAEC,CAClB,IAAIgb,GAAYjb,EAAE4V,CAClB,IAAIsF,GAAYlb,EAAE0M,CAElB,IAAIyO,GAAYlb,EAAEA,CAClB,IAAImb,GAAYnb,EAAE2V,CAClB,IAAIyF,GAAYpb,EAAEyM,CAElB,IAAI4O,GAAY1F,EAAEA,CAClB,IAAI2F,GAAY3F,EAAElJ,CAElB,IAAI8O,GAAeb,EAAcc,kBACjCD,GAAI,GAAK,EAAI,GAAGL,EAAKG,EACrBE,GAAI,GAAK,GAAGR,EAAKO,EACjBC,GAAI,GAAK,GAAGP,EAAKI,EACjBG,GAAI,GAAK,GAAGR,EAAKO,EACjBC,GAAI,GAAK,EAAI,GAAGT,EAAKO,EACrBE,GAAI,GAAK,GAAGJ,EAAKF,EACjBM,GAAI,GAAK,GAAGP,EAAKI,EACjBG,GAAI,GAAK,GAAGJ,EAAKF,EACjBM,GAAI,IAAM,EAAI,GAAGT,EAAKI,EACtBK,GAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CAC1DA,GAAI,IAAM,CAEV,IAAIV,EAAG,CACNA,EAAEY,gBAAgBF,EAClB,OAAOV,OAEP,OAAO,IAAIJ,GAASc,GASRb,GAAAgB,WAAd,SAAyBb,EAAYc,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAGpC,GAAIA,IAAM,KAAM,CAEfA,EAAI,GAAIlG,GAAS,EAAK,EAAK,GAI5BoF,EAAEe,aAAa,EAAGD,EAClBA,GAAEE,WAEF,OAAOF,GASMjB,GAAAoB,MAAd,SAAoBjB,EAAYc,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAI/B,GAAIA,IAAM,KAAM,CAEfA,EAAI,GAAIlG,GAAS,EAAK,EAAK,GAI5BoF,EAAEe,aAAa,EAAGD,EAClBA,GAAEE,WAEF,OAAOF,GASMjB,GAAAqB,SAAd,SAAuBlB,EAAYc,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAGlC,GAAIA,IAAM,KAAM,CAEfA,EAAI,GAAIlG,GAAS,EAAK,EAAK,GAI5BoF,EAAEe,aAAa,EAAGD,EAClBA,GAAEE,WAEF,OAAOF,GAMMjB,GAAAsB,QAAd,SAAsBC,EAAaC,GAElC,GAAIC,GAAczB,EAAcc,kBAChC,IAAIY,GAAcF,EAAGG,OACrBJ,GAAGK,cAAcH,EAEjB,KAAK,GAAIxlB,GAAW,EAAGA,EAAI,KAAMA,EAAG,CACnC,GAAIwlB,EAAGxlB,IAAMylB,EAAGzlB,GACf,MAAO,OAGT,MAAO,MAGM+jB,GAAA6B,OAAd,SAAqBxa,EAAiBya,EAAcC,EAAcC,GAEjE,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAItB,GAAeb,EAAcc,kBAEjCqB,GAAOJ,EAAIK,aAAaJ,EACxBG,GAAKhB,WAELe,GAAMC,EAAKC,aAAaL,EACxBG,GAAIf,WACJc,GAAOF,EAAI7iB,OACX+iB,GAAKd,WAELN,GAAI,GAAKsB,EAAK9c,CACdwb,GAAI,GAAKqB,EAAI7c,CACbwb,GAAI,IAAMoB,EAAK5c,CACfwb,GAAI,GAAK,CAETA,GAAI,GAAKsB,EAAK7c,CACdub,GAAI,GAAKqB,EAAI5c,CACbub,GAAI,IAAMoB,EAAK3c,CACfub,GAAI,GAAK,CAETA,GAAI,GAAKsB,EAAKlH,CACd4F,GAAI,GAAKqB,EAAIjH,CACb4F,GAAI,KAAOoB,EAAKhH,CAChB4F,GAAI,IAAM,CAEVA,GAAI,KAAOsB,EAAKE,WAAWP,EAC3BjB,GAAI,KAAOqB,EAAIG,WAAWP,EAC1BjB,GAAI,IAAMoB,EAAKI,WAAWP,EAC1BjB,GAAI,IAAM,CAEVxZ,GAAO0Z,gBAAgBF,GAGVb,GAAAsC,WAAd,SAAyBC,EAAe7K,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEvC,GAAIA,IAAW,KACdA,EAAS,GAAIqI,EAEd,IAAI/jB,GAAWumB,EAAMvmB,EAAGc,EAAWylB,EAAMzlB,EAAG0lB,EAAWD,EAAMC,EAAG3lB,EAAW0lB,EAAM1lB,CACjF,IAAI8kB,GAAmB3B,EAAcc,kBACrC,IAAI2B,IAAc,EAAEzmB,EAAEc,CACtB,IAAI4lB,IAAc,EAAE1mB,EAAEwmB,CACtB,IAAIG,IAAc,EAAE7lB,EAAE0lB,CAEtBb,GAAQ,GAAK,EAAI,EAAE3lB,EAAEA,CACrB2lB,GAAQ,GAAKc,CACbd,GAAQ,GAAKe,CACbf,GAAQ,KAAO,EAAE3lB,EAAEa,CACnB8kB,GAAQ,GAAKc,CACbd,GAAQ,GAAK,EAAI,EAAE7kB,EAAEA,CACrB6kB,GAAQ,GAAKgB,CACbhB,GAAQ,KAAO,EAAE7kB,EAAED,CACnB8kB,GAAQ,GAAKe,CACbf,GAAQ,GAAKgB,CACbhB,GAAQ,IAAM,EAAI,EAAEa,EAAEA,CACtBb,GAAQ,KAAO,EAAEa,EAAE3lB,CACnB8kB,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CACdjK,GAAOqJ,gBAAgBY,EAEvB,OAAOjK,GAIMsI,GAAA4C,gBAAd,SAA8Bvb,EAAiBwb,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE/D,IAAKA,EACJA,EAAS,GAAI/H,EAEd,IAAI8F,GAAoBb,EAAcc,kBACtCzZ,GAAOua,cAAcf,EACrB,IAAI7kB,GAAW6kB,EAAI,EACnB,IAAIplB,GAAWolB,EAAI,EACnB,IAAI5kB,GAAW4kB,EAAI,EACnB,IAAIV,GAAWU,EAAI,EACnB,IAAI/jB,GAAW+jB,EAAI,EACnB,IAAI3kB,GAAW2kB,EAAI,EACnB,IAAI7f,GAAW6f,EAAI,EACnB,IAAIllB,GAAWklB,EAAI,EACnB,IAAI2B,GAAW3B,EAAI,EACnB,IAAIhZ,GAAWgZ,EAAI,EACnB,IAAIkC,GAAWlC,EAAI,GACnB,IAAI/kB,GAAW+kB,EAAI,GACnB,IAAIhkB,GAAWgkB,EAAI,GACnB,IAAI7O,GAAW6O,EAAI,GACnB,IAAIxkB,GAAWwkB,EAAI,GACnB,IAAI9jB,GAAW8jB,EAAI,GAEnB,IAAIxb,GAAWwd,EAAOxd,CACtB,IAAIC,GAAWud,EAAOvd,CACtB,IAAI2V,GAAW4H,EAAO5H,CACtB6H,GAAOzd,EAAIrJ,EAAIqJ,EAAIvI,EAAIwI,EAAIkd,EAAIvH,EAAIpe,CACnCimB,GAAOxd,EAAI7J,EAAI4J,EAAInJ,EAAIoJ,EAAIuC,EAAIoT,EAAIjJ,CACnC8Q,GAAO7H,EAAIhf,EAAIoJ,EAAIrE,EAAIsE,EAAIyd,EAAI9H,EAAI5e,CACnCymB,GAAO/Q,EAAIoO,EAAI9a,EAAI1J,EAAI2J,EAAIxJ,EAAImf,EAAIle,CACnC,OAAO+lB,GAGM9C,GAAAgD,qBAAd,SAAmC3b,EAAiBwb,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEpE,IAAKA,EACJA,EAAS,GAAI/H,EAEd,IAAI8F,GAAoBb,EAAcc,kBACtCzZ,GAAOua,cAAcf,EACrB,IAAI7kB,GAAW6kB,EAAI,EACnB,IAAIplB,GAAWolB,EAAI,EACnB,IAAI5kB,GAAW4kB,EAAI,EACnB,IAAIV,GAAWU,EAAI,EACnB,IAAI/jB,GAAW+jB,EAAI,EACnB,IAAI3kB,GAAW2kB,EAAI,EACnB,IAAI7f,GAAW6f,EAAI,EACnB,IAAIllB,GAAWklB,EAAI,EACnB,IAAI2B,GAAW3B,EAAI,EACnB,IAAIhZ,GAAWgZ,EAAI,EACnB,IAAIkC,GAAWlC,EAAI,GACnB,IAAI/kB,GAAW+kB,EAAI,GACnB,IAAIxb,GAAWwd,EAAOxd,CACtB,IAAIC,GAAWud,EAAOvd,CACtB,IAAI2V,GAAW4H,EAAO5H,CACtB6H,GAAOzd,EAAIrJ,EAAIqJ,EAAIvI,EAAIwI,EAAIkd,EAAIvH,CAC/B6H,GAAOxd,EAAI7J,EAAI4J,EAAInJ,EAAIoJ,EAAIuC,EAAIoT,CAC/B6H,GAAO7H,EAAIhf,EAAIoJ,EAAIrE,EAAIsE,EAAIyd,EAAI9H,CAC/B6H,GAAO/Q,EAAIoO,EAAI9a,EAAI1J,EAAI2J,EAAIxJ,EAAImf,CAC/B,OAAO6H,GAGM9C,GAAAiD,eAAd,SAA6B5V,EAAoByV,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhD,IAAIA,EACHA,EAAS,GAAI/H,EAEd1N,GAAU6T,aAAa,EAAG4B,EAC1B,OAAOA,GAGM9C,GAAAkD,sBAAd,SAAoC7b,EAAiB8b,EAAmBC,GAEvE,GAAIvC,GAAoBb,EAAcc,kBACtCzZ,GAAOua,cAAcf,EACrB,IAAI7kB,GAAW6kB,EAAI,EACnB,IAAIplB,GAAWolB,EAAI,EACnB,IAAI5kB,GAAW4kB,EAAI,EACnB,IAAIV,GAAWU,EAAI,EACnB,IAAI/jB,GAAW+jB,EAAI,EACnB,IAAI3kB,GAAW2kB,EAAI,EACnB,IAAI7f,GAAW6f,EAAI,EACnB,IAAIllB,GAAWklB,EAAI,EACnB,IAAI2B,GAAW3B,EAAI,EACnB,IAAIhZ,GAAWgZ,EAAI,EACnB,IAAIkC,GAAWlC,EAAI,GACnB,IAAI/kB,GAAW+kB,EAAI,GACnB,IAAIwC,GAAkB,CACtB,IAAI7mB,GAAgB2mB,EAAI3mB,MACxB,KAAI,GAAI4I,GAAe,EAAGA,EAAM5I,EAAQ4I,GAAO,EAAG,CACjD,GAAIC,GAAW8d,EAAI/d,EACnB,IAAIE,GAAW6d,EAAI/d,EAAM,EACzB,IAAI6V,GAAWkI,EAAI/d,EAAM,EACzBge,GAAKC,KAAcrnB,EAAIqJ,EAAIvI,EAAIwI,EAAIkd,EAAIvH,CACvCmI,GAAKC,KAAc5nB,EAAI4J,EAAInJ,EAAIoJ,EAAIuC,EAAIoT,CACvCmI,GAAKC,KAAcpnB,EAAIoJ,EAAIrE,EAAIsE,EAAIyd,EAAI9H,GAzS3B+E,GAAAc,mBAA8B,GAAIpjB,OAAc,GAGhDsiB,GAAAsD,mBAA8B,GAAIvD,EAySjD,OAAAC,KAEAtjB,GAAuBJ,QAAd0jB,IhDgxLNuD,gCAAgC,gCAAgC9E,gCAAgC,kCAAkC8E,iCAAiC,SAAS/nB,EAAQkB,EAAOJ,GiD5kM9L,GAAOknB,GAAahoB,EAAa,qCAEjC,IAAOuf,GAAQvf,EAAe,gCAC9B,IAAOqa,GAAara,EAAa,uCAEjC,IAAMukB,GAAQ,WAab,QAbKA,GAaOkB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEX,GAAIA,GAAK,MAAQA,EAAEzkB,QAAU,GAC5BI,KAAK+kB,QAAUV,EAAEwC,aAEjB7mB,MAAK+kB,SAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAMzD5B,EAAA5iB,UAAAumB,OAAP,SAAcC,GAEb,GAAIC,GAAchnB,KAAK+kB,QAAQ,GAAIkC,EAAcjnB,KAAK+kB,QAAQ,GAAImC,EAAclnB,KAAK+kB,QAAQ,GAAIoC,EAAcnnB,KAAK+kB,QAAQ,IAAKqC,EAAcpnB,KAAK+kB,QAAQ,GAAIsC,EAAcrnB,KAAK+kB,QAAQ,GAAIuC,EAActnB,KAAK+kB,QAAQ,GAAIwC,EAAcvnB,KAAK+kB,QAAQ,IAAKyC,EAAcxnB,KAAK+kB,QAAQ,GAAI0C,EAAcznB,KAAK+kB,QAAQ,GAAI2C,EAAc1nB,KAAK+kB,QAAQ,IAAK4C,EAAc3nB,KAAK+kB,QAAQ,IAAK6C,EAAc5nB,KAAK+kB,QAAQ,GAAI8C,EAAc7nB,KAAK+kB,QAAQ,GAAI+C,EAAc9nB,KAAK+kB,QAAQ,IAAKgD,EAAc/nB,KAAK+kB,QAAQ,IAAKiD,EAAcjB,EAAIhC,QAAQ,GAAIkD,EAAclB,EAAIhC,QAAQ,GAAImD,EAAcnB,EAAIhC,QAAQ,GAAIoD,EAAcpB,EAAIhC,QAAQ,IAAKqD,EAAcrB,EAAIhC,QAAQ,GAAIsD,EAActB,EAAIhC,QAAQ,GAAIuD,EAAcvB,EAAIhC,QAAQ,GAAIwD,EAAcxB,EAAIhC,QAAQ,IAAKyD,EAAczB,EAAIhC,QAAQ,GAAI0D,EAAc1B,EAAIhC,QAAQ,GAAI2D,EAAc3B,EAAIhC,QAAQ,IAAK4D,EAAc5B,EAAIhC,QAAQ,IAAK6D,EAAc7B,EAAIhC,QAAQ,GAAI8D,EAAc9B,EAAIhC,QAAQ,GAAI+D,EAAc/B,EAAIhC,QAAQ,IAAKgE,EAAchC,EAAIhC,QAAQ,GAE39B/kB,MAAK+kB,QAAQ,GAAKiC,EAAKgB,EAAOZ,EAAKa,EAAOT,EAAKU,EAAON,EAAKO,CAC3DnoB,MAAK+kB,QAAQ,GAAKiC,EAAKoB,EAAOhB,EAAKiB,EAAOb,EAAKc,EAAOV,EAAKW,CAC3DvoB,MAAK+kB,QAAQ,GAAKiC,EAAKwB,EAAOpB,EAAKqB,EAAOjB,EAAKkB,EAAOd,EAAKe,CAC3D3oB,MAAK+kB,QAAQ,GAAKiC,EAAK4B,EAAOxB,EAAKyB,EAAOrB,EAAKsB,EAAOlB,EAAKmB,CAE3D/oB,MAAK+kB,QAAQ,GAAKkC,EAAKe,EAAOX,EAAKY,EAAOR,EAAKS,EAAOL,EAAKM,CAC3DnoB,MAAK+kB,QAAQ,GAAKkC,EAAKmB,EAAOf,EAAKgB,EAAOZ,EAAKa,EAAOT,EAAKU,CAC3DvoB,MAAK+kB,QAAQ,GAAKkC,EAAKuB,EAAOnB,EAAKoB,EAAOhB,EAAKiB,EAAOb,EAAKc,CAC3D3oB,MAAK+kB,QAAQ,GAAKkC,EAAK2B,EAAOvB,EAAKwB,EAAOpB,EAAKqB,EAAOjB,EAAKkB,CAE3D/oB,MAAK+kB,QAAQ,GAAKmC,EAAKc,EAAOV,EAAKW,EAAOP,EAAKQ,EAAOJ,EAAKK,CAC3DnoB,MAAK+kB,QAAQ,GAAKmC,EAAKkB,EAAOd,EAAKe,EAAOX,EAAKY,EAAOR,EAAKS,CAC3DvoB,MAAK+kB,QAAQ,IAAMmC,EAAKsB,EAAOlB,EAAKmB,EAAOf,EAAKgB,EAAOZ,EAAKa,CAC5D3oB,MAAK+kB,QAAQ,IAAMmC,EAAK0B,EAAOtB,EAAKuB,EAAOnB,EAAKoB,EAAOhB,EAAKiB,CAE5D/oB,MAAK+kB,QAAQ,IAAMoC,EAAKa,EAAOT,EAAKU,EAAON,EAAKO,EAAOH,EAAKI,CAC5DnoB,MAAK+kB,QAAQ,IAAMoC,EAAKiB,EAAOb,EAAKc,EAAOV,EAAKW,EAAOP,EAAKQ,CAC5DvoB,MAAK+kB,QAAQ,IAAMoC,EAAKqB,EAAOjB,EAAKkB,EAAOd,EAAKe,EAAOX,EAAKY,CAC5D3oB,MAAK+kB,QAAQ,IAAMoC,EAAKyB,EAAOrB,EAAKsB,EAAOlB,EAAKmB,EAAOf,EAAKgB,EAMtD5F,GAAA5iB,UAAAyoB,eAAP,SAAsBC,EAAgBC,GAErC,GAAI3F,GAAaJ,EAASgG,gBAAgBD,EAAKzgB,EAAGygB,EAAKxgB,EAAGwgB,EAAK7K,EAAG4K,EAElEjpB,MAAK8mB,OAAOvD,GAMNJ,GAAA5iB,UAAA6oB,YAAP,SAAmBC,EAAeC,EAAeC,GAEhDvpB,KAAK8mB,OAAO,GAAI3D,IAAWkG,EAAQ,EAAK,EAAK,EAAK,EAAKC,EAAQ,EAAK,EAAK,EAAK,EAAKC,EAAQ,EAAK,EAAK,EAAK,EAAK,KAMzGpG,GAAA5iB,UAAAipB,kBAAP,SAAyB/gB,EAAUC,EAAU2V,GAE5Cre,KAAK+kB,QAAQ,KAAOtc,CACpBzI,MAAK+kB,QAAQ,KAAOrc,CACpB1I,MAAK+kB,QAAQ,KAAO1G,EAMd8E,GAAA5iB,UAAA+B,MAAP,WAEC,MAAO,IAAI6gB,GAASnjB,KAAK+kB,QAAQ0E,MAAM,IAMjCtG,GAAA5iB,UAAAmpB,eAAP,SAAsBC,EAAeC,GAEpC,OAAQD,GACP,IAAK,GACJ3pB,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,GAAM6E,EAASvL,CAC7Bre,MAAK+kB,QAAS,GAAM6E,EAASzU,CAC7B,MACD,KAAK,GACJnV,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,GAAM6E,EAASvL,CAC7Bre,MAAK+kB,QAAS,GAAM6E,EAASzU,CAC7B,MACD,KAAK,GACJnV,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,IAAO6E,EAASvL,CAC9Bre,MAAK+kB,QAAS,IAAO6E,EAASzU,CAC9B,MACD,KAAK,GACJnV,KAAK+kB,QAAS,IAAO6E,EAASnhB,CAC9BzI,MAAK+kB,QAAS,IAAO6E,EAASlhB,CAC9B1I,MAAK+kB,QAAS,IAAO6E,EAASvL,CAC9Bre,MAAK+kB,QAAS,IAAO6E,EAASzU,CAC9B,MACD,SACC,KAAM,IAAI8D,GAAc,yBAA2B0Q,EAAS,+BAOxDxG,GAAA5iB,UAAA+jB,aAAP,SAAoBqF,EAAeC,GAElC,OAAQD,GACP,IAAK,GACJC,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,EAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,EAC3B,MACD,KAAK,GACJ6E,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,EAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,EAC3B,MACD,KAAK,GACJ6E,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,GAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,GAC3B,MACD,KAAK,GACJ6E,EAASnhB,EAAIzI,KAAK+kB,QAAS,GAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,GAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,GAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,GAC3B,MACD,SACC,KAAM,IAAI9L,GAAc,yBAA2B0Q,EAAS,+BAOxDxG,GAAA5iB,UAAAue,SAAP,SAAgB+K,GAEf,GAAI1nB,GAAa0nB,EAAe9E,QAAQnlB,MACxC,KAAK,GAAIgmB,GAAW,EAAGA,EAAIzjB,EAAKyjB,IAC/B5lB,KAAK+kB,QAAQa,GAAKiE,EAAe9E,QAAQa,GAGpCzC,GAAA5iB,UAAA4jB,gBAAP,SAAuB8B,EAAiBzd,EAAkBshB,GAAlB,GAAAthB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAshB,QAAA,GAAyB,CAAzBA,EAAA,MAEzD,GAAIA,EACH9pB,KAAK8pB,WAEN,IAAI3nB,GAAa8jB,EAAOrmB,OAAS4I,CACjC,KAAK,GAAIod,GAAW,EAAGA,EAAIzjB,EAAKyjB,IAC/B5lB,KAAK+kB,QAAQa,GAAKK,EAAOL,EAAIpd,EAE9B,IAAIshB,EACH9pB,KAAK8pB,YAGA3G,GAAA5iB,UAAAykB,cAAP,SAAqBiB,EAAiBzd,EAAkBshB,GAAlB,GAAAthB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAshB,QAAA,GAAyB,CAAzBA,EAAA,MAEvD,GAAIA,EACH9pB,KAAK8pB,WAEN,IAAI3nB,GAAanC,KAAK+kB,QAAQnlB,MAC9B,KAAK,GAAIgmB,GAAW,EAAGA,EAAIzjB,EAAKyjB,IAC/BK,EAAOL,EAAIpd,GAAUxI,KAAK+kB,QAAQa,EAEnC,IAAIkE,EACH9pB,KAAK8pB,YAMA3G,GAAA5iB,UAAAwpB,YAAP,SAAmBC,EAAYJ,GAE9B,OAAQI,GACP,IAAK,GACJhqB,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,GAAM6E,EAASvL,CAC7Bre,MAAK+kB,QAAS,IAAO6E,EAASzU,CAC9B,MACD,KAAK,GACJnV,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,GAAM6E,EAASvL,CAC7Bre,MAAK+kB,QAAS,IAAO6E,EAASzU,CAC9B,MACD,KAAK,GACJnV,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,IAAO6E,EAASvL,CAC9Bre,MAAK+kB,QAAS,IAAO6E,EAASzU,CAC9B,MACD,KAAK,GACJnV,KAAK+kB,QAAS,GAAM6E,EAASnhB,CAC7BzI,MAAK+kB,QAAS,GAAM6E,EAASlhB,CAC7B1I,MAAK+kB,QAAS,IAAO6E,EAASvL,CAC9Bre,MAAK+kB,QAAS,IAAO6E,EAASzU,CAC9B,MACD,SACC,KAAM,IAAI8D,GAAc,sBAAwB+Q,EAAM,+BAOlD7G,GAAA5iB,UAAA0pB,UAAP,SAAiBD,EAAYJ,GAE5B,OAAQI,GACP,IAAK,GACJJ,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,EAC3B6E;EAASzU,EAAInV,KAAK+kB,QAAS,GAC3B,MACD,KAAK,GACJ6E,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,EAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,GAC3B,MACD,KAAK,GACJ6E,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,GAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,GAC3B,MACD,KAAK,GACJ6E,EAASnhB,EAAIzI,KAAK+kB,QAAS,EAC3B6E,GAASlhB,EAAI1I,KAAK+kB,QAAS,EAC3B6E,GAASvL,EAAIre,KAAK+kB,QAAS,GAC3B6E,GAASzU,EAAInV,KAAK+kB,QAAS,GAC3B,MACD,SACC,KAAM,IAAI9L,GAAc,sBAAwB+Q,EAAM,+BAOlD7G,GAAA5iB,UAAA2pB,eAAP,SAAsBC,GAErBA,EAAKpF,QAAU/kB,KAAK+kB,QAAQ0E,MAAM,GAM5BtG,GAAA5iB,UAAA6pB,UAAP,SAAiBC,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,cAEhB,GAAIC,EjDoiME,IiDhiMFC,KACJ,IAAIhH,GAAIvjB,KAAKsC,OACb,IAAIkoB,GAAKjH,EAAEwB,OAEX,IAAIG,GAAe,GAAI/G,GAASqM,EAAG,IAAKA,EAAG,IAAKA,EAAG,IACnDA,GAAG,IAAM,CACTA,GAAG,IAAM,CACTA,GAAG,IAAM,CAET,IAAIla,GAAiB,GAAI6N,EAEzB7N,GAAM7H,EAAIqB,KAAK2gB,KAAKD,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,GACzDla,GAAM5H,EAAIoB,KAAK2gB,KAAKD,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,GACzDla,GAAM+N,EAAIvU,KAAK2gB,KAAKD,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,GAAKA,EAAG,IAAIA,EAAG,IAE1D,IAAIA,EAAG,IAAIA,EAAG,GAAGA,EAAG,IAAMA,EAAG,GAAGA,EAAG,IAAMA,EAAG,IAAIA,EAAG,GAAGA,EAAG,IAAMA,EAAG,GAAGA,EAAG,IAAMA,EAAG,IAAIA,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,IAAM,EACjHla,EAAM+N,GAAK/N,EAAM+N,CAElBmM,GAAG,IAAMla,EAAM7H,CACf+hB,GAAG,IAAMla,EAAM7H,CACf+hB,GAAG,IAAMla,EAAM7H,CACf+hB,GAAG,IAAMla,EAAM5H,CACf8hB,GAAG,IAAMla,EAAM5H,CACf8hB,GAAG,IAAMla,EAAM5H,CACf8hB,GAAG,IAAMla,EAAM+N,CACfmM,GAAG,IAAMla,EAAM+N,CACfmM,GAAG,KAAOla,EAAM+N,CAEhB,IAAIqM,GAAM,GAAIvM,EAEd,QAAQkM,GACP,IAAKzD,GAAc+D,WAElBD,EAAIvV,EAAIrL,KAAK8gB,MAAMJ,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,GAAG,EAE/C,IAAIroB,GAAa2H,KAAK2gB,MAAMD,EAAG,GAAKA,EAAG,KAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAKA,EAAG,GAAKA,EAAG,IAC3HE,GAAIjiB,GAAK+hB,EAAG,GAAKA,EAAG,IAAIroB,CACxBuoB,GAAIhiB,GAAK8hB,EAAG,GAAKA,EAAG,IAAIroB,CACxBuoB,GAAIrM,GAAKmM,EAAG,GAAKA,EAAG,IAAIroB,CAExB,MACD,KAAKykB,GAAciE,WAElB,GAAIC,GAAKN,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAE5B,IAAIM,EAAK,EAAG,CACXJ,EAAIvV,EAAIrL,KAAK2gB,KAAK,EAAIK,GAAI,CAE1BJ,GAAIjiB,GAAK+hB,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIvV,EAC/BuV,GAAIhiB,GAAK8hB,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIvV,EAC/BuV,GAAIrM,GAAKmM,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIvV,OACzB,IAAKqV,EAAG,GAAKA,EAAG,IAAQA,EAAG,GAAKA,EAAG,IAAM,CAC/CE,EAAIjiB,EAAIqB,KAAK2gB,KAAK,EAAID,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAK,CAE9CE,GAAIvV,GAAKqV,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIjiB,EAC/BiiB,GAAIhiB,GAAK8hB,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIjiB,EAC/BiiB,GAAIrM,GAAKmM,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIjiB,OACzB,IAAI+hB,EAAG,GAAKA,EAAG,IAAK,CAC1BE,EAAIhiB,EAAIoB,KAAK2gB,KAAK,EAAID,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAK,CAE9CE,GAAIjiB,GAAK+hB,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIhiB,EAC/BgiB,GAAIvV,GAAKqV,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIhiB,EAC/BgiB,GAAIrM,GAAKmM,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIhiB,OACzB,CACNgiB,EAAIrM,EAAIvU,KAAK2gB,KAAK,EAAID,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAI,CAE9CE,GAAIjiB,GAAK+hB,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIrM,EAC/BqM,GAAIhiB,GAAK8hB,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIrM,EAC/BqM,GAAIvV,GAAKqV,EAAG,GAAKA,EAAG,KAAK,EAAEE,EAAIrM,GAIhC,KACD,KAAKuI,GAAcmE,aAElBL,EAAIhiB,EAAIoB,KAAKkhB,MAAMR,EAAG,GAItB,IAAIA,EAAG,IAAM,GAAKA,EAAG,KAAO,EAAG,CAC9BE,EAAIjiB,EAAIqB,KAAKmhB,MAAMT,EAAG,GAAIA,EAAG,IAC7BE,GAAIrM,EAAIvU,KAAKmhB,MAAMT,EAAG,GAAIA,EAAG,QACvB,CACNE,EAAIrM,EAAI,CACRqM,GAAIjiB,EAAIqB,KAAKmhB,MAAMT,EAAG,GAAIA,EAAG,IAG9B,MAGFD,EAAI3mB,KAAKshB,EACTqF,GAAI3mB,KAAK8mB,EACTH,GAAI3mB,KAAK0M,EAET,OAAOia,GAODpH,GAAA5iB,UAAA6lB,qBAAP,SAA4B/B,GAE3B,GAAI5b,GAAW4b,EAAE5b,CACjB,IAAIC,GAAW2b,EAAE3b,CACjB,IAAI2V,GAAWgG,EAAEhG,CAEjB,OAAO,IAAIF,GAAU1V,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,GAAMtc,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,GAAMtc,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,IAAOtc,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,KAM9P5B,GAAA5iB,UAAA2qB,SAAP,WAEClrB,KAAK+kB,SAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAMvD5B,GAAAgI,YAAP,SAAmBC,EAAkBC,EAAgBC,GAEpD,GAAI/H,GAAa,GAAIJ,EACrB,KAAK,GAAI9jB,GAAW,EAAGA,EAAI,KAAMA,EAChCkkB,EAAEwB,QAAQ1lB,GAAK+rB,EAAQrG,QAAQ1lB,IAAMgsB,EAAMtG,QAAQ1lB,GAAK+rB,EAAQrG,QAAQ1lB,IAAIisB,CAE7E,OAAO/H,GAMDJ,GAAA5iB,UAAAgrB,cAAP,SAAqBF,EAAgBC,GAEpC,IAAK,GAAIjsB,GAAW,EAAGA,EAAI,KAAMA,EAChCW,KAAK+kB,QAAQ1lB,GAAKW,KAAK+kB,QAAQ1lB,IAAMgsB,EAAMtG,QAAQ1lB,GAAKW,KAAK+kB,QAAQ1lB,IAAIisB,EAMpEnI,GAAA5iB,UAAAirB,OAAP,WAEC,GAAIvrB,GAAID,KAAKyrB,WACb,IAAIC,GAAa5hB,KAAK6hB,IAAI1rB,GAAK,KAE/B,IAAIyrB,EAAY,CACfzrB,EAAI,EAAEA,CACN,IAAI2rB,GAAa5rB,KAAK+kB,QAAQ,EAC9B,IAAI8G,GAAa7rB,KAAK+kB,QAAQ,EAC9B,IAAI+G,GAAa9rB,KAAK+kB,QAAQ,EAC9B,IAAIgH,GAAa/rB,KAAK+kB,QAAQ,GAC9B,IAAIiH,GAAahsB,KAAK+kB,QAAQ,EAC9B,IAAIkH,GAAajsB,KAAK+kB,QAAQ,EAC9B,IAAImH,GAAalsB,KAAK+kB,QAAQ,EAC9B,IAAIoH,GAAansB,KAAK+kB,QAAQ,GAC9B,IAAIqH,GAAapsB,KAAK+kB,QAAQ,EAC9B,IAAIsH,GAAarsB,KAAK+kB,QAAQ,EAC9B,IAAIuH,GAAatsB,KAAK+kB,QAAQ,GAC9B,IAAIwH,GAAavsB,KAAK+kB,QAAQ,GAC9B,IAAIyH,GAAaxsB,KAAK+kB,QAAQ,EAC9B,IAAI0H,GAAazsB,KAAK+kB,QAAQ,EAC9B,IAAI2H,GAAa1sB,KAAK+kB,QAAQ,GAC9B,IAAI4H,GAAa3sB,KAAK+kB,QAAQ,GAE9B/kB,MAAK+kB,QAAQ,GAAK9kB,GAAGgsB,GAAKK,EAAIK,EAAMJ,EAAIG,GAAOR,GAAKG,EAAIM,EAAMJ,EAAIE,GAAON,GAAKE,EAAIK,EAAMJ,EAAIG,GAC5FzsB,MAAK+kB,QAAQ,IAAM9kB,GAAG+rB,GAAKM,EAAIK,EAAMJ,EAAIG,GAAOR,GAAKE,EAAIO,EAAMJ,EAAIC,GAAOL,GAAKC,EAAIM,EAAMJ,EAAIE,GAC7FxsB,MAAK+kB,QAAQ,GAAK9kB,GAAG+rB,GAAKK,EAAIM,EAAMJ,EAAIE,GAAOR,GAAKG,EAAIO,EAAMJ,EAAIC,GAAOL,GAAKC,EAAIK,EAAMJ,EAAIG,GAC5FxsB,MAAK+kB,QAAQ,IAAM9kB,GAAG+rB,GAAKK,EAAIK,EAAMJ,EAAIG,GAAOR,GAAKG,EAAIM,EAAMJ,EAAIE,GAAON,GAAKE,EAAIK,EAAMJ,EAAIG,GAC7FxsB,MAAK+kB,QAAQ,IAAM9kB,GAAG4rB,GAAKS,EAAIK,EAAMJ,EAAIG,GAAOZ,GAAKO,EAAIM,EAAMJ,EAAIE,GAAOV,GAAKM,EAAIK,EAAMJ,EAAIG,GAC7FzsB,MAAK+kB,QAAQ,GAAK9kB,GAAG2rB,GAAKU,EAAIK,EAAMJ,EAAIG,GAAOZ,GAAKM,EAAIO,EAAMJ,EAAIC,GAAOT,GAAKK,EAAIM,EAAMJ,EAAIE,GAC5FxsB,MAAK+kB,QAAQ,IAAM9kB,GAAG2rB,GAAKS,EAAIM,EAAMJ,EAAIE,GAAOZ,GAAKO,EAAIO,EAAMJ,EAAIC,GAAOT,GAAKK,EAAIK,EAAMJ,EAAIG,GAC7FxsB,MAAK+kB,QAAQ,GAAK9kB,GAAG2rB,GAAKS,EAAIK,EAAMJ,EAAIG,GAAOZ,GAAKO,EAAIM,EAAMJ,EAAIE,GAAOV,GAAKM,EAAIK,EAAMJ,EAAIG,GAC5FxsB,MAAK+kB,QAAQ,GAAK9kB,GAAG4rB,GAAKK,EAAIS,EAAMR,EAAIO,GAAOZ,GAAKG,EAAIU,EAAMR,EAAIM,GAAOV,GAAKE,EAAIS,EAAMR,EAAIO,GAC5FzsB,MAAK+kB,QAAQ,IAAM9kB,GAAG2rB,GAAKM,EAAIS,EAAMR,EAAIO,GAAOZ,GAAKE,EAAIW,EAAMR,EAAIK,GAAOT,GAAKC,EAAIU,EAAMR,EAAIM,GAC7FxsB,MAAK+kB,QAAQ,IAAM9kB,GAAG2rB,GAAKK,EAAIU,EAAMR,EAAIM,GAAOZ,GAAKG,EAAIW,EAAMR,EAAIK,GAAOT,GAAKC,EAAIS,EAAMR,EAAIO,GAC7FxsB,MAAK+kB,QAAQ,KAAO9kB,GAAG2rB,GAAKK,EAAIS,EAAMR,EAAIO,GAAOZ,GAAKG,EAAIU,EAAMR,EAAIM,GAAOV,GAAKE,EAAIS,EAAMR,EAAIO,GAC9FxsB,MAAK+kB,QAAQ,KAAO9kB,GAAG4rB,GAAKK,EAAIK,EAAMJ,EAAIG,GAAOR,GAAKG,EAAIM,EAAMJ,EAAIE,GAAON,GAAKE,EAAIK,EAAMJ,EAAIG,GAC9FrsB,MAAK+kB,QAAQ,IAAM9kB,GAAG2rB,GAAKM,EAAIK,EAAMJ,EAAIG,GAAOR,GAAKE,EAAIO,EAAMJ,EAAIC,GAAOL,GAAKC,EAAIM,EAAMJ,EAAIE,GAC7FpsB,MAAK+kB,QAAQ,KAAO9kB,GAAG2rB,GAAKK,EAAIM,EAAMJ,EAAIE,GAAOR,GAAKG,EAAIO,EAAMJ,EAAIC,GAAOL,GAAKC,EAAIK,EAAMJ,EAAIG,GAC9FpsB,MAAK+kB,QAAQ,IAAM9kB,GAAG2rB,GAAKK,EAAIK,EAAMJ,EAAIG,GAAOR,GAAKG,EAAIM,EAAMJ,EAAIE,GAAON,GAAKE,EAAIK,EAAMJ,EAAIG,IAE9F,MAAOV,GAYDvI,GAAA5iB,UAAAoiB,QAAP,SAAeiK,GAEd,GAAI5F,GAAc4F,EAAI7H,QAAQ,GAAIkC,EAAc2F,EAAI7H,QAAQ,GAAImC,EAAc0F,EAAI7H,QAAQ,GAAIoC,EAAcyF,EAAI7H,QAAQ,IAAKqC,EAAcwF,EAAI7H,QAAQ,GAAIsC,EAAcuF,EAAI7H,QAAQ,GAAIuC,EAAcsF,EAAI7H,QAAQ,GAAIwC,EAAcqF,EAAI7H,QAAQ,IAAKyC,EAAcoF,EAAI7H,QAAQ,GAAI0C,EAAcmF,EAAI7H,QAAQ,GAAI2C,EAAckF,EAAI7H,QAAQ,IAAK4C,EAAciF,EAAI7H,QAAQ,IAAK6C,EAAcgF,EAAI7H,QAAQ,GAAI8C,EAAc+E,EAAI7H,QAAQ,GAAI+C,EAAc8E,EAAI7H,QAAQ,IAAKgD,EAAc6E,EAAI7H,QAAQ,IAAKiD,EAAchoB,KAAK+kB,QAAQ,GAAIkD,EAAcjoB,KAAK+kB,QAAQ,GAAImD,EAAcloB,KAAK+kB,QAAQ,GAAIoD,EAAcnoB,KAAK+kB,QAAQ,IAAKqD,EAAcpoB,KAAK+kB,QAAQ,GAAIsD,EAAcroB,KAAK+kB,QAAQ,GAAIuD,EAActoB,KAAK+kB,QAAQ,GAAIwD,EAAcvoB,KAAK+kB,QAAQ,IAAKyD,EAAcxoB,KAAK+kB,QAAQ,GAAI0D,EAAczoB,KAAK+kB,QAAQ,GAAI2D,EAAc1oB,KAAK+kB,QAAQ,IAAK4D,EAAc3oB,KAAK+kB,QAAQ,IAAK6D,EAAc5oB,KAAK+kB,QAAQ,GAAI8D,EAAc7oB,KAAK+kB,QAAQ,GAAI+D,EAAc9oB,KAAK+kB,QAAQ,IAAKgE,EAAc/oB,KAAK+kB,QAAQ,GAE39B/kB,MAAK+kB,QAAQ,GAAKiC,EAAKgB,EAAOZ,EAAKa,EAAOT,EAAKU,EAAON,EAAKO,CAC3DnoB,MAAK+kB,QAAQ,GAAKiC,EAAKoB,EAAOhB,EAAKiB,EAAOb,EAAKc,EAAOV,EAAKW,CAC3DvoB,MAAK+kB,QAAQ,GAAKiC,EAAKwB,EAAOpB,EAAKqB,EAAOjB,EAAKkB,EAAOd,EAAKe,CAC3D3oB,MAAK+kB,QAAQ,GAAKiC,EAAK4B,EAAOxB,EAAKyB,EAAOrB,EAAKsB,EAAOlB,EAAKmB,CAE3D/oB,MAAK+kB,QAAQ,GAAKkC,EAAKe,EAAOX,EAAKY,EAAOR,EAAKS,EAAOL,EAAKM,CAC3DnoB,MAAK+kB,QAAQ,GAAKkC,EAAKmB,EAAOf,EAAKgB,EAAOZ,EAAKa,EAAOT,EAAKU,CAC3DvoB,MAAK+kB,QAAQ,GAAKkC,EAAKuB,EAAOnB,EAAKoB,EAAOhB,EAAKiB,EAAOb,EAAKc,CAC3D3oB,MAAK+kB,QAAQ,GAAKkC,EAAK2B,EAAOvB,EAAKwB,EAAOpB,EAAKqB,EAAOjB,EAAKkB,CAE3D/oB,MAAK+kB,QAAQ,GAAKmC,EAAKc,EAAOV,EAAKW,EAAOP,EAAKQ,EAAOJ,EAAKK,CAC3DnoB,MAAK+kB,QAAQ,GAAKmC,EAAKkB,EAAOd,EAAKe,EAAOX,EAAKY,EAAOR,EAAKS,CAC3DvoB,MAAK+kB,QAAQ,IAAMmC,EAAKsB,EAAOlB,EAAKmB,EAAOf,EAAKgB,EAAOZ,EAAKa,CAC5D3oB,MAAK+kB,QAAQ,IAAMmC,EAAK0B,EAAOtB,EAAKuB,EAAOnB,EAAKoB,EAAOhB,EAAKiB,CAE5D/oB,MAAK+kB,QAAQ,IAAMoC,EAAKa,EAAOT,EAAKU,EAAON,EAAKO,EAAOH,EAAKI,CAC5DnoB,MAAK+kB,QAAQ,IAAMoC,EAAKiB,EAAOb,EAAKc,EAAOV,EAAKW,EAAOP,EAAKQ,CAC5DvoB,MAAK+kB,QAAQ,IAAMoC,EAAKqB,EAAOjB,EAAKkB,EAAOd,EAAKe,EAAOX,EAAKY,CAC5D3oB,MAAK+kB,QAAQ,IAAMoC,EAAKyB,EAAOrB,EAAKsB,EAAOlB,EAAKmB,EAAOf,EAAKgB,EAMtD5F,GAAA5iB,UAAAssB,gBAAP,SAAuB5D,EAAgBC,GAEtC,GAAI3F,GAAaJ,EAASgG,gBAAgBD,EAAKzgB,EAAGygB,EAAKxgB,EAAGwgB,EAAK7K,EAAG4K,EASlEjpB,MAAK2iB,QAAQY,GAMPJ,GAAA5iB,UAAAusB,aAAP,SAAoBzD,EAAeC,EAAeC,GAKjDvpB,KAAK2iB,QAAQ,GAAIQ,IAAWkG,EAAQ,EAAG,EAAG,EAAG,EAAGC,EAAQ,EAAG,EAAG,EAAG,EAAGC,EAAQ,EAAG,EAAG,EAAG,EAAG,KAMlFpG,GAAA5iB,UAAAwsB,mBAAP,SAA0BtkB,EAAUC,EAAU2V,GAK7C,GAAIkF,GAAI,GAAIJ,EACZI,GAAE1X,SAAW,GAAIsS,GAAS1V,EAAGC,EAAG2V,EAChCre,MAAK2iB,QAAQY,GAOPJ,GAAA5iB,UAAAysB,UAAP,SAAiBC,GAKhB,GAAIA,EAAWrtB,OAAS,EAAG,MAAO,MAIlCI,MAAKkrB,UACLlrB,MAAKopB,YAAY6D,EAAW,GAAGxkB,EAAGwkB,EAAW,GAAGvkB,EAAGukB,EAAW,GAAG5O,EAEjE,IAAI6O,EACJA,IAASD,EAAW,GAAGxkB,CACvBzI,MAAK8mB,OAAO,GAAI3D,IAAU,EAAG,EAAG,EAAG,EAAG,EAAGrZ,KAAKqjB,IAAID,IAASpjB,KAAKsjB,IAAIF,GAAQ,EAAG,EAAGpjB,KAAKsjB,IAAIF,GAAQpjB,KAAKqjB,IAAID,GAAQ,EAAG,EAAG,EAAG,EAAI,IACjIA,IAASD,EAAW,GAAGvkB,CACvB1I,MAAK8mB,OAAO,GAAI3D,IAAUrZ,KAAKqjB,IAAID,GAAQ,EAAGpjB,KAAKsjB,IAAIF,GAAQ,EAAG,EAAG,EAAG,EAAG,GAAIpjB,KAAKsjB,IAAIF,GAAQ,EAAGpjB,KAAKqjB,IAAID,GAAQ,EAAG,EAAG,EAAG,EAAG,IAChIA,IAASD,EAAW,GAAG5O,CACvBre,MAAK8mB,OAAO,GAAI3D,IAAUrZ,KAAKqjB,IAAID,IAASpjB,KAAKsjB,IAAIF,GAAQ,EAAG,EAAGpjB,KAAKsjB,IAAIF,GAAQpjB,KAAKqjB,IAAID,GAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEhIltB,MAAK6L,SAAWohB,EAAW,EAC3BjtB,MAAK+kB,QAAQ,IAAM,CAEnB,OAAO,MAGD5B,GAAA5iB,UAAAylB,gBAAP,SAAuB3B,GAEtB,GAAIA,GAAK,KACR,MAAO,IAAIlG,EAEZ,IAAI1V,GAAW4b,EAAE5b,CACjB,IAAIC,GAAW2b,EAAE3b,CACjB,IAAI2V,GAAWgG,EAAEhG,CAEjB,OAAO,IAAIF,GAAU1V,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,IAAOtc,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,IAAOtc,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAOtc,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,KAM1U5B,GAAA5iB,UAAA8sB,iBAAP,SAAwB9G,EAAcC,GAKrC,GAAInnB,GAAW,CACf,IAAIoJ,GAAW,EAAGC,EAAW,EAAG2V,EAAW,CAE3C,OAAOhf,EAAI,GAAKknB,EAAI3mB,OAAQ,CAC3B6I,EAAI8d,EAAIlnB,EACRqJ,GAAI6d,EAAIlnB,EAAI,EACZgf,GAAIkI,EAAIlnB,EAAI,EACZmnB,GAAKnnB,GAAKoJ,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,GACnFyB,GAAKnnB,EAAI,GAAKoJ,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,GACvFyB,GAAKnnB,EAAI,GAAKoJ,EAAEzI,KAAK+kB,QAAQ,GAAKrc,EAAE1I,KAAK+kB,QAAQ,GAAK1G,EAAEre,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,GACxF1lB,IAAK,GAOA8jB,GAAA5iB,UAAAupB,UAAP,WAKC,GAAIwD,GAAoBttB,KAAK+kB,QAAQ0E,MAAM,EAE3CzpB,MAAK+kB,QAAQ,GAAKuI,EAAS,EAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,EAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,GAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,EAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,EAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,GAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,EAC3BttB,MAAK+kB,QAAQ,GAAKuI,EAAS,EAC3BttB,MAAK+kB,QAAQ,IAAMuI,EAAS,GAC5BttB,MAAK+kB,QAAQ,IAAMuI,EAAS,EAC5BttB,MAAK+kB,QAAQ,IAAMuI,EAAS,EAC5BttB,MAAK+kB,QAAQ,IAAMuI,EAAS,IAGtBnK,GAAAgG,gBAAP,SAAuB1gB,EAAUC,EAAU2V,EAAU4K,GAKpD,GAAI1F,GAAa,GAAIJ,EAErB,IAAIoK,GAAMtE,GAAUnf,KAAKkZ,GAAG,IAC5B,IAAI4C,GAAW9b,KAAKqjB,IAAII,EACxB,IAAItuB,GAAW6K,KAAKsjB,IAAIG,EACxB,IAAIzuB,GAAW,EAAI8mB,CACnB,IAAI4H,GAAaC,CAEjBlK,GAAEwB,QAAQ,GAAKa,EAAInd,EAAEA,EAAE3J,CACvBykB,GAAEwB,QAAQ,GAAKa,EAAIld,EAAEA,EAAE5J,CACvBykB,GAAEwB,QAAQ,IAAMa,EAAIvH,EAAEA,EAAEvf,CAExB0uB,GAAO/kB,EAAEC,EAAE5J,CACX2uB,GAAOpP,EAAEpf,CACTskB,GAAEwB,QAAQ,GAAKyI,EAAOC,CACtBlK,GAAEwB,QAAQ,GAAKyI,EAAOC,CACtBD,GAAO/kB,EAAE4V,EAAEvf,CACX2uB,GAAO/kB,EAAEzJ,CACTskB,GAAEwB,QAAQ,GAAKyI,EAAOC,CACtBlK,GAAEwB,QAAQ,GAAKyI,EAAOC,CACtBD,GAAO9kB,EAAE2V,EAAEvf,CACX2uB,GAAOhlB,EAAExJ,CACTskB,GAAEwB,QAAQ,GAAKyI,EAAOC,CACtBlK,GAAEwB,QAAQ,GAAKyI,EAAOC,CAEtB,OAAOlK,GAMRpiB,QAAAC,eAAW+hB,EAAA5iB,UAAA,ejD88LJc,IiD98LP,WAEC,OAAYrB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,KAAK/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,MAAQ/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,KAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAO/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAO/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,KAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAO/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAO/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,IAAM/kB,KAAK+kB,QAAQ,IAAI/kB,KAAK+kB,QAAQ,KAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,GAAK/kB,KAAK+kB,QAAQ,GAAG/kB,KAAK+kB,QAAQ,KjD+8L70BxjB,WAAY,KACZC,aAAc,MiDz8LrBL,QAAAC,eAAW+hB,EAAA5iB,UAAA,YjDg9LJc,IiDh9LP,WAEC,MAAO,IAAI8c,GAASne,KAAK+kB,QAAQ,IAAK/kB,KAAK+kB,QAAQ,IAAK/kB,KAAK+kB,QAAQ,MjDi9L/DpjB,IiD98LP,SAAoBC,GAEnB5B,KAAK+kB,QAAQ,IAAMnjB,EAAM6G,CACzBzI,MAAK+kB,QAAQ,IAAMnjB,EAAM8G,CACzB1I,MAAK+kB,QAAQ,IAAMnjB,EAAMyc,GjD+8LnB9c,WAAY,KACZC,aAAc,MiD78Ld2hB,GAAA5iB,UAAAmtB,QAAP,SAAeC,GAEd,GAAIC,GAAmB9jB,KAAK+jB,IAAI,GAAIF,EACpC,OAAO,YAAc7jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI6I,GAAWA,EAAY,IAAM9jB,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI6I,GAAWA,EAAY,IAG/4BzK,GAAA5iB,UAAAmhB,SAAP,WAEC,MAAO,YAAc5X,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,GAAG,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI,KAAM,IAAO,IAAMjb,KAAKC,MAAM/J,KAAK+kB,QAAQ,IAAI,KAAM,IAAO,IAEvvB,OAAA5B,KAEArjB,GAAkBJ,QAATyjB,IjD88LNnK,uCAAuC,uCAAuC8U,qCAAqC,qCAAqCjM,gCAAgC,kCAAkCkM,+BAA+B,SAASnvB,EAAQkB,EAAOJ,GkD3oNpR,GAAOgV,GAAK9V,EAAe,6BAE3B,IAAOqa,GAAara,EAAa,uClDmsNjC,IkD1oNMovB,GAAM,WA2DX,QA3DKA,GA2DO5uB,EAAcc,EAAc0lB,EAAc3lB,EAAcguB,EAAeC,GAAvE,GAAA9uB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAc,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA0lB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA3lB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAguB,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAC,QAAA,GAAa,CAAbA,EAAA,EAElFluB,KAAKZ,EAAIA,CACTY,MAAKE,EAAIA,CACTF,MAAK4lB,EAAIA,CACT5lB,MAAKC,EAAIA,CACTD,MAAKiuB,GAAKA,CACVjuB,MAAKkuB,GAAKA,EASJF,EAAAztB,UAAA+B,MAAP,WAEC,MAAO,IAAI0rB,GAAOhuB,KAAKZ,EAAGY,KAAKE,EAAGF,KAAK4lB,EAAG5lB,KAAKC,EAAGD,KAAKiuB,GAAIjuB,KAAKkuB,IAqB1DF,GAAAztB,UAAAsmB,OAAP,SAAcpc,GAEb,GAAI0jB,GAAKnuB,KAAKZ,EAAEqL,EAAOrL,EAAIY,KAAKE,EAAEuK,EAAOmb,CACzC5lB,MAAKE,EAAIF,KAAKZ,EAAEqL,EAAOvK,EAAIF,KAAKE,EAAEuK,EAAOxK,CACzCD,MAAKZ,EAAI+uB,CAET,IAAIC,GAAKpuB,KAAK4lB,EAAEnb,EAAOrL,EAAIY,KAAKC,EAAEwK,EAAOmb,CACzC5lB,MAAKC,EAAID,KAAK4lB,EAAEnb,EAAOvK,EAAIF,KAAKC,EAAEwK,EAAOxK,CAEzCD,MAAK4lB,EAAIwI,CAET,IAAIC,GAAMruB,KAAKiuB,GAAGxjB,EAAOrL,EAAIY,KAAKkuB,GAAGzjB,EAAOmb,EAAInb,EAAOwjB,EACvDjuB,MAAKkuB,GAAKluB,KAAKiuB,GAAGxjB,EAAOvK,EAAIF,KAAKkuB,GAAGzjB,EAAOxK,EAAIwK,EAAOyjB,EACvDluB,MAAKiuB,GAAKI,EAUJL,GAAAztB,UAAAmpB,eAAP,SAAsBC,EAAeC,GAEpC,GAAID,EAAS,EAAG,CACf,KAAM,UAAYA,EAAS,yBACrB,IAAIA,GAAU,EAAG,CACvB3pB,KAAKZ,EAAIwqB,EAASnhB,CAClBzI,MAAK4lB,EAAIgE,EAASlhB,MACZ,IAAIihB,GAAU,EAAG,CACvB3pB,KAAKE,EAAI0pB,EAASnhB,CAClBzI,MAAKC,EAAI2pB,EAASlhB,MACZ,CACN1I,KAAKiuB,GAAKrE,EAASnhB,CACnBzI,MAAKkuB,GAAKtE,EAASlhB,GAWdslB,GAAAztB,UAAA+jB,aAAP,SAAoBqF,EAAeC,GAElC,GAAID,EAAS,EAAG,CACf,KAAM,IAAI1Q,GAAc,yBAA2B0Q,EAAS,kCACtD,IAAIA,GAAU,EAAG,CACvBC,EAASnhB,EAAIzI,KAAKZ,CAClBwqB,GAASlhB,EAAI1I,KAAK4lB,CAClBgE,GAASvL,EAAI,MACP,IAAIsL,GAAU,EAAG,CACvBC,EAASnhB,EAAIzI,KAAKE,CAClB0pB,GAASlhB,EAAI1I,KAAKC,CAClB2pB,GAASvL,EAAI,MACP,CACNuL,EAASnhB,EAAIzI,KAAKiuB,EAClBrE,GAASlhB,EAAI1I,KAAKkuB,EAClBtE,GAASvL,EAAI,GAUR2P,GAAAztB,UAAAue,SAAP,SAAgBwP,GAEftuB,KAAKZ,EAAIkvB,EAAalvB,CACtBY,MAAKE,EAAIouB,EAAapuB,CACtBF,MAAK4lB,EAAI0I,EAAa1I,CACtB5lB,MAAKC,EAAIquB,EAAaruB,CACtBD,MAAKiuB,GAAKK,EAAaL,EACvBjuB,MAAKkuB,GAAKI,EAAaJ,GASjBF,GAAAztB,UAAAwpB,YAAP,SAAmBC,EAAYJ,GAE9B,GAAII,EAAM,EAAG,CACZ,KAAM,IAAI/Q,GAAc,sBAAwB+Q,EAAM,kCAChD,IAAIA,GAAO,EAAG,CACpBhqB,KAAKZ,EAAIwqB,EAASnhB,CAClBzI,MAAK4lB,EAAIgE,EAASlhB,MACZ,IAAIshB,GAAO,EAAG,CACpBhqB,KAAKE,EAAI0pB,EAASnhB,CAClBzI,MAAKC,EAAI2pB,EAASlhB,MACZ,CACN1I,KAAKiuB,GAAKrE,EAASnhB,CACnBzI,MAAKkuB,GAAKtE,EAASlhB,GAWdslB,GAAAztB,UAAA0pB,UAAP,SAAiBD,EAAYJ,GAE5B,GAAII,EAAM,EAAG,CACZ,KAAM,IAAI/Q,GAAc,sBAAwB+Q,EAAM,kCAChD,IAAIA,GAAO,EAAG,CACpBJ,EAASnhB,EAAIzI,KAAKZ,CAClBwqB,GAASlhB,EAAI1I,KAAKE,CAClB0pB,GAASvL,EAAIre,KAAKiuB,OACZ,IAAIjE,GAAO,EAAG,CACpBJ,EAASnhB,EAAIzI,KAAK4lB,CAClBgE,GAASlhB,EAAI1I,KAAKC,CAClB2pB,GAASvL,EAAIre,KAAKkuB,OACZ,CACNtE,EAASzI,MAAM,EAAG,EAAG,IAsBhB6M,GAAAztB,UAAAguB,UAAP,SAAiBC,EAAeC,EAAeC,EAAqBT,EAAeC,GAApC,GAAAQ,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAT,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAC,QAAA,GAAa,CAAbA,EAAA,EAElFluB,KAAKZ,EAAIovB,CACTxuB,MAAKC,EAAIwuB,CACTzuB,MAAKE,EAAIwuB,CACT1uB,MAAKiuB,GAAKA,CACVjuB,MAAKkuB,GAAKA,EAoCJF,GAAAztB,UAAAouB,kBAAP,SAAyBtnB,EAAcC,EAAeonB,EAAqBT,EAAeC,GAApC,GAAAQ,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAT,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAC,QAAA,GAAa,CAAbA,EAAA,EAEzFluB,KAAKZ,EAAIiI,EAAM,MACfrH,MAAKC,EAAIqH,EAAO,MAEhB,IAAIonB,GAAY,EAAK,CACpB,GAAIvB,GAAMrjB,KAAKqjB,IAAIuB,EACnB,IAAItB,GAAMtjB,KAAKsjB,IAAIsB,EAEnB1uB,MAAKE,EAAIktB,EAAIptB,KAAKC,CAClBD,MAAK4lB,GAAKwH,EAAIptB,KAAKZ,CACnBY,MAAKZ,GAAK+tB,CACVntB,MAAKC,GAAKktB,MACJ,CACNntB,KAAKE,EAAIF,KAAK4lB,EAAI,EAGnB5lB,KAAKiuB,GAAKA,EAAK5mB,EAAM,CACrBrH,MAAKkuB,GAAKA,EAAK5mB,EAAO,EAehB0mB,GAAAztB,UAAAquB,oBAAP,SAA2B7N,GAE1B,MAAO,IAAIrM,GAAMqM,EAAMtY,EAAEzI,KAAKZ,EAAI2hB,EAAMrY,EAAE1I,KAAK4lB,EAAG7E,EAAMtY,EAAEzI,KAAKE,EAAI6gB,EAAMrY,EAAE1I,KAAKC,GAgB1E+tB,GAAAztB,UAAA2qB,SAAP,WAEClrB,KAAKZ,EAAI,CACTY,MAAKE,EAAI,CACTF,MAAK4lB,EAAI,CACT5lB,MAAKC,EAAI,CACTD,MAAKiuB,GAAK,CACVjuB,MAAKkuB,GAAK,EAQJF,GAAAztB,UAAAirB,OAAP,WAEC,GAAIqD,GAAO7uB,KAAKZ,EAAEY,KAAKC,EAAID,KAAKE,EAAEF,KAAK4lB,CAEvC,IAAIiJ,GAAQ,EAAG,CACd7uB,KAAKZ,EAAIY,KAAKE,EAAIF,KAAK4lB,EAAI5lB,KAAKC,EAAI,CACpCD,MAAKiuB,IAAMjuB,KAAKiuB,EAChBjuB,MAAKkuB,IAAMluB,KAAKkuB,OACV,CACNW,EAAO,EAAIA,CACX,IAAIV,GAAKnuB,KAAKC,EAAE4uB,CAChB7uB,MAAKC,EAAID,KAAKZ,EAAEyvB,CAChB7uB,MAAKZ,EAAI+uB,CACTnuB,MAAKE,IAAM2uB,CACX7uB,MAAK4lB,IAAMiJ,CAEX,IAAIR,IAAOruB,KAAKZ,EAAEY,KAAKiuB,GAAKjuB,KAAK4lB,EAAE5lB,KAAKkuB,EACxCluB,MAAKkuB,IAAMluB,KAAKE,EAAEF,KAAKiuB,GAAKjuB,KAAKC,EAAED,KAAKkuB,EACxCluB,MAAKiuB,GAAKI,GAaLL,GAAAztB,UAAAuuB,SAAP,SAAgBrkB,GAEf,GAAIyb,GAAS,GAAI8H,EAEjB9H,GAAO9mB,EAAIY,KAAKZ,EAAEqL,EAAOrL,EAAIY,KAAKE,EAAEuK,EAAOmb,CAC3CM,GAAOhmB,EAAIF,KAAKZ,EAAEqL,EAAOvK,EAAIF,KAAKE,EAAEuK,EAAOxK,CAC3CimB,GAAON,EAAI5lB,KAAK4lB,EAAEnb,EAAOrL,EAAIY,KAAKC,EAAEwK,EAAOmb,CAC3CM,GAAOjmB,EAAID,KAAK4lB,EAAEnb,EAAOvK,EAAIF,KAAKC,EAAEwK,EAAOxK,CAE3CimB,GAAO+H,GAAKjuB,KAAKiuB,GAAGxjB,EAAOrL,EAAIY,KAAKkuB,GAAGzjB,EAAOmb,EAAInb,EAAOwjB,EACzD/H,GAAOgI,GAAKluB,KAAKiuB,GAAGxjB,EAAOvK,EAAIF,KAAKkuB,GAAGzjB,EAAOxK,EAAIwK,EAAOyjB,EAEzD,OAAOhI,GAaD8H,GAAAztB,UAAAwuB,OAAP,SAAc7B,GAEb,GAAIC,GAAMrjB,KAAKqjB,IAAID,EACnB,IAAIE,GAAMtjB,KAAKsjB,IAAIF,EAEnB,IAAIiB,GAAKnuB,KAAKZ,EAAE+tB,EAAMntB,KAAKE,EAAEktB,CAC7BptB,MAAKE,EAAIF,KAAKZ,EAAEguB,EAAMptB,KAAKE,EAAEitB,CAC7BntB,MAAKZ,EAAI+uB,CAET,IAAIC,GAAKpuB,KAAK4lB,EAAEuH,EAAMntB,KAAKC,EAAEmtB,CAC7BptB,MAAKC,EAAID,KAAK4lB,EAAEwH,EAAMptB,KAAKC,EAAEktB,CAC7BntB,MAAK4lB,EAAIwI,CAET,IAAIC,GAAMruB,KAAKiuB,GAAGd,EAAMntB,KAAKkuB,GAAGd,CAChCptB,MAAKkuB,GAAKluB,KAAKiuB,GAAGb,EAAMptB,KAAKkuB,GAAGf,CAChCntB,MAAKiuB,GAAKI,EAgBJL,GAAAztB,UAAA+P,MAAP,SAAa0e,EAAWC,GAEvBjvB,KAAKZ,GAAK4vB,CACVhvB,MAAKE,GAAK+uB,CAEVjvB,MAAK4lB,GAAKoJ,CACVhvB,MAAKC,GAAKgvB,CAEVjvB,MAAKiuB,IAAMe,CACXhvB,MAAKkuB,IAAMe,EAmBLjB,GAAAztB,UAAA4gB,MAAP,SAAa/hB,EAAUc,EAAU0lB,EAAU3lB,EAAUguB,EAAWC,GAE/DluB,KAAKZ,EAAIA,CACTY,MAAKE,EAAIA,CACTF,MAAK4lB,EAAIA,CACT5lB,MAAKC,EAAIA,CACTD,MAAKiuB,GAAKA,CACVjuB,MAAKkuB,GAAKA,EAUJF,GAAAztB,UAAAmhB,SAAP,WAEC,MAAO,eAAiB1hB,KAAKZ,EAAI,OAASY,KAAKE,EAAI,OAASF,KAAK4lB,EAAI,OAAS5lB,KAAKC,EAAI,QAAUD,KAAKiuB,GAAK,QAAUjuB,KAAKkuB,GAAK,IAWzHF,GAAAztB,UAAA2uB,eAAP,SAAsBnO,GAErB,MAAO,IAAIrM,GAAMqM,EAAMtY,EAAEzI,KAAKZ,EAAI2hB,EAAMrY,EAAE1I,KAAK4lB,EAAI5lB,KAAKiuB,GAAIlN,EAAMtY,EAAEzI,KAAKE,EAAI6gB,EAAMrY,EAAE1I,KAAKC,EAAID,KAAKkuB,IAW7FF,GAAAztB,UAAA4uB,UAAP,SAAiBhQ,EAAWC,GAE3Bpf,KAAKiuB,IAAM9O,CACXnf,MAAKkuB,IAAM9O,EAEb,OAAA4O,KAEgBluB,GAAAJ,QAAPsuB,IlD2kNNhV,uCAAuC,uCAAuC3D,6BAA6B,+BAA+ByY,sCAAsC,SAASlvB,EAAQkB,EAAOJ,GAI3M,GmD3oOMknB,GAAa,WAAnB,QAAMA,MAMSA,EAAA+D,WAAoB,WAMpB/D,GAAAmE,aAAsB,aAMtBnE,GAAAiE,WAAoB,YACnC,OAAAjE,KAEuB9mB,GAAAJ,QAAdknB,OnD4oOHwI,8CAA8C,SAASxwB,EAAQkB,EAAOJ,GA4D5E,GoDlqOM2vB,GAAqB,WAoD1B,QApDKA,MAuEEA,EAAA9uB,UAAA+uB,WAAP,WAEC,MAAOtvB,MAAKuvB,UAEd,OAAAF,KAE+BvvB,GAAAJ,QAAtB2vB,OpDinOHG,gCAAgC,SAAS5wB,EAAQkB,EAAOJ,GqD5vO9D,GAAO+vB,GAAmB7wB,EAAW,2CAGrC,IAAM8wB,GAAO,WAiCZ,QAjCKA,GAiCOtwB,EAAcc,EAAc0lB,EAAc3lB,GAA1C,GAAAb,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAc,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA0lB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA3lB,QAAA,GAAY,CAAZA,EAAA,EAErDD,KAAKZ,EAAIA,CACTY,MAAKE,EAAIA,CACTF,MAAK4lB,EAAIA,CACT5lB,MAAKC,EAAIA,CAET,IAAIb,GAAK,GAAKc,GAAK,EAAG,CAErBF,KAAK2vB,YAAcD,EAAQE,kBAErB,IAAI1vB,GAAK,GAAK0lB,GAAK,EAAG,CAE5B5lB,KAAK2vB,YAAcD,EAAQG,kBAErB,IAAIzwB,GAAK,GAAKwmB,GAAK,EAAG,CAE5B5lB,KAAK2vB,YAAcD,EAAQI,kBAErB,CAEN9vB,KAAK2vB,YAAcD,EAAQK,WAYtBL,EAAAnvB,UAAAyvB,WAAP,SAAkBC,EAAaC,EAAaC,GAE3C,GAAIC,GAAaF,EAAGznB,EAAIwnB,EAAGxnB,CAC3B,IAAI4nB,GAAaH,EAAGxnB,EAAIunB,EAAGvnB,CAC3B,IAAI4nB,GAAaJ,EAAG7R,EAAI4R,EAAG5R,CAE3B,IAAIkS,GAAaJ,EAAG1nB,EAAIwnB,EAAGxnB,CAC3B,IAAI+nB,GAAaL,EAAGznB,EAAIunB,EAAGvnB,CAC3B,IAAI+nB,GAAaN,EAAG9R,EAAI4R,EAAG5R,CAE3Bre,MAAKZ,EAAIixB,EAAII,EAAMH,EAAIE,CACvBxwB,MAAKE,EAAIowB,EAAIC,EAAMH,EAAIK,CACvBzwB,MAAK4lB,EAAIwK,EAAII,EAAMH,EAAIE,CACvBvwB,MAAKC,EAAID,KAAKZ,EAAE6wB,EAAGxnB,EAAIzI,KAAKE,EAAE+vB,EAAGvnB,EAAI1I,KAAK4lB,EAAEqK,EAAG5R,CAG/C,IAAIre,KAAKZ,GAAK,GAAKY,KAAKE,GAAK,EAAG,CAE/BF,KAAK2vB,YAAcD,EAAQE,kBAErB,IAAI5vB,KAAKE,GAAK,GAAKF,KAAK4lB,GAAK,EAAG,CAEtC5lB,KAAK2vB,YAAcD,EAAQG,kBAErB,IAAI7vB,KAAKZ,GAAK,GAAKY,KAAK4lB,GAAK,EAAG,CAEtC5lB,KAAK2vB,YAAcD,EAAQI,kBAErB,CAEN9vB,KAAK2vB,YAAcD,EAAQK,WAWtBL,GAAAnvB,UAAAmwB,mBAAP,SAA0BC,EAAiB5P,GAE1C/gB,KAAKZ,EAAIuxB,EAAOloB,CAChBzI,MAAKE,EAAIywB,EAAOjoB,CAChB1I,MAAK4lB,EAAI+K,EAAOtS,CAChBre,MAAKC,EAAID,KAAKZ,EAAE2hB,EAAMtY,EAAIzI,KAAKE,EAAE6gB,EAAMrY,EAAI1I,KAAK4lB,EAAE7E,EAAM1C,CACxD,IAAIre,KAAKZ,GAAK,GAAKY,KAAKE,GAAK,EAAG,CAE/BF,KAAK2vB,YAAcD,EAAQE,kBAErB,IAAI5vB,KAAKE,GAAK,GAAKF,KAAK4lB,GAAK,EAAG,CAEtC5lB,KAAK2vB,YAAcD,EAAQG,kBAErB,IAAI7vB,KAAKZ,GAAK,GAAKY,KAAK4lB,GAAK,EAAG,CAEtC5lB,KAAK2vB,YAAcD,EAAQI,kBAErB,CAEN9vB,KAAK2vB,YAAcD,EAAQK,WAUtBL,GAAAnvB,UAAAgkB,UAAP,WAEC,GAAIpiB,GAAa,EAAE2H,KAAK2gB,KAAKzqB,KAAKZ,EAAEY,KAAKZ,EAAIY,KAAKE,EAAEF,KAAKE,EAAIF,KAAK4lB,EAAE5lB,KAAK4lB,EACzE5lB,MAAKZ,GAAK+C,CACVnC,MAAKE,GAAKiC,CACVnC,MAAK4lB,GAAKzjB,CACVnC,MAAKC,GAAKkC,CACV,OAAOnC,MAQD0vB,GAAAnvB,UAAAqwB,SAAP,SAAgBzwB,GAGf,GAAIH,KAAK2vB,aAAeD,EAAQG,cAAe,CAE9C,MAAO7vB,MAAKZ,EAAEe,EAAEsI,EAAIzI,KAAKC,MAEnB,IAAID,KAAK2vB,aAAeD,EAAQI,cAAe,CACrD,MAAO9vB,MAAKE,EAAEC,EAAEuI,EAAI1I,KAAKC,MAGrB,IAAID,KAAK2vB,aAAeD,EAAQE,cAAe,CAEnD,MAAO5vB,MAAK4lB,EAAEzlB,EAAEke,EAAIre,KAAKC,MAEnB,CAEN,MAAOD,MAAKZ,EAAEe,EAAEsI,EAAIzI,KAAKE,EAAEC,EAAEuI,EAAI1I,KAAK4lB,EAAEzlB,EAAEke,EAAIre,KAAKC,GAW9CyvB,GAAAnvB,UAAAswB,cAAP,SAAqB1wB,EAAY2wB,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,IAGhC,GAAI9wB,KAAKC,GAAKD,KAAKC,EAClB,MAAOwvB,GAAoBsB,KAE5B,IAAI5uB,EACJ,IAAInC,KAAK2vB,aAAeD,EAAQG,cAC/B1tB,EAAMnC,KAAKZ,EAAEe,EAAEsI,EAAIzI,KAAKC,MAAQ,IAAID,KAAK2vB,aAAeD,EAAQI,cAChE3tB,EAAMnC,KAAKE,EAAEC,EAAEuI,EAAI1I,KAAKC,MAAQ,IAAID,KAAK2vB,aAAeD,EAAQE,cAChEztB,EAAMnC,KAAK4lB,EAAEzlB,EAAEke,EAAIre,KAAKC,MACxBkC,GAAMnC,KAAKZ,EAAEe,EAAEsI,EAAIzI,KAAKE,EAAEC,EAAEuI,EAAI1I,KAAK4lB,EAAEzlB,EAAEke,EAAIre,KAAKC,CAEnD,IAAIkC,GAAO2uB,EACV,MAAOrB,GAAoBuB,SAAW,IAAI7uB,EAAM2uB,EAChD,MAAOrB,GAAoBsB,UAC3B,OAAOtB,GAAoBwB,UAGtBvB,GAAAnvB,UAAAmhB,SAAP,WAEC,MAAO,cAAgB1hB,KAAKZ,EAAI,OAASY,KAAKE,EAAI,OAASF,KAAK4lB,EAAI,OAAS5lB,KAAKC,EAAI,IAhLzEyvB,GAAAK,UAAmB,CACnBL,GAAAE,cAAuB,CACvBF,GAAAG,cAAuB,CACvBH,GAAAI,cAAuB,CA+KtC,OAAAJ,KAEA5vB,GAAiBJ,QAARgwB,IrDmsONwB,2CAA2C,6CAA6CA,4CAA4C,SAAStyB,EAAQkB,EAAOJ,GsDn5O/J,GAAM+vB,GAAmB,WAAzB,QAAMA,MAGSA,EAAAuB,KAAc,CACdvB,GAAAsB,MAAe,CAEftB,GAAA0B,GAAY,CACZ1B,GAAA2B,IAAa,CACb3B,GAAAwB,UAAmB,CAElC,OAAAxB,KAE6B3vB,GAAAJ,QAApB+vB,OtDq5OHpa,8BAA8B,SAASzW,EAAQkB,EAAOJ,GAuB5D,GuDl6OMgV,GAAK,WA2BV,QA3BKA,GA2BOjM,EAAcC,GAAd,GAAAD,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAEzB1I,KAAKyI,EAAIA,CACTzI,MAAK0I,EAAIA,EAfVvH,OAAAC,eAAWsT,EAAAnU,UAAA,UvDq6OJc,IuDr6OP,WAEC,MAAOyI,MAAK2gB,KAAKzqB,KAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,IvDs6OvCnH,WAAY,KACZC,aAAc,MuDh5OdkT,GAAAnU,UAAA8wB,IAAP,SAAWhN,GAEV,MAAO,IAAI3P,GAAM1U,KAAKyI,EAAI4b,EAAE5b,EAAGzI,KAAK0I,EAAI2b,EAAE3b,GAQpCgM,GAAAnU,UAAA+B,MAAP,WAEC,MAAO,IAAIoS,GAAM1U,KAAKyI,EAAGzI,KAAK0I,GAGxBgM,GAAAnU,UAAAue,SAAP,SAAgBwS,IAaT5c,GAAAnU,UAAAye,OAAP,SAAcC,GAEb,MAAQjf,MAAKyI,GAAKwW,EAAUxW,GAAKzI,KAAK0I,GAAKuW,EAAUvW,EAW/CgM,GAAAnU,UAAAgkB,UAAP,SAAiBxR,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhB,GAAI/S,KAAKJ,QAAU,EAAG,CACrB,GAAI2xB,GAAYxe,EAAU/S,KAAKJ,MAC/BI,MAAKyI,GAAK8oB,CACVvxB,MAAK0I,GAAK6oB,CACV,QAED,KAAM,gCAaA7c,GAAAnU,UAAAuC,OAAP,SAAcqc,EAAWC,GAExBpf,KAAKyI,GAAK0W,CACVnf,MAAK0I,GAAK0W,EAGJ1K,GAAAnU,UAAA4gB,MAAP,SAAaC,EAAWC,IAYjB3M,GAAAnU,UAAAixB,SAAP,SAAgBnN,GAEf,MAAO,IAAI3P,GAAM1U,KAAKyI,EAAI4b,EAAE5b,EAAGzI,KAAK0I,EAAI2b,EAAE3b,GAWpCgM,GAAAnU,UAAAmhB,SAAP,WAEC,MAAO,cAAgB1hB,KAAKyI,EAAI,OAASzI,KAAK0I,EAAI,IAUrCgM,GAAAkc,SAAd,SAAuBa,EAAWC,GAEjC,GAAIvS,GAAYuS,EAAIjpB,EAAIgpB,EAAIhpB,CAC5B,IAAI2W,GAAYsS,EAAIhpB,EAAI+oB,EAAI/oB,CAE5B,OAAOoB,MAAK2gB,KAAKtL,EAAGA,EAAKC,EAAGA,GAsBf1K,GAAAyW,YAAd,SAA0BsG,EAAWC,EAAWpyB,GAE/C,MAAO,IAAIoV,GAAMgd,EAAIjpB,GAAKgpB,EAAIhpB,EAAIipB,EAAIjpB,GAAGnJ,EAAGoyB,EAAIhpB,GAAK+oB,EAAI/oB,EAAIgpB,EAAIhpB,GAAGpJ,GAUvDoV,GAAAid,MAAd,SAAoBxvB,EAAY+qB,GAE/B,MAAO,IAAIxY,GAAMvS,EAAI2H,KAAKqjB,IAAID,GAAQ/qB,EAAI2H,KAAKsjB,IAAIF,IAErD,OAAAxY,KAEA5U,GAAeJ,QAANgV,OvDk4OHkd,sCAAsC,SAAShzB,EAAQkB,EAAOJ,GwDtlPpE,GAAMmyB,GAAa,WAAnB,QAAMA,MAISA,EAAAC,kBAAd,WAGC9xB,KAAK+xB,eAAiB,GAAIjxB,MAC1Bd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,SAAW,SACtDd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,SAAW,UAAY,UAAY,SAC9Ed,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,SAAW,aAAe,UAAY,UAAY,SAAW,SACxGd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,SAC5Hd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UACnJd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,UAAY,UAAY,QAC7Kd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAClMd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,YAAc,UAAY,SAC3Nd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,WAAa,UAAY,UAAY,SAAW,SAAW,UAAY,QAAU,UAAY,SAAW,UAAY,UAAY,SACjPd,MAAK+xB,eAAe,GAAK,GAAIjxB,OAAc,UAAY,WAAa,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,OAAS,SAAW,UAAY,SACtQd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,UAAY,UAAY,QAAU,QAAU,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAC5Rd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,WAAa,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,QAAU,SACrTd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,QAAU,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,QAAU,UAAY,WAAa,SAAW,SAAW,UAAY,SAAW,WAAa,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,SAAW,SAAW,QAAU,SAAW,SACxUd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,WAAa,SAAW,UAAY,QAAU,UAAY,OAAS,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAChWd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,SAAW,QAAU,SAAW,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SACzXd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,QAAU,YAAc,QAAU,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,SAAW,YAAc,UAAY,UAAY,WAAa,QAAU,SACtZd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,SAAW,QAAU,SAAW,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,WAAa,UAAY,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SACzad,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAC5bd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,WAAa,SAAW,SAAW,UAAY,UAAY,QAAU,SAAW,QAAU,UAAY,SAAW,SACvdd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,SAAW,QAAU,UAAY,UAAY,SAAW,QAAU,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,WAAa,SAAW,QAAU,UAAY,SAAW,UAAY,QAAU,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SACzed,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,SAAW,UAAY,WAAa,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,QAAU,SACzgBd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,WAAa,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,WAAa,QAAU,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,WAAa,UAAY,SACzhBd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,YAAc,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,YAAc,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SACrjBd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,UAAY,UAAY,SAAW,UAAY,WAAa,UAAY,UAAY,SAAW,UAAY,UAAY,QAAU,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,QAAU,QAAU,SAAW,QAAU,SAAW,SAAW,SAAW,QAAU,SAAW,UAAY,SACxkBd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,UAAY,SAAW,UAAY,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,WAAa,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,QAAU,SAAW,QAAU,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,QAAU,SAAW,SACjmBd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,QAAU,SAAW,UAAY,UAAY,SAAW,QAAU,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,WAAa,UAAY,UAAY,SAAW,QACxnBd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,SAAW,UAAY,UAAY,WAAa,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAC/oBd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,WAAa,UAAY,SAAW,UAAY,WAAa,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,SAClqBd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,WAAa,SAAW,UAAY,SAAW,UAAY,SAAW,MAAQ,SAAW,QAAU,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,QAAU,SACzrBd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,QAAU,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,QAAU,SAAW,UAAY,QAAU,SAAW,SAAW,UAAY,OAAS,UAAY,QAAU,SAAW,QAAU,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,QACjtBd,MAAK+xB,eAAe,IAAM,GAAIjxB,OAAc,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,OAAS,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,QAAU,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,QAAU,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,QAAU,UAAY,UAAY,UAAY,SAAW,UAChuBd,MAAK+xB,eAAe,IAAM,GAAIjxB,QAAe,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,QAAU,UAAY,UAAY,SAAW,UAAY,QAAU,WAAa,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,WAAa,SAAW,SAAW,UAAY,SAAW,SAAW,UAGjvB+wB,GAAAG,gBAAd,SAA8BjzB,GAE7B,IAAKiB,KAAK+xB,eACT/xB,KAAK8xB,mBAEN,IAAI/yB,EAAI,GAAKA,EAAI,GAChB,MAAO,KAER,OAAOiB,MAAK+xB,eAAehzB,EAAI,GAEjC,OAAA8yB,KAEA/xB,GAAuBJ,QAAdmyB,OxDmlPHI,mCAAmC,SAASrzB,EAAQkB,EAAOJ,GyDzoPjE,GAAO0jB,GAAaxkB,EAAY,qCAChC,IAAOgoB,GAAahoB,EAAY,qCAChC,IAAOukB,GAAQvkB,EAAc,gCAC7B,IAAOuf,GAAQvf,EAAc,gCzD8oP7B,IyDzoPMszB,GAAU,WA6Bf,QA7BKA,GA6BOzpB,EAAcC,EAAc2V,EAAclJ,GAA1C,GAAA1M,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA2V,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAlJ,QAAA,GAAY,CAAZA,EAAA,EAxB/CnV,KAAAyI,EAAW,CAKXzI,MAAA0I,EAAW,CAKX1I,MAAAqe,EAAW,CAKXre,MAAAmV,EAAW,CAWjBnV,MAAKyI,EAAIA,CACTzI,MAAK0I,EAAIA,CACT1I,MAAKqe,EAAIA,CACTre,MAAKmV,EAAIA,EAMVhU,OAAAC,eAAW8wB,EAAA3xB,UAAA,azDuoPJc,IyDvoPP,WAEC,MAAOyI,MAAK2gB,KAAKzqB,KAAKmV,EAAEnV,KAAKmV,EAAInV,KAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKqe,IzDwoPvE9c,WAAY,KACZC,aAAc,MyDhoPd0wB,GAAA3xB,UAAAuuB,SAAP,SAAgBqD,EAAeC,GAE9B,GAAIC,GAAYF,EAAGhd,EAAGmd,EAAYH,EAAG1pB,EAAG8pB,EAAYJ,EAAGzpB,EAAG8pB,EAAYL,EAAG9T,CACzE,IAAIoU,GAAYL,EAAGjd,EAAGud,EAAYN,EAAG3pB,EAAGkqB,EAAYP,EAAG1pB,EAAGkqB,EAAYR,EAAG/T,CAEzEre,MAAKmV,EAAIkd,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,CACpC5yB,MAAKyI,EAAI4pB,EAAGK,EAAKJ,EAAGG,EAAKF,EAAGK,EAAKJ,EAAGG,CACpC3yB,MAAK0I,EAAI2pB,EAAGM,EAAKL,EAAGM,EAAKL,EAAGE,EAAKD,EAAGE,CACpC1yB,MAAKqe,EAAIgU,EAAGO,EAAKN,EAAGK,EAAKJ,EAAGG,EAAKF,EAAGC,EAG9BP,GAAA3xB,UAAAsyB,eAAP,SAAsB5M,EAAiBnL,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAGtC,GAAIA,IAAW,KAAM,CACpBA,EAAS,GAAIoX,GAKd,GAAIQ,GAAYzM,EAAOxd,CACvB,IAAIkqB,GAAY1M,EAAOvd,CACvB,IAAIkqB,GAAY3M,EAAO5H,CAEvBvD,GAAO3F,GAAKnV,KAAKyI,EAAEiqB,EAAK1yB,KAAK0I,EAAEiqB,EAAK3yB,KAAKqe,EAAEuU,CAC3C9X,GAAOrS,EAAIzI,KAAKmV,EAAEud,EAAK1yB,KAAK0I,EAAEkqB,EAAK5yB,KAAKqe,EAAEsU,CAC1C7X,GAAOpS,EAAI1I,KAAKmV,EAAEwd,EAAK3yB,KAAKyI,EAAEmqB,EAAK5yB,KAAKqe,EAAEqU,CAC1C5X,GAAOuD,EAAIre,KAAKmV,EAAEyd,EAAK5yB,KAAKyI,EAAEkqB,EAAK3yB,KAAK0I,EAAEgqB,CAE1C,OAAO5X,GASDoX,GAAA3xB,UAAAuyB,cAAP,SAAqB5J,EAAegE,GAEnC,GAAI6F,GAAejpB,KAAKsjB,IAAIF,EAAM,EAClC,IAAI8F,GAAelpB,KAAKqjB,IAAID,EAAM,EAElCltB,MAAKyI,EAAIygB,EAAKzgB,EAAEsqB,CAChB/yB,MAAK0I,EAAIwgB,EAAKxgB,EAAEqqB,CAChB/yB,MAAKqe,EAAI6K,EAAK7K,EAAE0U,CAChB/yB,MAAKmV,EAAI6d,CAEThzB,MAAKukB,YASC2N,GAAA3xB,UAAA0yB,MAAP,SAAad,EAAeC,EAAetzB,GAE1C,GAAIuzB,GAAYF,EAAGhd,EAAGmd,EAAYH,EAAG1pB,EAAG8pB,EAAYJ,EAAGzpB,EAAG8pB,EAAYL,EAAG9T,CACzE,IAAIoU,GAAYL,EAAGjd,EAAGud,EAAYN,EAAG3pB,EAAGkqB,EAAYP,EAAG1pB,EAAGkqB,EAAYR,EAAG/T,CACzE,IAAI6U,GAAab,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,CAG5C,IAAIM,EAAM,EAAG,CACZA,GAAOA,CACPT,IAAMA,CACNC,IAAMA,CACNC,IAAMA,CACNC,IAAMA,EAGP,GAAIM,EAAM,IAAM,CzD0nPN,GyDxnPLhG,GAAepjB,KAAK8gB,KAAKsI,EAC7B,IAAIj0B,GAAW,EAAE6K,KAAKsjB,IAAIF,EAC1B,IAAIiG,GAAYrpB,KAAKsjB,IAAIF,GAAO,EAAIpuB,IAAIG,CACxC,IAAIm0B,GAAYtpB,KAAKsjB,IAAIF,EAAMpuB,GAAGG,CAClCe,MAAKmV,EAAIkd,EAAGc,EAAKV,EAAGW,CACpBpzB,MAAKyI,EAAI6pB,EAAGa,EAAKT,EAAGU,CACpBpzB,MAAK0I,EAAI6pB,EAAGY,EAAKR,EAAGS,CACpBpzB,MAAKqe,EAAImU,EAAGW,EAAKP,EAAGQ,MACd,CAENpzB,KAAKmV,EAAIkd,EAAKvzB,GAAG2zB,EAAKJ,EACtBryB,MAAKyI,EAAI6pB,EAAKxzB,GAAG4zB,EAAKJ,EACtBtyB,MAAK0I,EAAI6pB,EAAKzzB,GAAG6zB,EAAKJ,EACtBvyB,MAAKqe,EAAImU,EAAK1zB,GAAG8zB,EAAKJ,EACtB,IAAIrwB,GAAa,EAAI2H,KAAK2gB,KAAKzqB,KAAKmV,EAAEnV,KAAKmV,EAAInV,KAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKqe,EAC3Fre,MAAKmV,GAAKhT,CACVnC,MAAKyI,GAAKtG,CACVnC,MAAK0I,GAAKvG,CACVnC,MAAKqe,GAAKlc,GAUL+vB,GAAA3xB,UAAA8yB,KAAP,SAAYlB,EAAeC,EAAetzB,GAEzC,GAAIuzB,GAAYF,EAAGhd,EAAGmd,EAAYH,EAAG1pB,EAAG8pB,EAAYJ,EAAGzpB,EAAG8pB,EAAYL,EAAG9T,CACzE,IAAIoU,GAAYL,EAAGjd,EAAGud,EAAYN,EAAG3pB,EAAGkqB,EAAYP,EAAG1pB,EAAGkqB,EAAYR,EAAG/T,CACzE,IAAIlc,EAGJ,IAAIkwB,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAK,EAAG,CACtCH,GAAMA,CACNC,IAAMA,CACNC,IAAMA,CACNC,IAAMA,EAGP5yB,KAAKmV,EAAIkd,EAAKvzB,GAAG2zB,EAAKJ,EACtBryB,MAAKyI,EAAI6pB,EAAKxzB,GAAG4zB,EAAKJ,EACtBtyB,MAAK0I,EAAI6pB,EAAKzzB,GAAG6zB,EAAKJ,EACtBvyB,MAAKqe,EAAImU,EAAK1zB,GAAG8zB,EAAKJ,EAEtBrwB,GAAM,EAAI2H,KAAK2gB,KAAKzqB,KAAKmV,EAAEnV,KAAKmV,EAAInV,KAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKqe,EAChFre,MAAKmV,GAAKhT,CACVnC,MAAKyI,GAAKtG,CACVnC,MAAK0I,GAAKvG,CACVnC,MAAKqe,GAAKlc,EAUJ+vB,GAAA3xB,UAAA+yB,gBAAP,SAAuBC,EAAWC,EAAWC,GAE5C,GAAIC,GAAeH,EAAG,GAAII,EAAeH,EAAG,GAAII,EAAeH,EAAG,EAClE,IAAII,GAAc/pB,KAAKqjB,IAAIuG,GAAQI,EAAchqB,KAAKsjB,IAAIsG,EAC1D,IAAIK,GAAcjqB,KAAKqjB,IAAIwG,GAAQK,EAAclqB,KAAKsjB,IAAIuG,EAC1D,IAAIM,GAAcnqB,KAAKqjB,IAAIyG,GAAQM,EAAcpqB,KAAKsjB,IAAIwG,EAE1D5zB,MAAKmV,EAAI0e,EAAKE,EAAKE,EAAOH,EAAKE,EAAKE,CACpCl0B,MAAKyI,EAAIqrB,EAAKC,EAAKE,EAAOJ,EAAKG,EAAKE,CACpCl0B,MAAK0I,EAAImrB,EAAKG,EAAKC,EAAOH,EAAKC,EAAKG,CACpCl0B,MAAKqe,EAAIwV,EAAKE,EAAKG,EAAOJ,EAAKE,EAAKC,EAQ9B/B,GAAA3xB,UAAA4zB,cAAP,SAAqBrZ,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAIpB,GAAIA,IAAW,KAAM,CAEpBA,EAAS,GAAIqD,GAIdrD,EAAOrS,EAAIqB,KAAKmhB,MAAM,GAAGjrB,KAAKmV,EAAEnV,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAKqe,GAAI,EAAI,GAAGre,KAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,GAC5FoS,GAAOpS,EAAIoB,KAAKkhB,KAAK,GAAGhrB,KAAKmV,EAAEnV,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKyI,GACpDqS,GAAOuD,EAAIvU,KAAKmhB,MAAM,GAAGjrB,KAAKmV,EAAEnV,KAAKqe,EAAIre,KAAKyI,EAAEzI,KAAK0I,GAAI,EAAI,GAAG1I,KAAK0I,EAAE1I,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKqe,GAE5F,OAAOvD,GAMDoX,GAAA3xB,UAAAgkB,UAAP,SAAiBhG,GAAA,GAAAA,QAAA,GAAc,CAAdA,EAAA,EAEhB,GAAI6V,GAAa7V,EAAIzU,KAAK2gB,KAAKzqB,KAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKqe,EAAIre,KAAKmV,EAAEnV,KAAKmV,EAE3FnV,MAAKyI,GAAK2rB,CACVp0B,MAAK0I,GAAK0rB,CACVp0B,MAAKqe,GAAK+V,CACVp0B,MAAKmV,GAAKif,EAQJlC,GAAA3xB,UAAAmhB,SAAP,WAEC,MAAO,MAAQ1hB,KAAKyI,EAAI,MAAQzI,KAAK0I,EAAI,MAAQ1I,KAAKqe,EAAI,MAAQre,KAAKmV,EAAI,IAQrE+c,GAAA3xB,UAAA+uB,WAAP,SAAkBxU,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEjB,GAAIiK,GAAmB3B,EAAcc,kBACrC;GAAImQ,GAAa,EAAIr0B,KAAKyI,EAAEzI,KAAK0I,EAAG4rB,EAAa,EAAIt0B,KAAKyI,EAAEzI,KAAKqe,EAAGkW,EAAa,EAAIv0B,KAAKyI,EAAEzI,KAAKmV,CACjG,IAAIqf,GAAa,EAAIx0B,KAAK0I,EAAE1I,KAAKqe,EAAGoW,EAAa,EAAIz0B,KAAK0I,EAAE1I,KAAKmV,EAAGuf,EAAa,EAAI10B,KAAKqe,EAAEre,KAAKmV,CACjG,IAAIqO,GAAYxjB,KAAKyI,EAAEzI,KAAKyI,EAAGmb,EAAY5jB,KAAK0I,EAAE1I,KAAK0I,EAAGqb,EAAY/jB,KAAKqe,EAAEre,KAAKqe,EAAGsW,EAAY30B,KAAKmV,EAAEnV,KAAKmV,CAE7G4P,GAAQ,GAAKvB,EAAKI,EAAKG,EAAK4Q,CAC5B5P,GAAQ,GAAKsP,EAAMK,CACnB3P,GAAQ,GAAKuP,EAAMG,CACnB1P,GAAQ,IAAM,CACdA,GAAQ,GAAKsP,EAAMK,CACnB3P,GAAQ,IAAMvB,EAAKI,EAAKG,EAAK4Q,CAC7B5P,GAAQ,GAAKyP,EAAMD,CACnBxP,GAAQ,IAAM,CACdA,GAAQ,GAAKuP,EAAMG,CACnB1P,GAAQ,GAAKyP,EAAMD,CACnBxP,GAAQ,KAAOvB,EAAKI,EAAKG,EAAK4Q,CAC9B5P,GAAQ,IAAM,CACdA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CAEd,KAAKjK,EACJ,MAAO,IAAIqI,GAAS4B,EAErBjK,GAAOqJ,gBAAgBY,EAEvB,OAAOjK,GAODoX,GAAA3xB,UAAAq0B,WAAP,SAAkBnqB,GAEjB,GAAI4Z,GAAa5Z,EAAO2f,UAAUxD,EAAciE,YAAY,EAC5D7qB,MAAKyI,EAAI4b,EAAE5b,CACXzI,MAAK0I,EAAI2b,EAAE3b,CACX1I,MAAKqe,EAAIgG,EAAEhG,CACXre,MAAKmV,EAAIkP,EAAElP,EAQL+c,GAAA3xB,UAAAs0B,UAAP,SAAiB/Z,EAAiBga,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,MAEjC,GAAIT,GAAa,EAAIr0B,KAAKyI,EAAEzI,KAAK0I,EAAG4rB,EAAa,EAAIt0B,KAAKyI,EAAEzI,KAAKqe,EAAGkW,EAAa,EAAIv0B,KAAKyI,EAAEzI,KAAKmV,CACjG,IAAIqf,GAAa,EAAIx0B,KAAK0I,EAAE1I,KAAKqe,EAAGoW,EAAa,EAAIz0B,KAAK0I,EAAE1I,KAAKmV,EAAGuf,EAAa,EAAI10B,KAAKqe,EAAEre,KAAKmV,CACjG,IAAIqO,GAAYxjB,KAAKyI,EAAEzI,KAAKyI,EAAGmb,EAAY5jB,KAAK0I,EAAE1I,KAAK0I,EAAGqb,EAAY/jB,KAAKqe,EAAEre,KAAKqe,EAAGsW,EAAY30B,KAAKmV,EAAEnV,KAAKmV,CAE7G2F,GAAO,GAAK0I,EAAKI,EAAKG,EAAK4Q,CAC3B7Z,GAAO,GAAKuZ,EAAMK,CAClB5Z,GAAO,GAAKwZ,EAAMG,CAClB3Z,GAAO,GAAKuZ,EAAMK,CAClB5Z,GAAO,IAAM0I,EAAKI,EAAKG,EAAK4Q,CAC5B7Z,GAAO,GAAK0Z,EAAMD,CAClBzZ,GAAO,GAAKwZ,EAAMG,CAClB3Z,GAAO,GAAK0Z,EAAMD,CAClBzZ,GAAO,KAAO0I,EAAKI,EAAKG,EAAK4Q,CAC7B7Z,GAAO,GAAKA,EAAO,GAAKA,EAAO,IAAM,CAErC,KAAKga,EAAe,CACnBha,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAM,CACvCA,GAAO,IAAM,GAQRoX,GAAA3xB,UAAA+B,MAAP,WAEC,MAAO,IAAI4vB,GAAWlyB,KAAKyI,EAAGzI,KAAK0I,EAAG1I,KAAKqe,EAAGre,KAAKmV,GAS7C+c,GAAA3xB,UAAAw0B,YAAP,SAAmB9O,EAAiBnL,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEnC,GAAIwX,GAAWC,EAAWC,EAAWH,CACrC,IAAIK,GAAYzM,EAAOxd,EAAGkqB,EAAY1M,EAAOvd,EAAGkqB,EAAY3M,EAAO5H,CAGnE,IAAIvD,IAAW,KAAM,CAEpBA,EAAS,GAAIqD,GAKdkU,GAAMryB,KAAKyI,EAAEiqB,EAAK1yB,KAAK0I,EAAEiqB,EAAK3yB,KAAKqe,EAAEuU,CACrCN,GAAKtyB,KAAKmV,EAAEud,EAAK1yB,KAAK0I,EAAEkqB,EAAK5yB,KAAKqe,EAAEsU,CACpCJ,GAAKvyB,KAAKmV,EAAEwd,EAAK3yB,KAAKyI,EAAEmqB,EAAK5yB,KAAKqe,EAAEqU,CACpCF,GAAKxyB,KAAKmV,EAAEyd,EAAK5yB,KAAKyI,EAAEkqB,EAAK3yB,KAAK0I,EAAEgqB,CAEpC5X,GAAOrS,GAAK4pB,EAAGryB,KAAKyI,EAAI6pB,EAAGtyB,KAAKmV,EAAIod,EAAGvyB,KAAKqe,EAAImU,EAAGxyB,KAAK0I,CACxDoS,GAAOpS,GAAK2pB,EAAGryB,KAAK0I,EAAI4pB,EAAGtyB,KAAKqe,EAAIkU,EAAGvyB,KAAKmV,EAAIqd,EAAGxyB,KAAKyI,CACxDqS,GAAOuD,GAAKgU,EAAGryB,KAAKqe,EAAIiU,EAAGtyB,KAAK0I,EAAI6pB,EAAGvyB,KAAKyI,EAAI+pB,EAAGxyB,KAAKmV,CAExD,OAAO2F,GAODoX,GAAA3xB,UAAAue,SAAP,SAAgBwL,GAEftqB,KAAKyI,EAAI6hB,EAAE7hB,CACXzI,MAAK0I,EAAI4hB,EAAE5hB,CACX1I,MAAKqe,EAAIiM,EAAEjM,CACXre,MAAKmV,EAAImV,EAAEnV,EAEb,OAAA+c,KAEApyB,GAAoBJ,QAAXwyB,IzDolPNvL,gCAAgC,gCAAgCzD,qCAAqC,qCAAqC4K,qCAAqC,qCAAqCjM,gCAAgC,kCAAkCvU,kCAAkC,SAAS1O,EAAQkB,EAAOJ,G0Dn9PnV,GAAOgV,GAAK9V,EAAe,6B1DigQ3B,I0Dn9PMgO,GAAS,WAoJd,QApJKA,GAoJOnE,EAAcC,EAAcrB,EAAkBC,GAA9C,GAAAmB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAArB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEzDtH,KAAKyI,EAAIA,CACTzI,MAAK0I,EAAIA,CACT1I,MAAKqH,MAAQA,CACbrH,MAAKsH,OAASA,EA5GfnG,OAAAC,eAAWwL,EAAArM,UAAA,U1Do8PJc,I0Dp8PP,WAEC,MAAOrB,MAAK0I,EAAI1I,KAAKsH,Q1Dq8Pf/F,WAAY,KACZC,aAAc,M0D/7PrBL,QAAAC,eAAWwL,EAAArM,UAAA,e1Ds8PJc,I0Dt8PP,WAEC,GAAIrB,KAAKg1B,cAAgB,KACxBh1B,KAAKg1B,aAAe,GAAItgB,EAEzB1U,MAAKg1B,aAAavsB,EAAIzI,KAAKyI,EAAIzI,KAAKqH,KACpCrH,MAAKg1B,aAAatsB,EAAI1I,KAAK0I,EAAI1I,KAAKsH,MAEpC,OAAOtH,MAAKg1B,c1Dq8PNzzB,WAAY,KACZC,aAAc,M0Dz7PrBL,QAAAC,eAAWwL,EAAArM,UAAA,Q1Ds8PJc,I0Dt8PP,WAEC,MAAOrB,MAAKyI,G1Du8PNlH,WAAY,KACZC,aAAc,M0Dl8PrBL,QAAAC,eAAWwL,EAAArM,UAAA,S1Dw8PJc,I0Dx8PP,WAEC,MAAOrB,MAAKyI,EAAIzI,KAAKqH,O1Dy8Pf9F,WAAY,KACZC,aAAc,M0Dn8PrBL,QAAAC,eAAWwL,EAAArM,UAAA,Q1D08PJc,I0D18PP,WAEC,GAAIrB,KAAKmF,OAAS,KACjBnF,KAAKmF,MAAQ,GAAIuP,EAElB1U,MAAKmF,MAAMsD,EAAIzI,KAAKqH,KACpBrH,MAAKmF,MAAMuD,EAAI1I,KAAKsH,MAEpB,OAAOtH,MAAKmF,O1Dy8PN5D,WAAY,KACZC,aAAc,M0D77PrBL,QAAAC,eAAWwL,EAAArM,UAAA,O1D08PJc,I0D18PP,WAEC,MAAOrB,MAAK0I,G1D28PNnH,WAAY,KACZC,aAAc,M0Dr8PrBL,QAAAC,eAAWwL,EAAArM,UAAA,W1D48PJc,I0D58PP,WAEC,GAAIrB,KAAKi1B,UAAY,KACpBj1B,KAAKi1B,SAAW,GAAIvgB,EAErB1U,MAAKi1B,SAASxsB,EAAIzI,KAAKyI,CACvBzI,MAAKi1B,SAASvsB,EAAI1I,KAAK0I,CAEvB,OAAO1I,MAAKi1B,U1D28PN1zB,WAAY,KACZC,aAAc,M0Dz6PdoL,GAAArM,UAAA+B,MAAP,WAEC,MAAO,IAAIsK,GAAU5M,KAAKyI,EAAGzI,KAAK0I,EAAG1I,KAAKqH,MAAOrH,KAAKsH,QAYhDsF,GAAArM,UAAAme,SAAP,SAAgBjW,EAAUC,GAEzB,MAAQ1I,MAAKyI,GAAKA,GAAKzI,KAAKyI,EAAIzI,KAAKqH,OAASoB,GAAKzI,KAAK0I,GAAKA,GAAK1I,KAAK0I,EAAI1I,KAAKsH,QAAUoB,EAcpFkE,GAAArM,UAAAoe,cAAP,SAAqBoC,GAEpB,MAAQ/gB,MAAKyI,GAAKsY,EAAMtY,GAAKzI,KAAKyI,EAAIzI,KAAKqH,OAAS0Z,EAAMtY,GAAKzI,KAAK0I,GAAKqY,EAAMrY,GAAK1I,KAAK0I,EAAI1I,KAAKsH,QAAUyZ,EAAMrY,EAc5GkE,GAAArM,UAAA20B,aAAP,SAAoB9sB,GAEnB,MAAQpI,MAAKyI,GAAKL,EAAKK,GAAKzI,KAAKyI,EAAIzI,KAAKqH,OAASe,EAAKK,EAAIL,EAAKf,OAASrH,KAAK0I,GAAKN,EAAKM,GAAK1I,KAAK0I,EAAI1I,KAAKsH,QAAUc,EAAKM,EAAIN,EAAKd,OAS9HsF,GAAArM,UAAAue,SAAP,SAAgBxV,IAkBTsD,GAAArM,UAAAye,OAAP,SAAcC,GAEb,MAAQjf,MAAKyI,GAAKwW,EAAUxW,GAAKzI,KAAK0I,GAAKuW,EAAUvW,GAAK1I,KAAKqH,OAAS4X,EAAU5X,OAASrH,KAAKsH,QAAU2X,EAAU3X,OAgB9GsF,GAAArM,UAAA2e,QAAP,SAAeC,EAAWC,GAEzBpf,KAAKyI,GAAK0W,EAAG,CACbnf,MAAK0I,GAAK0W,EAAG,CACbpf,MAAKqH,OAAS8X,EAAG,CACjBnf,MAAKsH,QAAU8X,EAAG,EAeZxS,GAAArM,UAAA+e,aAAP,SAAoByB,GAEnB/gB,KAAKyI,GAAKsY,EAAMtY,EAAE,CAClBzI,MAAK0I,GAAKqY,EAAMrY,EAAE,CAClB1I,MAAKqH,OAAS0Z,EAAMtY,EAAE,CACtBzI,MAAKsH,QAAUyZ,EAAMrY,EAAE,EAkBjBkE,GAAArM,UAAAif,aAAP,SAAoBC,GAEnB,GAAIzf,KAAK0f,WAAWD,GAAc,CACjC,GAAIpgB,GAAc,GAAIuN,EAEtB,IAAI5M,KAAKyI,EAAIgX,EAAYhX,EAAG,CAC3BpJ,EAAEoJ,EAAIzI,KAAKyI,CACXpJ,GAAEgI,MAAQoY,EAAYhX,EAAIzI,KAAKyI,EAAIgX,EAAYpY,KAE/C,IAAIhI,EAAEgI,MAAQrH,KAAKqH,MAClBhI,EAAEgI,MAAQrH,KAAKqH,UACV,CACNhI,EAAEoJ,EAAIgX,EAAYhX,CAClBpJ,GAAEgI,MAAQrH,KAAKyI,EAAIgX,EAAYhX,EAAIzI,KAAKqH,KAExC,IAAIhI,EAAEgI,MAAQoY,EAAYpY,MACzBhI,EAAEgI,MAAQoY,EAAYpY,MAGxB,GAAIrH,KAAK0I,EAAI+W,EAAY/W,EAAG,CAC3BrJ,EAAEqJ,EAAI1I,KAAK0I,CACXrJ,GAAEiI,OAASmY,EAAY/W,EAAI1I,KAAK0I,EAAI+W,EAAYnY,MAEhD,IAAIjI,EAAEiI,OAAStH,KAAKsH,OACnBjI,EAAEiI,OAAStH,KAAKsH,WACX,CACNjI,EAAEqJ,EAAI+W,EAAY/W,CAClBrJ,GAAEiI,OAAStH,KAAK0I,EAAI+W,EAAY/W,EAAI1I,KAAKsH,MAEzC,IAAIjI,EAAEiI,OAASmY,EAAYnY,OAC1BjI,EAAEiI,OAASmY,EAAYnY,OAGzB,MAAOjI,GAGR,MAAO,IAAIuN,GAeLA,GAAArM,UAAAmf,WAAP,SAAkBD,GAEjB,MAAQzf,MAAKyI,EAAIzI,KAAKqH,MAAQoY,EAAYhX,GAAKzI,KAAKyI,EAAIgX,EAAYhX,EAAIgX,EAAYpY,OAASrH,KAAK0I,EAAI1I,KAAKsH,OAASmY,EAAY/W,GAAK1I,KAAK0I,EAAI+W,EAAY/W,EAAI+W,EAAYnY,OASpKsF,GAAArM,UAAAygB,QAAP,WAEC,MAAQhhB,MAAKyI,GAAK,GAAKzI,KAAK0I,GAAK,GAAK1I,KAAKqH,OAAS,GAAKrH,KAAKsH,QAAU,EAUlEsF,GAAArM,UAAAuC,OAAP,SAAcqc,EAAWC,GAExBpf,KAAKyI,GAAK0W,CACVnf,MAAK0I,GAAK0W,EAUJxS,GAAArM,UAAA40B,YAAP,SAAmBpU,GAElB/gB,KAAKyI,GAAKsY,EAAMtY,CAChBzI,MAAK0I,GAAKqY,EAAMrY,EAWVkE,GAAArM,UAAA2gB,SAAP,WAEClhB,KAAKyI,EAAI,CACTzI,MAAK0I,EAAI,CACT1I,MAAKqH,MAAQ,CACbrH,MAAKsH,OAAS,EAaRsF,GAAArM,UAAA4gB,MAAP,SAAaC,EAAWC,EAAWE,EAAeC,GAEjDxhB,KAAKyI,EAAI2Y,CACTphB,MAAK0I,EAAI2Y,CACTrhB,MAAKqH,MAAQka,CACbvhB,MAAKsH,OAASka,EAWR5U,GAAArM,UAAAmhB,SAAP,WAEC,MAAO,kBAAoB1hB,KAAKyI,EAAI,OAASzI,KAAK0I,EAAI,WAAa1I,KAAKqH,MAAQ,YAAcrH,KAAKsH,OAAS,IActGsF,GAAArM,UAAAohB,MAAP,SAAaC,GAEZ,GAAIziB,GAAc,GAAIyN,EAEtB,IAAI5M,KAAKyI,EAAImZ,EAAQnZ,EAAG,CACvBtJ,EAAEsJ,EAAIzI,KAAKyI,CACXtJ,GAAEkI,MAAQua,EAAQnZ,EAAIzI,KAAKyI,EAAImZ,EAAQva,KAEvC,IAAIlI,EAAEkI,MAAQrH,KAAKqH,MAClBlI,EAAEkI,MAAQrH,KAAKqH,UACV,CACNlI,EAAEsJ,EAAImZ,EAAQnZ,CACdtJ,GAAEkI,MAAQrH,KAAKyI,EAAImZ,EAAQnZ,EAAIzI,KAAKqH,KAEpC,IAAIlI,EAAEkI,MAAQua,EAAQva,MACrBlI,EAAEkI,MAAQua,EAAQva,MAGpB,GAAIrH,KAAK0I,EAAIkZ,EAAQlZ,EAAG,CACvBvJ,EAAEuJ,EAAI1I,KAAK0I,CACXvJ,GAAEmI,OAASsa,EAAQlZ,EAAI1I,KAAK0I,EAAIkZ,EAAQta,MAExC,IAAInI,EAAEmI,OAAStH,KAAKsH,OACnBnI,EAAEmI,OAAStH,KAAKsH,WACX,CACNnI,EAAEuJ,EAAIkZ,EAAQlZ,CACdvJ,GAAEmI,OAAStH,KAAK0I,EAAIkZ,EAAQlZ,EAAI1I,KAAKsH,MAErC,IAAInI,EAAEmI,OAASsa,EAAQta,OACtBnI,EAAEmI,OAASsa,EAAQta,OAGrB,MAAOnI,GAET,OAAAyN,KAEA9M,GAAmBJ,QAAVkN,I1Dy4PNyI,6BAA6B,+BAA+B+f,+BAA+B,SAASx2B,EAAQkB,EAAOJ,G2D55QtH,GAAM21B,GAAM,WAyBX,QAzBKA,GAyBO5sB,EAAcC,EAAc2V,EAAciX,GAA1C,GAAA7sB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA2V,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAiX,QAAA,GAAiB,CAAjBA,EAAA,EAErDt1B,KAAKyI,EAAIA,CACTzI,MAAK0I,EAAIA,CACT1I,MAAKqe,EAAIA,CACTre,MAAKs1B,OAASA,EAIRD,EAAA90B,UAAAof,gBAAP,SAAuB9T,EAAmB+T,EAAoBC,GAE7D,GAAI7f,KAAK2e,cAAc9S,GACtB,MAAO,EAER,IAAIuU,GAAYvU,EAASpD,EAAIzI,KAAKyI,EAAG4X,EAAYxU,EAASnD,EAAI1I,KAAK0I,EAAG4X,EAAYzU,EAASwS,EAAIre,KAAKqe,CACpG,IAAIkC,GAAYX,EAAUnX,EAAG+X,EAAYZ,EAAUlX,EAAG+X,EAAYb,EAAUvB,CAC5E,IAAIwC,EAEJ,IAAIzhB,GAAWmhB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAClC,IAAIvgB,GAAW,GAAIkgB,EAAGG,EAAKF,EAAGG,EAAKF,EAAGG,EACtC,IAAImF,GAAWxF,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAAKtgB,KAAKs1B,OAAOt1B,KAAKs1B,MACxD,IAAIC,GAAar1B,EAAEA,EAAI,EAAEd,EAAEwmB,CAE3B,IAAI2P,GAAO,EAAG,CACb,GAAIC,GAAiB1rB,KAAK2gB,KAAK8K,EAC/B1U,KAAsB3gB,EAAIs1B,IAAY,EAAEp2B,EACxC,IAAIyhB,GAAoB,EAAG,CAC1BhB,EAAapX,EAAI2X,EAAKS,EAAiBN,CACvCV,GAAanX,EAAI2X,EAAKQ,EAAiBL,CACvCX,GAAaxB,EAAIiC,EAAKO,EAAiBJ,CACvCZ,GAAa0E,WAEb,OAAO1D,IAKT,OAAQ,EAGFwU,GAAA90B,UAAAoe,cAAP,SAAqB9S,GAEpB,GAAIuU,GAAYvU,EAASpD,EAAIzI,KAAKyI,CAClC,IAAI4X,GAAYxU,EAASnD,EAAI1I,KAAK0I,CAClC,IAAI4X,GAAYzU,EAASwS,EAAIre,KAAKqe,CAClC,IAAIuS,GAAkB9mB,KAAK2gB,KAAKrK,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EACnD,OAAOsQ,IAAY5wB,KAAKs1B,OAGlBD,GAAA90B,UAAAmhB,SAAP,WAEC,MAAO,aAAe1hB,KAAKyI,EAAI,OAASzI,KAAK0I,EAAI,OAAS1I,KAAKqe,EAAI,YAAcre,KAAKs1B,OAAS,IAEjG,OAAAD,KAEgBv1B,GAAAJ,QAAP21B,O3Di4QHI,oCAAoC,SAAS72B,EAAQkB,EAAOJ,G4Dp9QlE,GAAOsuB,GAAMpvB,EAAe,8BAE5B,IAAM82B,GAAW,WA+GhB,QA/GKA,KAEG11B,KAAA21B,UAAmB,GAAI3H,EAGvBhuB,MAAA41B,UAAmB,CACnB51B,MAAA+O,QAAiB,CACjB/O,MAAAgP,QAAiB,CACjBhP,MAAA61B,SAAkB,CAClB71B,MAAA81B,SAAkB,EAK1B30B,OAAAC,eAAWs0B,EAAAn1B,UAAA,W5Dm9QJc,I4Dn9QP,WAEC,MAAOrB,MAAK61B,U5Do9QNl0B,I4Dj9QP,SAAmBC,GAElB,GAAIA,GAAS5B,KAAK61B,SACjB,MAED71B,MAAK61B,SAAWj0B,CAChB5B,MAAK+1B,eAAiB,M5Di9QhBx0B,WAAY,KACZC,aAAc,M4D58QrBL,QAAAC,eAAWs0B,EAAAn1B,UAAA,W5Dk9QJc,I4Dl9QP,WAEC,MAAOrB,MAAK81B,U5Dm9QNn0B,I4Dh9QP,SAAmBC,GAElB,GAAIA,GAAS5B,KAAK81B,SACjB,MAED91B,MAAK81B,SAAWl0B,CAChB5B,MAAK+1B,eAAiB,M5Dg9QhBx0B,WAAY,KACZC,aAAc,M4D18QrBL,QAAAC,eAAWs0B,EAAAn1B,UAAA,Y5Dg9QJc,I4Dh9QP,WAEC,MAAOrB,MAAK41B,W5Di9QNj0B,I4D98QP,SAAoBC,GAEnB,GAAIA,GAAS5B,KAAK41B,UACjB,MAED51B,MAAK41B,UAAYh0B,CAEjB5B,MAAK+1B,eAAiB,M5D68QhBx0B,WAAY,KACZC,aAAc,M4Dx8QrBL,QAAAC,eAAWs0B,EAAAn1B,UAAA,U5D88QJc,I4D98QP,WAEC,MAAOrB,MAAK+O,S5D+8QNpN,I4D58QP,SAAkBC,GAEjB,GAAIA,GAAS5B,KAAK+O,QACjB,MAED/O,MAAK+O,QAAUnN,CAEf5B,MAAK+1B,eAAiB,M5D28QhBx0B,WAAY,KACZC,aAAc,M4Dt8QrBL,QAAAC,eAAWs0B,EAAAn1B,UAAA,U5D48QJc,I4D58QP,WAEC,MAAOrB,MAAKgP,S5D68QNrN,I4D18QP,SAAkBC,GAEjB,GAAIA,GAAS5B,KAAKgP,QACjB,MAEDhP,MAAKgP,QAAUpN,CAEf5B,MAAK+1B,eAAiB,M5Dy8QhBx0B,WAAY,KACZC,aAAc,M4Dp8QrBL,QAAAC,eAAWs0B,EAAAn1B,UAAA,U5D08QJc,I4D18QP,WAEC,GAAIrB,KAAK+1B,eACR/1B,KAAKg2B,gBAEN,OAAOh2B,MAAK21B,W5D08QNp0B,WAAY,KACZC,aAAc,M4Dh8Qbk0B,GAAAn1B,UAAAy1B,eAAR,WAECh2B,KAAK21B,UAAUzK,UAEf,IAAIlrB,KAAK41B,WAAa,EACrB51B,KAAK21B,UAAU5G,OAAO/uB,KAAK41B,UAE5B,IAAI51B,KAAK+O,SAAW,GAAK/O,KAAKgP,SAAW,EACxChP,KAAK21B,UAAUrlB,MAAMtQ,KAAK+O,QAAS/O,KAAKgP,QAEzChP,MAAK21B,UAAUxG,UAAUnvB,KAAK61B,SAAU71B,KAAK81B,SAE7C91B,MAAK+1B,eAAiB,MAExB,OAAAL,KAEqB51B,GAAAJ,QAAZg2B,I5Dk8QN3H,8BAA8B,gCAAgClM,iCAAiC,SAASjjB,EAAQkB,EAAOJ,GA2B1H,G6D5kRMye,GAAQ,WA8Fb,QA9FKA,GA8FO1V,EAAcC,EAAc2V,EAAclJ,GAA1C,GAAA1M,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA2V,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAlJ,QAAA,GAAY,CAAZA,EAAA,EAErDnV,KAAKyI,EAAIA,CACTzI,MAAK0I,EAAIA,CACT1I,MAAKqe,EAAIA,CACTre,MAAKmV,EAAIA,EAjCVhU,OAAAC,eAAW+c,EAAA5d,UAAA,U7DuiRJc,I6DviRP,WAEC,MAAOyI,MAAK2gB,KAAKzqB,KAAKi2B,gB7DwiRhB10B,WAAY,KACZC,aAAc,M6D/hRrBL,QAAAC,eAAW+c,EAAA5d,UAAA,iB7DyiRJc,I6DziRP,WAEC,MAAOrB,MAAKyI,EAAEzI,KAAKyI,EAAIzI,KAAK0I,EAAE1I,KAAK0I,EAAI1I,KAAKqe,EAAEre,KAAKqe,G7D0iR7C9c,WAAY,KACZC,aAAc,M6DvgRd2c,GAAA5d,UAAA8wB,IAAP,SAAWjyB,GAEV,MAAO,IAAI+e,GAASne,KAAKyI,EAAIrJ,EAAEqJ,EAAGzI,KAAK0I,EAAItJ,EAAEsJ,EAAG1I,KAAKqe,EAAIjf,EAAEif,EAAGre,KAAKmV,EAAI/V,EAAE+V,GAoB5DgJ,GAAA+X,aAAd,SAA2B92B,EAAYc,GAEtC,MAAO4J,MAAK8gB,KAAKxrB,EAAEqmB,WAAWvlB,IAAId,EAAEQ,OAAOM,EAAEN,SAUvCue,GAAA5d,UAAA+B,MAAP,WAEC,MAAO,IAAI6b,GAASne,KAAKyI,EAAGzI,KAAK0I,EAAG1I,KAAKqe,EAAGre,KAAKmV,GAS3CgJ,GAAA5d,UAAAue,SAAP,SAAgBqX,GAEfn2B,KAAKyI,EAAI0tB,EAAI1tB,CACbzI,MAAK0I,EAAIytB,EAAIztB,CACb1I,MAAKqe,EAAI8X,EAAI9X,CACbre,MAAKmV,EAAIghB,EAAIhhB,EAoBPgJ,GAAA5d,UAAAilB,aAAP,SAAoBpmB,GAEnB,MAAO,IAAI+e,GAASne,KAAK0I,EAAEtJ,EAAEif,EAAIre,KAAKqe,EAAEjf,EAAEsJ,EAAG1I,KAAKqe,EAAEjf,EAAEqJ,EAAIzI,KAAKyI,EAAErJ,EAAEif,EAAGre,KAAKyI,EAAErJ,EAAEsJ,EAAI1I,KAAK0I,EAAEtJ,EAAEqJ,EAAG,GAczF0V,GAAA5d,UAAA61B,YAAP,SAAmBh3B,GAElBY,KAAKyI,GAAKrJ,EAAEqJ,CACZzI,MAAK0I,GAAKtJ,EAAEsJ,CACZ1I,MAAKqe,GAAKjf,EAAEif,EAaNF,GAAAyS,SAAP,SAAgBa,EAAcC,GAE7B,GAAIjpB,GAAYgpB,EAAIhpB,EAAIipB,EAAIjpB,CAC5B,IAAIC,GAAY+oB,EAAI/oB,EAAIgpB,EAAIhpB,CAC5B,IAAI2V,GAAYoT,EAAIpT,EAAIqT,EAAIrT,CAC5B,OAAOvU,MAAK2gB,KAAKhiB,EAAEA,EAAIC,EAAEA,EAAI2V,EAAEA,GA8BzBF,GAAA5d,UAAAklB,WAAP,SAAkBrmB,GAEjB,MAAOY,MAAKyI,EAAErJ,EAAEqJ,EAAIzI,KAAK0I,EAAEtJ,EAAEsJ,EAAI1I,KAAKqe,EAAEjf,EAAEif,EAsBpCF,GAAA5d,UAAAye,OAAP,SAAcC,EAAoBoX,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,MAEjC,MAAQr2B,MAAKyI,GAAKwW,EAAUxW,GAAKzI,KAAK0I,GAAKuW,EAAUvW,GAAK1I,KAAKqe,GAAKY,EAAUZ,KAAOgY,GAAWr2B,KAAKmV,GAAK8J,EAAU9J,GAa9GgJ,GAAA5d,UAAA+1B,YAAP,SAAmBl3B,GAElBY,KAAKyI,GAAKrJ,EAAEqJ,CACZzI,MAAK0I,GAAKtJ,EAAEsJ,CACZ1I,MAAKqe,GAAKjf,EAAEif,EAoCNF,GAAA5d,UAAAg2B,WAAP,SAAkBtX,EAAoBuX,EAAkBH,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEvD,MAASvsB,MAAK6hB,IAAI3rB,KAAKyI,EAAIwW,EAAUxW,GAAK+tB,GAAe1sB,KAAK6hB,IAAI3rB,KAAK0I,EAAIuW,EAAUvW,GAAK8tB,GAAe1sB,KAAK6hB,IAAI3rB,KAAKqe,EAAIY,EAAUZ,GAAKmY,KAAgBH,GAAWvsB,KAAK6hB,IAAI3rB,KAAKmV,EAAI8J,EAAU9J,GAAKqhB,GAShMrY,GAAA5d,UAAAk2B,OAAP,WAECz2B,KAAKyI,GAAKzI,KAAKyI,CACfzI,MAAK0I,GAAK1I,KAAK0I,CACf1I,MAAKqe,GAAKre,KAAKqe,EAiBTF,GAAA5d,UAAAgkB,UAAP,SAAiBxR,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhB,GAAI/S,KAAKJ,QAAU,EAAG,CACrB,GAAI2xB,GAAYxe,EAAU/S,KAAKJ,MAC/BI,MAAKyI,GAAK8oB,CACVvxB,MAAK0I,GAAK6oB,CACVvxB,MAAKqe,GAAKkT,CACV,SAgBKpT,GAAA5d,UAAAm2B,QAAP,WAEC12B,KAAKyI,GAAKzI,KAAKmV,CACfnV,MAAK0I,GAAK1I,KAAKmV,CACfnV,MAAKqe,GAAKre,KAAKmV,EAcTgJ,GAAA5d,UAAAo2B,QAAP,SAAe13B,GAEde,KAAKyI,GAAKxJ,CACVe,MAAK0I,GAAKzJ,CACVe,MAAKqe,GAAKpf,EAUJkf,GAAA5d,UAAA4gB,MAAP,SAAaC,EAAWC,EAAWC,GAElCthB,KAAKyI,EAAI2Y,CACTphB,MAAK0I,EAAI2Y,CACTrhB,MAAKqe,EAAIiD,EAiBHnD,GAAA5d,UAAAixB,SAAP,SAAgBpyB,GAEf,MAAO,IAAI+e,GAASne,KAAKyI,EAAIrJ,EAAEqJ,EAAGzI,KAAK0I,EAAItJ,EAAEsJ,EAAG1I,KAAKqe,EAAIjf,EAAEif,GAOrDF,GAAA5d,UAAAmhB,SAAP,WAEC,MAAO,iBAAmB1hB,KAAKyI,EAAI,OAASzI,KAAK0I,EAAI,MAAQ1I,KAAKqe,EAAI,OAASre,KAAKmV,EAAI,IA/b3EgJ,GAAAyY,OAAkB,GAAIzY,GAAS,EAAG,EAAG,EAKrCA,GAAA0Y,OAAkB,GAAI1Y,GAAS,EAAG,EAAG,EAKrCA,GAAA2Y,OAAkB,GAAI3Y,GAAS,EAAG,EAAG,EAubpD,OAAAA,KAEAre,GAAkBJ,QAATye,O7DmgRHtZ,qCAAqC,SAASjG,EAAQkB,EAAOJ,GACnE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Dx+RtB,IAAOiV,GAAmB1W,EAAY,6CACtC,IAAOob,GAAUpb,EAAc,oCAC/B,IAAOic,GAAejc,EAAa,yCAEnC,IAAM4B,GAAS,SAAAE,GAASX,EAAlBS,EAASE,EAYd,SAZKF,GAYOgZ,GAAA,GAAAA,QAAA,GAAkB,CAAlBA,EAAA,KAEX9Y,EAAAf,KAAAK,KAEAA,MAAK+2B,IAAMv2B,EAAUw2B,UAErB,IAAIxd,GAAQ,KACXA,EAAO,MAERxZ,MAAKqZ,MAAQG,CACbxZ,MAAKi3B,cAAgBzd,CAErBxZ,MAAKk3B,iBAMN/1B,OAAAC,eAAWZ,EAAAD,UAAA,a9D29RJc,I8D39RP,WAEC,KAAM,IAAIiU,I9D49RJ/T,WAAY,KACZC,aAAc,M8Dr9RrBL,QAAAC,eAAWZ,EAAAD,UAAA,gB9D69RJc,I8D79RP,WAEC,MAAOrB,MAAKi3B,e9D89RN11B,WAAY,KACZC,aAAc,M8Dz9RrBL,QAAAC,eAAWZ,EAAAD,UAAA,M9D+9RJc,I8D/9RP,WAEC,MAAOrB,MAAK+2B,K9Dg+RNx1B,WAAY,KACZC,aAAc,M8D99RrBL,QAAAC,eAAWZ,EAAAD,UAAA,Q9Di+RJc,I8Dj+RP,WAEC,MAAOrB,MAAKqZ,O9Dk+RN1X,I8D/9RP,SAAgB4c,GAEf,GAAI4Y,EAEJA,GAAOn3B,KAAKqZ,KACZrZ,MAAKqZ,MAAQkF,CAEb,IAAIve,KAAKqZ,OAAS,KACjBrZ,KAAKqZ,MAAQ,MAEdrZ,MAAKk3B,gBAGLl3B,MAAKqR,cAAc,GAAI2I,GAAWA,EAAWQ,aAAuBxa,KAAMm3B,K9D49RpE51B,WAAY,KACZC,aAAc,M8Dz9RdhB,GAAAD,UAAA8B,QAAP,WAEC,KAAM,IAAIiT,GAGXnU,QAAAC,eAAWZ,EAAAD,UAAA,kB9D09RJc,I8D19RP,WAEC,MAAOrB,MAAKo3B,Y9D29RN71B,WAAY,KACZC,aAAc,M8Dz9RrBL,QAAAC,eAAWZ,EAAAD,UAAA,iB9D49RJc,I8D59RP,WAEC,MAAOrB,MAAKq3B,Y9D69RN91B,WAAY,KACZC,aAAc,M8D39RdhB,GAAAD,UAAA+2B,gBAAP,SAAuB9d,EAAa+d,GAEnC,MAAQv3B,MAAKqZ,OAASG,KAAU+d,GAAMv3B,KAAKo3B,YAAcG,GAInD/2B,GAAAD,UAAAi3B,QAAP,SAAeC,GAEd,MAAOz3B,MAAKsB,WAAam2B,EAAWn2B,UAG9Bd,GAAAD,UAAAm3B,eAAP,SAAsBle,EAAa+d,EAAkBI,GAAlB,GAAAJ,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAI,QAAA,GAA+B,CAA/BA,EAAA,KAGpD33B,KAAKqZ,MAAQG,EAAMA,EAAO,MAC1BxZ,MAAKo3B,WAAaG,EAAIA,EAAK/2B,EAAUo3B,iBAErC,IAAID,EACH33B,KAAKi3B,cAAgBj3B,KAAKqZ,KAE3BrZ,MAAKk3B,iBAGE12B,GAAAD,UAAA22B,eAAR,WAECl3B,KAAKq3B,YAAer3B,KAAKo3B,WAAYp3B,KAAKqZ,OAjH7B7Y,GAAAw2B,SAAkB,CAQlBx2B,GAAAo3B,kBAA2B,SA2G1C,OAAAp3B,IArHwBqa,EAuHL/a,GAAAJ,QAAVc,I9Dw9RN8V,6CAA6C,6CAA6CwD,oCAAoC,oCAAoCc,yCAAyC,2CAA2Cid,8CAA8C,SAASj5B,EAAQkB,EAAOJ,GAC/T,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+DxlStB,IAAOy3B,GAAoBl5B,EAAY,+CACvC,IAAOm5B,GAAWn5B,EAAc,sCAGhC,IAAOo5B,GAAkBp5B,EAAY,6CACrC,IAAOq5B,GAAgBr5B,EAAa,2CAEpC,IAAO4B,GAAS5B,EAAc,oCAE9B,IAAOW,GAAKX,EAAe,+BAC3B,IAAOob,GAAUpb,EAAc,oCAC/B,IAAOwd,GAAYxd,EAAc,sCACjC,IAAO2d,GAAW3d,EAAc,qCAChC,IAAOic,GAAejc,EAAa,yCACnC,IAAOoe,GAAWpe,EAAc,qC/D4lShC,I+DplSMs5B,GAAkB,SAAAx3B,GAASX,EAA3Bm4B,EAAkBx3B,EA0BvB,SA1BKw3B,KAAN,GAAAC,GAAAn4B,IA4BEU,GAAAf,KAAAK,KAlBOA,MAAAo4B,wBAA6C,GAAIt3B,MAoBxDd,MAAK6c,QAAU,GAAI/b,MACnBd,MAAKq4B,iBAAmB,GAAIl3B,OAC5BnB,MAAKs4B,iBAAmB,GAAIx3B,MAE5Bd,MAAKu4B,iBAAmBN,EAAiBO,OAAOC,QAChDz4B,MAAK04B,mBAAqBV,EAAmBW,SAE7C34B,MAAK44B,uBAAyB,SAACxd,GAAqB,MAAA+c,GAAKU,cAAczd,GACvEpb,MAAK84B,iCAAmC,SAAC1d,GAAqB,MAAA+c,GAAKY,wBAAwB3d,GAC3Fpb,MAAKg5B,4BAA8B,SAAC5d,GAAsB,MAAA+c,GAAKc,mBAAmB7d,GAClFpb,MAAKk5B,4BAA8B,SAAC9d,GAAqB,MAAA+c,GAAKgB,mBAAmB/d,GACjFpb,MAAKo5B,yBAA2B,SAAChe,GAAqB,MAAA+c,GAAKkB,gBAAgBje,GAC3Epb,MAAKs5B,qBAAuB,SAACle,GAAuB,MAAA+c,GAAKoB,YAAYne,GACrEpb,MAAKw5B,sBAAwB,SAACpe,GAAsB,MAAA+c,GAAKsB,aAAare,IAYzD8c,EAAAwB,YAAd,SAA0BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,UAEzB,IAAKA,EACJA,EAAM,SAEP,KAAKzB,EAAmB0B,YAAYx5B,eAAeu5B,GAClDzB,EAAmB0B,YAAYD,GAAO,GAAIzB,EAE3C,OAAOA,GAAmB0B,YAAYD,GAOhCzB,GAAA33B,UAAAs5B,aAAP,SAAoBC,GAEnB/B,EAAY8B,aAAaC,GAMnB5B,GAAA33B,UAAAw5B,cAAP,SAAqBC,GAEpBjC,EAAYgC,cAAcC,GAa3B74B,QAAAC,eAAW82B,EAAA33B,UAAA,oB/DujSJc,I+DvjSP,WAEC,MAAOrB,MAAKi6B,W/DwjSNt4B,I+DrjSP,SAA4B4c,GAG3B,IAAKA,EACJ,KAAM,IAAIhf,GAAM,6EAEjBS,MAAKi6B,UAAY1b,EAAIka,U/DojSfl3B,WAAY,KACZC,aAAc,M+DriSrBL,QAAAC,eAAW82B,EAAA33B,UAAA,sB/DojSJc,I+DpjSP,WAEC,MAAOrB,MAAKk6B,qB/DqjSNv4B,I+DljSP,SAA8B4c,GAE7Bve,KAAKk6B,oBAAsB3b,G/DmjSrBhd,WAAY,KACZC,aAAc,M+DniSd02B,GAAA33B,UAAA45B,eAAP,SAAsBC,EAA+BC,EAA+BC,GAA9D,GAAAF,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,KAEnF,MAAO,IAAIxC,GAAqB93B,KAAK6c,QAASud,EAAiBC,EAAiBC,GAY1EpC,GAAA33B,UAAAg6B,KAAP,SAAYC,EAAgBC,EAAmClD,EAAkBmD,GAArD,GAAAD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAlD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAmD,QAAA,GAAwB,CAAxBA,EAAA,KAEhF,GAAIC,GAAqB,GAAI5C,EAE7B,KAAK/3B,KAAKs4B,iBACTt4B,KAAKs4B,iBAAmB,GAAIx3B,MAE7Bd,MAAKs4B,iBAAiB10B,KAAK+2B,EAE3BA,GAAO3f,iBAAiBuB,EAAYO,kBAAmB9c,KAAKg5B,4BAC5D2B,GAAO3f,iBAAiBhB,EAAWU,mBAAoB1a,KAAKk5B,4BAC5DyB,GAAO3f,iBAAiBhB,EAAWO,eAAgBva,KAAKo5B,yBAGxDuB,GAAOC,kBAAkB56B,KAAKs5B,qBAC9BqB,GAAOE,uBAAuB76B,KAAKw5B,sBAEnC,OAAOmB,GAAOJ,KAAKC,EAAKC,EAASlD,EAAImD,GAY/BxC,GAAA33B,UAAAu6B,SAAP,SAAgBvyB,EAAUkyB,EAAmClD,EAAkBmD,GAArD,GAAAD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAlD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAmD,QAAA,GAAwB,CAAxBA,EAAA,KAE9E,GAAIC,GAAqB,GAAI5C,EAE7B,KAAK/3B,KAAKs4B,iBACTt4B,KAAKs4B,iBAAmB,GAAIx3B,MAE7Bd,MAAKs4B,iBAAiB10B,KAAK+2B,EAE3BA,GAAO3f,iBAAiBuB,EAAYO,kBAAmB9c,KAAKg5B,4BAC5D2B,GAAO3f,iBAAiBhB,EAAWU,mBAAoB1a,KAAKk5B,4BAC5DyB,GAAO3f,iBAAiBhB,EAAWO,eAAgBva,KAAKo5B,yBAGxDuB,GAAOC,kBAAkB56B,KAAKs5B,qBAC9BqB,GAAOE,uBAAuB76B,KAAKw5B,sBAEnC,OAAOmB,GAAOG,SAASvyB,EAAM,GAAIkyB,EAASlD,EAAImD,GAMxCxC,GAAA33B,UAAAw6B,SAAP,SAAgBvhB,EAAa+d,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,KAI5B,GAAIv3B,KAAKg7B,gBACRh7B,KAAKi7B,iBAEN,IAAI1D,GAAM,KACTA,EAAK/2B,EAAUo3B,iBAEhB,KAAK53B,KAAKq4B,iBAAiBj4B,eAAem3B,GACzC,MAAO,KAER,OAAOv3B,MAAKq4B,iBAAiBd,GAAI/d,GAS3B0e,GAAA33B,UAAA26B,SAAP,SAAgBhhB,GAEf,GAAIqd,EACJ,IAAI4D,EAGJ,IAAIn7B,KAAK6c,QAAQ9Y,QAAQmW,IAAU,EAClC,MAEDihB,GAAMn7B,KAAK+6B,SAAS7gB,EAAMV,KAAMU,EAAMkhB,eACtC7D,GAAKrd,EAAMkhB,gBAAkB56B,EAAUo3B,iBAEvC,IAAIuD,GAAO,KACVn7B,KAAKi6B,UAAUoB,gBAAgBnhB,EAAOihB,EAAKn7B,KAAKq4B,iBAAiBd,GAAKv3B,KAAKk6B,oBAM5El6B,MAAK6c,QAAQjZ,KAAKsW,EAElB,KAAKla,KAAKq4B,iBAAiBj4B,eAAem3B,GACzCv3B,KAAKq4B,iBAAiBd,GAAM,GAAIp2B,OAEjCnB,MAAKq4B,iBAAiBd,GAAIrd,EAAMV,MAAQU,CAExCA,GAAMc,iBAAiBhB,EAAWQ,aAAcxa,KAAK44B,uBACrD1e,GAAMc,iBAAiBhB,EAAWS,wBAAyBza,KAAK84B,kCAW1DZ,GAAA33B,UAAA+6B,YAAP,SAAmBphB,EAAc7X,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhC,GAAIk5B,EAEJv7B,MAAKw7B,oBAAoBthB,EAEzBA,GAAMiB,oBAAoBnB,EAAWQ,aAAcxa,KAAK44B,uBACxD1e,GAAMiB,oBAAoBnB,EAAWS,wBAAyBza,KAAK84B,iCAEnEyC,GAAMv7B,KAAK6c,QAAQ9Y,QAAQmW,EAE3B,IAAIqhB,GAAO,EACVv7B,KAAK6c,QAAQ/Y,OAAOy3B,EAAK,EAE1B,IAAIl5B,EACH6X,EAAM7X,UAYD61B,GAAA33B,UAAAk7B,kBAAP,SAAyBjiB,EAAa+d,EAAkBl1B,GAAlB,GAAAk1B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAl1B,QAAA,GAAsB,CAAtBA,EAAA,KAGvD,GAAI6X,GAAela,KAAK+6B,SAASvhB,EAAM+d,EAEvC,IAAIrd,EACHla,KAAKs7B,YAAYphB,EAAO7X,EAEzB,OAAO6X,GASDge,GAAA33B,UAAAm7B,gBAAP,SAAuBr5B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEtB,GAAIA,EAAS,CACZ,GAAI6X,EAEJ,KAAK,GAAI0L,GAAW,EAAGA,EAAI5lB,KAAK6c,QAAQjd,OAAQgmB,IAAK,CACpD1L,EAAQla,KAAK6c,QAAS+I,EACtB1L,GAAM7X,WAQRrC,KAAK6c,QAAQjd,OAAS,CACtBI,MAAKi7B,kBAaC/C,GAAA33B,UAAAo7B,sBAAP,SAA6BpE,EAAkBl1B,GAAlB,GAAAk1B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAl1B,QAAA,GAAsB,CAAtBA,EAAA,KAE9C,GAAIk5B,GAAa,CACjB,IAAIrhB,EACJ,IAAI0hB,EAIJA,GAAa57B,KAAK6c,QAAQgK,QAC1B7mB,MAAK6c,QAAQjd,OAAS,CAEtB,IAAI23B,GAAM,KACTA,EAAK/2B,EAAUo3B,iBAEhB,KAAK,GAAI33B,GAAW,EAAGA,EAAI27B,EAAWh8B,OAAQK,IAAK,CAClDia,EAAQ0hB,EAAW37B,EAInB,IAAIia,EAAMkhB,gBAAkB7D,EAAI,CAC/B,GAAIl1B,EACH6X,EAAM7X,SAMPrC,MAAKw7B,oBAAoBthB,EAAO,WAC1B,CACNla,KAAK6c,QAAQ0e,KAASrhB,GAwBxB,GAAIla,KAAKq4B,iBAAiBj4B,eAAem3B,SACjCv3B,MAAKq4B,iBAAiBd,GAGvBW,GAAA33B,UAAAi7B,oBAAR,SAA4BthB,EAAc2hB,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEzC,GAAI77B,KAAKg7B,gBACRh7B,KAAKi7B,iBAEN,IAAIj7B,KAAKq4B,iBAAiBj4B,eAAe8Z,EAAMkhB,gBAAiB,CAC/D,GAAIp7B,KAAKq4B,iBAAiBne,EAAMkhB,gBAAgBh7B,eAAe8Z,EAAMV,YAC7DxZ,MAAKq4B,iBAAiBne,EAAMkhB,gBAAgBlhB,EAAMV,KAE1D,IAAIqiB,EAA0B,CAE7B,GAAIlC,EACJ,IAAImC,GAAgB,IAEpB,KAAKnC,IAAO35B,MAAKq4B,iBAAiBne,EAAMkhB,gBAAiB,CACxDU,EAAQ,KACR,OAGD,GAAIA,QACI97B,MAAKq4B,iBAAiBne,EAAMkhB,kBAKhClD,GAAA33B,UAAAw7B,uBAAP,WAEC,GAAI18B,EAEJ,KAAKW,KAAKs4B,iBACTt4B,KAAKs4B,iBAAmB,GAAIx3B,MAE7B,IAAIlB,GAAgBI,KAAKs4B,iBAAiB14B,MAE1C,KAAKP,EAAI,EAAGA,EAAIO,EAAQP,IACvBW,KAAKg8B,mBAAmBh8B,KAAKs4B,iBAAiBj5B,GAE/CW,MAAKs4B,iBAAmB,KAGjBJ,GAAA33B,UAAA06B,gBAAR,WAEC,GAAI/gB,EAEJla,MAAKq4B,mBAEL,IAAI54B,GAAWO,KAAK6c,QAAQjd,MAE5B,KAAK,GAAIgmB,GAAW,EAAGA,EAAInmB,EAAGmmB,IAAK,CAClC1L,EAAQla,KAAK6c,QAAQ+I,EAErB,KAAK5lB,KAAKq4B,iBAAiBj4B,eAAe8Z,EAAMkhB,gBAC/Cp7B,KAAKq4B,iBAAiBne,EAAMkhB,kBAE7Bp7B,MAAKq4B,iBAAiBne,EAAMkhB,gBAAgBlhB,EAAMV,MAAQU,EAI3Dla,KAAKg7B,gBAAkB,MAOhB9C,GAAA33B,UAAAg5B,YAAR,SAAoBne,GAEnB,GAAIpb,KAAKmR,iBAAiBiL,EAAaC,UAAW,CACjDrc,KAAKqR,cAAc+J,EACnB,OAAO,UACD,CACN,MAAO,QAOD8c,GAAA33B,UAAAk5B,aAAR,SAAqBre,GAEpB,GAAIpb,KAAKmR,iBAAiB6L,EAAYG,aAAc,CACnDnd,KAAKqR,cAAc+J,EACnB,OAAO,UACD,CACN,MAAO,QAID8c,GAAA33B,UAAA84B,gBAAR,SAAwBje,GAGvB,GAAIA,EAAMnB,MAAQD,EAAWO,eAC5Bva,KAAKk7B,SAAS9f,EAAMlB,MAErBla,MAAKqR,cAAc+J,GAIZ8c,GAAA33B,UAAA44B,mBAAR,SAA2B/d,GAE1Bpb,KAAKqR,cAAc+J,GAMZ8c,GAAA33B,UAAA04B,mBAAR,SAA2B7d,GAA3B,GAAA+c,GAAAn4B,IAEC,IAAI26B,GAAmCvf,EAAMN,MAE7C9a,MAAKqR,cAAc+J,EAEnB,IAAI5S,GAAexI,KAAKs4B,iBAAiBv0B,QAAQ42B,EACjD36B,MAAKs4B,iBAAiBx0B,OAAO0E,EAAO,EAGpCxI,MAAKo4B,wBAAwBx0B,KAAK+2B,EAClC36B,MAAKi8B,cAAgBC,WAAW,WAAO/D,EAAKgE,oBAAqB,KAG1DjE,GAAA33B,UAAA47B,iBAAR,WAEC,GAAIxB,EAEJ,OAAO36B,KAAKo4B,wBAAwBx4B,OAAS,EAAG,CAC/C+6B,EAAS36B,KAAKo4B,wBAAwBgE,KACtCp8B,MAAKg8B,mBAAmBrB,GAGzB0B,aAAar8B,KAAKi8B,cAClBj8B,MAAKi8B,cAAgB,KAId/D,GAAA33B,UAAAy7B,mBAAR,SAA2BrB,GAE1BA,EAAOxf,oBAAoBoB,EAAYO,kBAAmB9c,KAAKg5B,4BAC/D2B,GAAOxf,oBAAoBnB,EAAWU,mBAAoB1a,KAAKk5B,4BAC/DyB,GAAOxf,oBAAoBnB,EAAWO,eAAgBva,KAAKo5B,yBAC3DuB,GAAO2B,OAmBApE,GAAA33B,UAAAs4B,cAAR,SAAsBzd,GAErB,GAAIlB,GAAyBkB,EAAMN,MACnC,IAAIqgB,GAAan7B,KAAK+6B,SAAS7gB,EAAMkhB,eAAgBlhB,EAAMV,KAE3D,IAAI2hB,GAAO,KAAM,CAChBn7B,KAAKi6B,UAAUoB,gBAAgBnhB,EAAOihB,EAAKn7B,KAAKq4B,iBAAiBne,EAAMkhB,gBAAiBp7B,KAAKk6B,yBACvF,CACN,GAAIqC,GAAcv8B,KAAKq4B,iBAAiBjd,EAAMlB,MAAMkhB,eAEpD,IAAImB,GAAQ,KACX,MAEDA,GAAKnhB,EAAMd,eAAiB,IAC5BiiB,GAAKnhB,EAAMlB,MAAMV,MAAQ4B,EAAMlB,OAIzBge,GAAA33B,UAAAw4B,wBAAR,SAAgC3d,GAE/Bpb,KAAKqR,cAAc+J,EAAM9Y,SAhkBZ41B,GAAA0B,YAAqB,GAAIz4B,OAkkBxC,OAAA+2B,IApkBiCrd,EAskBjC/a,GAA4BJ,QAAnBw4B,I/D49RNnf,+BAA+B,+BAA+Be,oCAAoC,oCAAoCc,yCAAyC,yCAAyCuB,sCAAsC,sCAAsCG,qCAAqC,qCAAqCS,qCAAqC,qCAAqClY,oCAAoC,oCAAoC23B,+CAA+C,+CAA+CC,sCAAsC,sCAAsCC,6CAA6C,6CAA6CC,2CAA2C,6CAA6CH,gDAAgD,SAAS59B,EAAQkB,EAAOJ,GgExjTv6B,GAAMo4B,GAAoB,WAQzB,QARKA,GAQOpb,EAAsB0d,EAAwBC,EAAwBC,GAEjFt6B,KAAK6c,QAAUH,CACf1c,MAAK48B,OAAOxC,EAAiBC,EAAiBC,GAG/Cn5B,OAAAC,eAAW02B,EAAAv3B,UAAA,gBhEijTJc,IgEjjTP,WAGC,MAASrB,MAAK68B,KAAO78B,KAAK88B,UAAUl9B,OAAUI,KAAK88B,UAAW98B,KAAK68B,MAAS,MhEkjTtEt7B,WAAY,KACZC,aAAc,MgEhjTrBL,QAAAC,eAAW02B,EAAAv3B,UAAA,ahEmjTJc,IgEnjTP,WAEC,MAAOrB,MAAK88B,UAAUl9B,QhEojThB2B,WAAY,KACZC,aAAc,MgEljTds2B,GAAAv3B,UAAAw8B,KAAP,WAEC,GAAIA,GAAc,IAElB,IAAI/8B,KAAK68B,KAAO78B,KAAK88B,UAAUl9B,OAC9Bm9B,EAAO/8B,KAAK88B,UAAU98B,KAAK68B,KAE5B78B,MAAK68B,MAEL,OAAOE,GAGDjF,GAAAv3B,UAAAy8B,MAAP,WAECh9B,KAAK68B,KAAO,EAGN/E,GAAAv3B,UAAA08B,SAAP,SAAgBz0B,GAEfxI,KAAK68B,KAAOr0B,EAGLsvB,GAAAv3B,UAAAq8B,OAAR,SAAexC,EAAwBC,EAAwBC,GAE9D,GAAIF,GAAmBC,EAAiB,CAEvC,GAAIkB,EACJ,IAAIrhB,EAGJqhB,GAAM,CACNv7B,MAAK88B,UAAY,GAAIh8B,MAErB,IAAIrB,GAAWO,KAAK6c,QAAQjd,MAE5B,KAAK,GAAIgmB,GAAW,EAAGA,EAAInmB,EAAGmmB,IAAK,CAElC1L,EAAiBla,KAAK6c,QAAQ+I,EAG9B,IAAIwU,GAAmBlgB,EAAM5Y,WAAa84B,EACzC,QAGD,IAAIC,GAAmBngB,EAAMkhB,gBAAkBf,EAC9C,QAGD,IAAIC,GAAc,OAASA,EAAWpgB,GACrC,QAEDla,MAAK88B,UAAUvB,KAASrhB,OAsBnB,CACNla,KAAK88B,UAAY98B,KAAK6c,SAGzB,OAAAib,KAEAh4B,GAA8BJ,QAArBo4B,OhE+gTHoF,wCAAwC,SAASt+B,EAAQkB,EAAOJ,GiExnTtE,GAAOw4B,GAAkBt5B,EAAY,6CAErC,IAAOm5B,GAAWn5B,EAAc,sCjE8nThC,IiElnTMu+B,GAAY,WAMjB,QANKA,MAoBSA,EAAAC,UAAd,SAAwBzD,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,UAEvB,MAAOzB,GAAmBwB,YAAYC,GAMzBwD,GAAAtD,aAAd,SAA2BC,GAE1B/B,EAAY8B,aAAaC,GAMZqD,GAAApD,cAAd,SAA4BC,GAE3BjC,EAAYgC,cAAcC,GAQ3B74B,QAAAC,eAAkB+7B,EAAA,oBjE2mTX97B,IiE3mTP,WAEC,MAAO87B,GAAaC,YAAY7E,kBjE4mT1B52B,IiEzmTP,SAAmC4c,GAElC4e,EAAaC,YAAY7E,iBAAmBha,GjE0mTtChd,WAAY,KACZC,aAAc,MiEnmTrBL,QAAAC,eAAkB+7B,EAAA,sBjE2mTX97B,IiE3mTP,WAEC,MAAO87B,GAAaC,YAAY1E,oBjE4mT1B/2B,IiEzmTP,SAAqC4c,GAEpC4e,EAAaC,YAAY1E,mBAAqBna,GjE0mTxChd,WAAY,KACZC,aAAc,MiEnmTP27B,GAAAhD,eAAd,SAA6BC,EAA+BC,EAA+BC,GAA9D,GAAAF,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,KAE1F,MAAO6C,GAAaC,YAAYjD,eAAeC,EAAiBC,EAAiBC,GAQpE6C,GAAA5C,KAAd,SAAmBC,EAAgBC,EAAmClD,EAAkBmD,GAArD,GAAAD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAlD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAmD,QAAA,GAAwB,CAAxBA,EAAA,KAEvF,MAAOyC,GAAaC,YAAY7C,KAAKC,EAAKC,EAASlD,EAAImD,GAQ1CyC,GAAArC,SAAd,SAAuBvyB,EAAUkyB,EAAmClD,EAAkBmD,GAArD,GAAAD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAlD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAmD,QAAA,GAAwB,CAAxBA,EAAA,KAErF,MAAOyC,GAAaC,YAAYtC,SAASvyB,EAAMkyB,EAASlD,EAAImD,GAG/CyC,GAAAE,SAAd,WAECF,EAAaC,YAAYrB,yBAQZoB,GAAApC,SAAd,SAAuBvhB,EAAa+d,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,KAEnC,MAAO4F,GAAaC,YAAYrC,SAASvhB,EAAM+d,GAMlC4F,GAAAniB,iBAAd,SAA+Bf,EAAagB,GAE3CkiB,EAAaC,YAAYpiB,iBAAiBf,EAAMgB,GAMnCkiB,GAAAhiB,oBAAd,SAAkClB,EAAagB,GAE9CkiB,EAAaC,YAAYjiB,oBAAoBlB,EAAMgB,GAsBtCkiB,GAAAjC,SAAd,SAAuBhhB,GAEtBijB,EAAaC,YAAYlC,SAAShhB,GAWrBijB,GAAA7B,YAAd,SAA0BphB,EAAc7X,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEvC86B,EAAaC,YAAY9B,YAAYphB,EAAO7X,GAY/B86B,GAAA1B,kBAAd,SAAgCjiB,EAAa+d,EAAkBl1B,GAAlB,GAAAk1B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAl1B,QAAA,GAAsB,CAAtBA,EAAA,KAE9D,MAAO86B,GAAaC,YAAY3B,kBAAkBjiB,EAAM+d,EAAIl1B,GAU/C86B,GAAAzB,gBAAd,SAA8Br5B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE7B86B,EAAaC,YAAY1B,gBAAgBr5B,GAQ5B86B,GAAAxB,sBAAd,SAAoCpE,EAAkBl1B,GAAlB,GAAAk1B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAl1B,QAAA,GAAsB,CAAtBA,EAAA,KAErD86B,EAAaC,YAAYzB,sBAAsBpE,EAAIl1B,GAErD,OAAA86B,KAEAr9B,GAAsBJ,QAAby9B,IjEomTNtF,6CAA6C,6CAA6C4E,sCAAsC,wCAAwCa,8CAA8C,SAAS1+B,EAAQkB,EAAOJ,GkEj0TjP,GAAM69B,GAAkB,WAsBvB,QAtBKA,GAsBOC,EAAoCC,GAApC,GAAAD,QAAA,GAAkC,CAAlCA,EAAA,KAAoC,GAAAC,QAAA,GAA+B,CAA/BA,EAAA,KAE/Cz9B,KAAK09B,qBAAuBF,CAC5Bx9B,MAAK29B,mBAAqBF,GAAqB,EAC/Cz9B,MAAK49B,qBACL59B,MAAK69B,gBACL79B,MAAK89B,cAAgBP,EAAmBQ,UAOzC58B,OAAAC,eAAWm8B,EAAAh9B,UAAA,uBlEqzTJc,IkErzTP,WAEC,MAAOrB,MAAK09B,sBlEszTN/7B,IkEnzTP,SAA+B4c,GAE9Bve,KAAK09B,qBAAuBnf,GlEozTtBhd,WAAY,KACZC,aAAc,MkE1yTrBL,QAAAC,eAAWm8B,EAAAh9B,UAAA,gBlEqzTJc,IkErzTP,WAEC,MAAOrB,MAAK89B,elEszTNn8B,IkEnzTP,SAAwBq8B,GAEvBh+B,KAAK89B,cAAgBE,GlEozTfz8B,WAAY,KACZC,aAAc,MkE9yTrBL,QAAAC,eAAWm8B,EAAAh9B,UAAA,qBlEqzTJc,IkErzTP,WAEC,MAAOrB,MAAK29B,oBlEszTNh8B,IkEnzTP,SAA6B4c,GAE5Bve,KAAK29B,mBAAqBpf,GlEozTpBhd,WAAY,KACZC,aAAc,MkE7yTrBL,QAAAC,eAAWm8B,EAAAh9B,UAAA,yBlEqzTJc,IkErzTP,WAEC,MAAOrB,MAAKi+B,kBlEszTNt8B,IkEnzTP,SAAiC4c,GAEhCve,KAAKi+B,iBAAmB1f,GlEozTlBhd,WAAY,KACZC,aAAc,MkE7yTrBL,QAAAC,eAAWm8B,EAAAh9B,UAAA,oBlEqzTJc,IkErzTP,WAEC,MAAOrB,MAAKk+B,mBlEszTNv8B,IkEnzTP,SAA4B4c,GAE3Bve,KAAKk+B,kBAAoB3f,GlEozTnBhd,WAAY,KACZC,aAAc,MkExyTd+7B,GAAAh9B,UAAA49B,OAAP,SAAcC,EAAoBC,GAEjCr+B,KAAK69B,cAAcO,GAAeC,EAU5Bd,GAAAh9B,UAAA+9B,aAAP,SAAoBF,EAAoB71B,GAEvCvI,KAAK49B,mBAAmBQ,GAAe71B,EAOjCg1B,GAAAh9B,UAAAg+B,gBAAP,SAAuB/hB,GAEtB,MAAOxc,MAAK49B,mBAAmBx9B,eAAeoc,GAOxC+gB,GAAAh9B,UAAAi+B,gBAAP,SAAuBhiB,GAEtB,MAAOxc,MAAK49B,mBAAmBphB,GAOzB+gB,GAAAh9B,UAAAk+B,mBAAP,SAA0BjiB,GAEzB,MAAOxc,MAAK69B,cAAcz9B,eAAeoc,GAOnC+gB,GAAAh9B,UAAAm+B,iBAAP,SAAwBN,GAEvB,MAAOp+B,MAAK69B,cAAcO,GArKbb,GAAAQ,UAAmB,CACnBR,GAAAoB,qBAA8B,CAC9BpB,GAAAqB,oBAA6B,CAqK5C,OAAArB,KAEAz9B,GAA4BJ,QAAnB69B,OlE8yTHsB,4CAA4C,SAASjgC,EAAQkB,EAAOJ,GAC1E,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmE79TtB,IAAOwa,GAAejc,EAAa,yCnE+nUnC,ImEv7TMkgC,GAAgB,SAAAp+B,GAASX,EAAzB++B,EAAgBp+B,EAIrB,SAJKo+B,GAIOnE,GAEXj6B,EAAAf,KAAAK,KAEAA,MAAK++B,SAAWpE,EAGVmE,EAAAv+B,UAAAya,iBAAP,SAAwBf,EAAagB,GAEpCjb,KAAK++B,SAAS/jB,iBAAiBf,EAAMgB,GAI/B6jB,GAAAv+B,UAAA4a,oBAAP,SAA2BlB,EAAagB,GAEvCjb,KAAK++B,SAAS5jB,oBAAoBlB,EAAMgB,GAGlC6jB,GAAAv+B,UAAA4Q,iBAAP,SAAwB8I,EAAagB,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAEpC,MAAOjb,MAAK++B,SAAS5tB,iBAAiB8I,EAAMgB,GAS9C,OAAA6jB,IAjC+BjkB,EAmC/B/a,GAA0BJ,QAAjBo/B,InEw6TNlkB,yCAAyC,2CAA2C6hB,uCAAuC,SAAS79B,EAAQkB,EAAOJ,GACtJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoExpUtB,IAAOy+B,GAAgBlgC,EAAa,2CACpC,IAAOogC,GAASpgC,EAAc,gCAC9B,IAAOqgC,GAAmBrgC,EAAY,0CAEtC,IAAOW,GAAKX,EAAe,+BAC3B,IAAOob,GAAUpb,EAAc,oCAC/B,IAAOmb,GAAKnb,EAAe,+BAC3B,IAAOic,GAAejc,EAAa,yCACnC,IAAOwd,GAAYxd,EAAc,sCACjC,IAAO2d,GAAW3d,EAAc,qCAChC,IAAOoe,GAAWpe,EAAc,qCAChC,IAAOsgC,GAAatgC,EAAa,wCACjC,IAAOugC,GAAevgC,EAAa,0CACnC,IAAOwgC,GAAkBxgC,EAAY,6CAErC,IAAOygC,GAAkBzgC,EAAY,6CACrC,IAAO0gC,GAAe1gC,EAAa,0CpE0sUnC,IoE3oUMm5B,GAAW,SAAAr3B,GAASX,EAApBg4B,EAAWr3B,EAoEhB,SApEKq3B,GAoEOiG,GApEb,GAAA7F,GAAAn4B,IAoEa,IAAAg+B,QAAA,GAAuB,CAAvBA,EAAA,EAEXt9B,EAAAf,KAAAK,KAEAA,MAAK89B,cAAgBE,CAErBh+B,MAAKu/B,OAAS,GAAIz+B,MAClBd,MAAKw/B,eAAiB,GAAI1+B,MAC1Bd,MAAKy/B,oBAAsB,GAAI3+B,MAE/Bd,MAAK0/B,gCAAkC,SAACtkB,GAAsB,MAAA+c,GAAKwH,uBAAuBvkB,GAC1Fpb,MAAK4/B,yBAA2B,SAACxkB,GAAsB,MAAA+c,GAAK0H,gBAAgBzkB,GAC5Epb,MAAKw5B,sBAAwB,SAACpe,GAAsB,MAAA+c,GAAKsB,aAAare,GACtEpb,MAAK8/B,wBAA0B,SAAC1kB,GAAgB,MAAA+c,GAAK4H,eAAe3kB,GACpEpb,MAAKs5B,qBAAuB,SAACle,GAAuB,MAAA+c,GAAKoB,YAAYne,GACrEpb,MAAKk5B,4BAA8B,SAAC9d,GAAqB,MAAA+c,GAAKgB,mBAAmB/d,GACjFpb,MAAKo5B,yBAA2B,SAAChe,GAAqB,MAAA+c,GAAKkB,gBAAgBje,IAhD9D2c,EAAA8B,aAAd,SAA2Ba,GAE1B,GAAI3C,EAAYiI,SAASj8B,QAAQ22B,GAAU,EAC1C3C,EAAYiI,SAASp8B,KAAK82B,GAYd3C,GAAAgC,cAAd,SAA4BkG,GAE3B,IAAK,GAAIra,GAAW,EAAGA,EAAIqa,EAAQrgC,OAAQgmB,IAC1CmS,EAAY8B,aAAaoG,EAASra,IAMpCzkB,QAAAC,eAAW22B,EAAAx3B,UAAA,kBpEmoUJc,IoEnoUP,WAEC,MAAOrB,MAAKkgC,iBpEooUN3+B,WAAY,KACZC,aAAc,MoEpmUdu2B,GAAAx3B,UAAAg6B,KAAP,SAAYC,EAAgBC,EAAmClD,EAAkBmD,GAArD,GAAAD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAlD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAmD,QAAA,GAAwB,CAAxBA,EAAA,KAEhF,IAAK16B,KAAKmgC,OAAQ,CACjBngC,KAAKmgC,OAAS,GAAIrB,GAAiB9+B,KAEnCA,MAAKogC,KAAO5F,EAAIhe,IAAMge,EAAIhe,IAAI6jB,QAAQ,MAAO,IAC7CrgC,MAAK8H,SAAW2yB,CAChBz6B,MAAKo3B,WAAaG,CAElBv3B,MAAKkgC,gBAAkB,GAAIb,GAAmB,GAAI7E,EAAK,KAAME,EAAQ,KACrE16B,MAAKsgC,mBAAmBtgC,KAAKkgC,gBAE7B,OAAOlgC,MAAKmgC,OAIb,MAAO,MAWDpI,GAAAx3B,UAAAu6B,SAAP,SAAgBvyB,EAAUqH,EAAW6qB,EAAmClD,EAAkBmD,GAArD,GAAAD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAlD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAmD,QAAA,GAAwB,CAAxBA,EAAA,KAEzF,IAAK16B,KAAKmgC,OAAQ,CACjBngC,KAAKmgC,OAAS,GAAIrB,GAAiB9+B,KAEnCA,MAAKogC,KAAOxwB,CACZ5P,MAAK8H,SAAW2yB,CAChBz6B,MAAKo3B,WAAaG,CAElBv3B,MAAKkgC,gBAAkB,GAAIb,GAAmBzvB,EAAI,KAAMrH,EAAMmyB,EAAQ,KACtE16B,MAAKsgC,mBAAmBtgC,KAAKkgC,gBAE7B,OAAOlgC,MAAKmgC,OAIb,MAAO,MAQApI,GAAAx3B,UAAAggC,aAAR,SAAqB7F,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAEpB,GAAI16B,KAAKwgC,mBAAmBC,aAAa7gC,OAAQ,CAEhD,GAAIm9B,GAA0B/8B,KAAKwgC,mBAAmBC,aAAarE,KAEnEp8B,MAAKu/B,OAAO37B,KAAK5D,KAAKwgC,mBACtBxgC,MAAKsgC,mBAAmBvD,OAElB,IAAI/8B,KAAKwgC,mBAAmB9F,QAAU16B,KAAKwgC,mBAAmB9F,OAAOgG,cAAe,CAE1F1gC,KAAKwgC,mBAAmB9F,OAAOiG,kCAC/B3gC,MAAKu/B,OAAOnD,UAEN,IAAIp8B,KAAKu/B,OAAO3/B,OAAQ,CAE9B,GAAIu3B,GAA0Bn3B,KAAKwgC,kBAEnCxgC,MAAKwgC,mBAAqBxgC,KAAKu/B,OAAOnD,KAEtC,IAAIjF,EAAKyJ,UACRzJ,EAAK0J,SAEN7gC,MAAKugC,aAAa7F,OAEZ,CACN16B,KAAKqR,cAAc,GAAIkL,GAAYA,EAAYO,kBAAmB9c,KAAKogC,KAAMpgC,KAAKkgC,gBAAgBxF,OAAOje,QAASzc,KAAKkgC,gBAAgBxjB,UAQjIqb,GAAAx3B,UAAA+/B,mBAAR,SAA2B3mB,GAE1B,GAAIpR,EAEJ,IAAIvI,KAAK8H,UAAY9H,KAAK8H,SAASk2B,cAAgB,EAClDh+B,KAAK89B,cAAgB99B,KAAK8H,SAASk2B,YAEpCh+B,MAAKwgC,mBAAqB7mB,CAE1BA,GAAWolB,SAAW,GAAIC,EAE1Bh/B,MAAK8gC,kBAAkBnnB,EAAWolB,SAGlCx2B,GAAOoR,EAAWpR,IAElB,IAAIvI,KAAK8H,UAAY6R,EAAWonB,SAAW/gC,KAAK8H,SAASy2B,gBAAgB5kB,EAAWonB,QAAQvkB,KAC3FjU,EAAOvI,KAAK8H,SAAS02B,gBAAgB7kB,EAAWonB,QAAQvkB,IAEzD,IAAIjU,EAAM,CACT,GAAIA,EAAKjI,cAAgB0gC,SACxBz4B,EAAO,GAAIA,EAEZoR,GAAWsnB,UAAU14B,EAErB,IAAIoR,EAAWunB,kBAAmB,CAGjCvnB,EAAWknB,SAGX7gC,MAAKugC,mBAEC,CACNvgC,KAAKmhC,gBAAgBxnB,QAGhB,CAENA,EAAWonB,QAAQvkB,IAAMxc,KAAKohC,qBAAqBznB,EAEnD,IAAIA,EAAWunB,kBAAmB,CAEjCvnB,EAAWolB,SAASsC,WAAapC,EAAoBqC,WAC/C,CAEN,IAAK3nB,EAAW+gB,OACf/gB,EAAW4nB,YAAYvhC,KAAKwhC,oBAAoB7nB,EAAWonB,QAAQvkB,KAEpE,IAAI7C,EAAW+gB,OAAQ,CACtB/gB,EAAWolB,SAASsC,WAAa1nB,EAAW+gB,OAAO2G,eAC7C,CAIN1nB,EAAWolB,SAASsC,WAAapC,EAAoBqC,QAIvD3nB,EAAWolB,SAASxE,KAAK5gB,EAAWonB,UAI9BhJ,GAAAx3B,UAAAkhC,QAAR,SAAgBC,EAAaC,GAE5B,GAAIA,EAAIC,OAAO,IAAM,IACpBD,EAAMA,EAAIE,OAAO,EAElB,IAAIH,EAAK9hC,QAAU,EAClB,MAAO+hC,EAER,IAAID,EAAKE,OAAOF,EAAK9hC,OAAS,IAAM,IACnC8hC,EAAOA,EAAKG,OAAO,EAAGH,EAAK9hC,OAAS,EAErC,OAAO8hC,GAAK7a,OAAO,IAAK8a,GAIjB5J,GAAAx3B,UAAA6gC,qBAAR,SAA6BznB,GAE5B,GAAImoB,EACJ,IAAIJ,EACJ,IAAIllB,GAAa7C,EAAWonB,QAAQvkB,GAGpC,IAAIxc,KAAK8H,UAAY9H,KAAK8H,SAAS22B,mBAAmBjiB,GACrD,MAAOxc,MAAK8H,SAAS42B,iBAAiBliB,EAKvC,IAAIA,GAAOxc,KAAKogC,KACf,MAAO5jB,EAKRslB,GAAY,GAAIC,QAAO,sBAEvB,IAAIvlB,EAAIolB,OAAO,IAAM,IAAK,CACzB,GAAI5hC,KAAK8H,UAAY9H,KAAK8H,SAASk6B,sBAClC,MAAOhiC,MAAKyhC,QAAQzhC,KAAK8H,SAAS21B,kBAAmBjhB,OACrD,OAAOA,OACF,IAAIslB,EAAUG,KAAKzlB,GAAM,CAG/B,GAAIxc,KAAK8H,UAAY9H,KAAK8H,SAASo6B,iBAAkB,CAEpD,GAAIC,GAAyB3lB,EAAI6jB,QAASyB,EAAY,GACtD,OAAO9hC,MAAKyhC,QAAQzhC,KAAK8H,SAAS21B,kBAA4B0E,IAMhE,GAAIniC,KAAK8H,UAAY9H,KAAK8H,SAAS21B,kBAAmB,CACrDiE,EAAO1hC,KAAK8H,SAAS21B,iBACrB,OAAOz9B,MAAKyhC,QAAQC,EAAMllB,OACpB,CACNklB,EAAO1hC,KAAKogC,KAAKgC,UAAU,EAAGpiC,KAAKogC,KAAKiC,YAAY,KAAO,EAC3D,OAAOriC,MAAKyhC,QAAQC,EAAMllB,IAIpBub,GAAAx3B,UAAA+hC,2BAAR,WAEC,IAAKtiC,KAAKwgC,mBACT,MAED,IAAI+B,GAAqBviC,KAAKwgC,mBAAmB9F,OAAO+F,YACxD,IAAIphC,GAAU8C,EAAaogC,EAAmB3iC,MAE9C,KAAKP,EAAI,EAAGA,EAAI8C,EAAK9C,IACpBW,KAAKwgC,mBAAmBC,aAAaphC,GAAKkjC,EAAmBljC,EAK9DkjC,GAAmB3iC,OAAS,CAE5BI,MAAKu/B,OAAO37B,KAAK5D,KAAKwgC,mBAEtBxgC;KAAKugC,eAGExI,GAAAx3B,UAAAiiC,0BAAR,WAECxiC,KAAKwgC,mBAAmBI,UAAY,IAIpC,IAAI5gC,KAAKwgC,mBAAmB9F,QAAU16B,KAAKwgC,mBAAmB9F,OAAO+F,aAAa7gC,UAAYI,KAAK8H,UAAY9H,KAAK8H,SAAS01B,qBAC5Hx9B,KAAKsiC,iCAELtiC,MAAKugC,eAOCxI,GAAAx3B,UAAAg5B,YAAR,SAAoBne,GAEnB,GAAIqnB,EACJ,IAAIC,GAAwB1iC,KAAKwgC,oBAAsBxgC,KAAKkgC,eAC5D,IAAIvF,GAA+Bvf,EAAMN,MAEzC9a,MAAK2iC,qBAAqBhI,EAE1B,IAAI36B,KAAKmR,iBAAiBiL,EAAaC,UAAY,CAClDrc,KAAKqR,cAAc+J,EACnBqnB,GAAU,SACJ,CpE2jUG,GoEzjULpjC,GAAU8C,EAAanC,KAAKw/B,eAAe5/B,MAC/C,KAAKP,EAAI,EAAGA,EAAI8C,EAAK9C,IACpB,IAAKojC,EACJA,EAAoBziC,KAAKw/B,eAAengC,GAAG+b,GAG9C,GAAIqnB,EAAS,CAGZ,GAAIC,EAAc,CAEjB1iC,KAAKwgC,mBAAmBoC,gBACxB5iC,MAAKugC,mBAEC,CAINvgC,KAAKqC,SACL,aAEK,CAIN,KAAM,IAAI9C,IAQJw4B,GAAAx3B,UAAAk5B,aAAR,SAAqBre,GAEpB,GAAIqnB,EAEJ,IAAIC,GAAwB1iC,KAAKwgC,oBAAsBxgC,KAAKkgC,eAE5D,IAAIvF,GAA8Bvf,EAAMN,MAExC9a,MAAK2iC,qBAAqBhI,EAE1B,IAAI36B,KAAKmR,iBAAiB6L,EAAYG,aAAc,CACnDnd,KAAKqR,cAAc+J,EACnBqnB,GAAU,SACJ,CpEkjUG,GoE/iULpjC,GAAU8C,EAAanC,KAAKy/B,oBAAoB7/B,MAEpD,KAAKP,EAAI,EAAGA,EAAI8C,EAAK9C,IACpB,IAAKojC,EACJA,EAAoBziC,KAAKy/B,oBAAoBpgC,GAAG+b,GAGnD,GAAIqnB,EAAS,CACZziC,KAAKqC,SACL,YACM,CAGN,KAAM,IAAI9C,GAAM6b,EAAMtC,UAIhBif,GAAAx3B,UAAA84B,gBAAR,SAAwBje,GAKvB,GAAIpb,KAAKwgC,mBACRxgC,KAAKwgC,mBAAmB9jB,OAAO9Y,KAAKwX,EAAMlB,MAE3CkB,GAAMlB,MAAMwd,eAAetc,EAAMlB,MAAMV,KAAMxZ,KAAKo3B,WAElD,KAAKp3B,KAAKwgC,mBAAmBqC,mBAC5B7iC,KAAKqR,cAAc+J,GAGb2c,GAAAx3B,UAAAo/B,uBAAR,SAA+BvkB,GAE9B,GAAIsf,GAAiCtf,EAAMN,MAE3C,IAAI9a,KAAK8H,WAAa9H,KAAK8H,SAAS01B,oBACnC9C,EAAOiG,uCAEP3gC,MAAKsiC,6BAOCvK,GAAAx3B,UAAAw/B,eAAR,SAAuB3kB,GAEtB,GAAIuf,GAA+Bvf,EAAMN,MAEzC9a,MAAK2iC,qBAAqBhI,EAG1B36B,MAAKwgC,mBAAmBS,UAAUtG,EAAOpyB,KAEzC,IAAIvI,KAAKwgC,mBAAmBU,kBAAmB,CAE9ClhC,KAAKwiC,gCACC,CACNxiC,KAAKmhC,gBAAgBnhC,KAAKwgC,qBAOpBzI,GAAAx3B,UAAAs/B,gBAAR,SAAwBzkB,GAEvB,GAAIsf,GAAiCtf,EAAMN,MAE3C9a,MAAKwiC,2BAEL9H,GAAOvf,oBAAoB6B,EAAYI,uBAAwBpd,KAAK0/B,gCACpEhF,GAAOvf,oBAAoB6B,EAAYE,eAAgBld,KAAK4/B,yBAC5DlF,GAAOvf,oBAAoB6B,EAAYG,YAAand,KAAKw5B,sBACzDkB,GAAOvf,oBAAoBnB,EAAWU,mBAAoB1a,KAAKk5B,4BAC/DwB,GAAOvf,oBAAoBnB,EAAWO,eAAgBva,KAAKo5B,0BAOpDrB,GAAAx3B,UAAA44B,mBAAR,SAA2B/d,GAE1BA,EAAMlB,MAAMV,KAAOxZ,KAAKwgC,mBAAmBsC,YAAY1nB,EAAMlB,MAE7Dla,MAAKqR,cAAc+J,GAGZ2c,GAAAx3B,UAAAugC,kBAAR,SAA0BnG,GAEzBA,EAAO3f,iBAAiBjB,EAAMuB,SAAUtb,KAAK8/B,wBAC7CnF,GAAO3f,iBAAiBoB,EAAaC,SAAUrc,KAAKs5B,sBAG7CvB,GAAAx3B,UAAAoiC,qBAAR,SAA6BhI,GAE5BA,EAAOxf,oBAAoBpB,EAAMuB,SAAUtb,KAAK8/B,wBAChDnF,GAAOxf,oBAAoBiB,EAAaC,SAAUrc,KAAKs5B,sBAGjDvB,GAAAx3B,UAAA+7B,KAAP,WAECt8B,KAAKqC,UAGE01B,GAAAx3B,UAAA8B,QAAR,WAECrC,KAAKw/B,eAAiB,IACtBx/B,MAAKy/B,oBAAsB,IAC3Bz/B,MAAK8H,SAAW,IAChB9H,MAAKmgC,OAAS,IACdngC,MAAKu/B,OAAS,IAEd,IAAIv/B,KAAKwgC,oBAAsBxgC,KAAKwgC,mBAAmBzB,SACtD/+B,KAAK2iC,qBAAqB3iC,KAAKwgC,mBAAmBzB,SAEnD/+B,MAAKwgC,mBAAqB,KAgBpBzI,GAAAx3B,UAAAs6B,uBAAP,SAA8BkI,GAE7B,GAAI/iC,KAAKy/B,oBAAoB17B,QAAQg/B,GAAW,EAC/C/iC,KAAKy/B,oBAAoB77B,KAAKm/B,GAGzBhL,GAAAx3B,UAAAq6B,kBAAP,SAAyBmI,GAExB,GAAI/iC,KAAKw/B,eAAez7B,QAAQg/B,GAAW,EAC1C/iC,KAAKw/B,eAAe57B,KAAKm/B,GAUnBhL,GAAAx3B,UAAAyiC,kBAAR,SAA0Bz6B,GAEzB,GAAIpG,GAAa41B,EAAYiI,SAASpgC,MAGtC,KAAK,GAAIP,GAAW8C,EAAM,EAAG9C,GAAK,EAAGA,IACpC,GAAI04B,EAAYiI,SAAS3gC,GAAG4jC,aAAa16B,GACxC,MAAO,IAAIwvB,GAAYiI,SAAS3gC,EAElC,OAAO,MASA04B,GAAAx3B,UAAA4gC,gBAAR,SAAwBxnB,GAEvB,GAAI+gB,GAAoB/gB,EAAW+gB,MAInC,KAAKA,EACJ/gB,EAAW4nB,YAAY7G,EAAS16B,KAAKgjC,kBAAkBrpB,EAAWpR,MAEnE,IAAImyB,EAAQ,CACXA,EAAO1f,iBAAiBgC,EAAYI,uBAAwBpd,KAAK0/B,gCACjEhF,GAAO1f,iBAAiBgC,EAAYE,eAAgBld,KAAK4/B,yBACzDlF,GAAO1f,iBAAiBgC,EAAYG,YAAand,KAAKw5B,sBACtDkB,GAAO1f,iBAAiBhB,EAAWU,mBAAoB1a,KAAKk5B,4BAC5DwB,GAAO1f,iBAAiBhB,EAAWO,eAAgBva,KAAKo5B,yBAExD,IAAIzf,EAAWonB,SAAWpnB,EAAWonB,QAAQvkB,IAC5Cke,EAAOwI,WAAavpB,EAAWonB,QAAQvkB,GAExCke,GAAOsD,aAAeh+B,KAAK89B,aAE3BpD,GAAOyI,WAAWxpB,EAAWpR,UAEvB,CACN,GAAIuQ,GAAiB,6FACrB,IAAG9Y,KAAKmR,iBAAiB6L,EAAYG,aACpCnd,KAAKqR,cAAc,GAAI2L,GAAYA,EAAYG,YAAarE,QAE5D,MAAM,IAAIvZ,GAAMuZ,IAQXif,GAAAx3B,UAAAihC,oBAAR,SAA4BhlB,GpE6/TrB,GoE1/TFklB,GAAellB,EAAIzY,QAAQ,KAAO,EAAIyY,EAAI4mB,MAAM,KAAK,GAAK5mB,CAC9D,IAAI6mB,GAAuB3B,EAAKG,OAAOH,EAAKW,YAAY,KAAO,GAAGiB,aAElE,IAAInhC,GAAa41B,EAAYiI,SAASpgC,MAGtC,KAAK,GAAIP,GAAW8C,EAAM,EAAG9C,GAAK,EAAGA,IAAK,CACzC,GAAIy6B,GAAkB/B,EAAYiI,SAAS3gC,EAC3C,IAAIy6B,EAAYyJ,aAAaF,GAC5B,MAAO,IAAIvJ,GAGb,MAAO,MAxlBO/B,GAAAiI,SAAsB,GAAIl/B,OAAWo+B,EAAeC,EAAiBC,EAAoBE,EA0lBzG,OAAAvH,IAlnB0Bld,EAonB1B/a,GAAqBJ,QAAZq4B,IpE0/TNhf,+BAA+B,+BAA+Be,oCAAoC,oCAAoCa,+BAA+B,+BAA+BC,yCAAyC,yCAAyCuB,sCAAsC,sCAAsCG,qCAAqC,qCAAqCS,qCAAqC,qCAAqC8hB,2CAA2C,2CAA2C2E,gCAAgC,gCAAgCC,0CAA0C,0CAA0CC,wCAAwC,wCAAwCC,0CAA0C,0CAA0CC,6CAA6C,6CAA6CC,6CAA6C,6CAA6CC,0CAA0C,4CAA4CpH,8CAA8C,SAAS99B,EAAQkB,EAAOJ,GAQvtC,GqE/rVMs4B,GAAkB,WAAxB,QAAMA,MAOSA,EAAA+L,UAAmB,UAOnB/L,GAAAW,UAAmB,UAClC,OAAAX,KAEAl4B,GAA4BJ,QAAnBs4B,OrEisVHgM,gDAAgD,SAASplC,EAAQkB,EAAOJ,GsEztV9E,GAAOs4B,GAAkBp5B,EAAY,6CAErC,IAAO0W,GAAmB1W,EAAY,6CACtC,IAAOob,GAAUpb,EAAc,oCtE2uV/B,IsExtVMqlC,GAAoB,WAGzB,QAHKA,MAWEA,EAAA1jC,UAAA86B,gBAAP,SAAuB6I,EAAqBC,EAAiBC,EAAyBC,GAErF,KAAM,IAAI/uB,GAQJ2uB,GAAA1jC,UAAAk4B,OAAP,WAEC,KAAM,IAAInjB,GAOJ2uB,GAAA1jC,UAAA+jC,cAAP,SAAqB/M,EAAWgN,EAA2BJ,EAAiBK,EAAiBJ,EAAyBC,GAErH,GAAII,EACJ,IAAIC,EACJ,IAAIC,EAEJD,GAAUL,IAAerM,EAAmBW,UAAY6L,EAAWL,CACnEQ,GAASN,IAAerM,EAAmBW,UAAYwL,EAAWK,CAElEC,GAAkBE,EAAMnrB,IAExB4qB,GAAiBM,EAAOlrB,MAAQkrB,CAChCN,GAAiBG,GAAsBI,CACvCA,GAAMjN,eAAe6M,EAAoBhN,EAAI,MAE7CoN,GAAMtzB,cAAc,GAAI2I,GAAWA,EAAWS,wBAAyBkqB,EAAOF,IAEhF,OAAAR,KAEAnkC,GAA8BJ,QAArBukC,ItE6sVN3tB,6CAA6C,6CAA6CwD,oCAAoC,oCAAoC4iB,6CAA6C,+CAA+CC,4CAA4C,SAAS/9B,EAAQkB,EAAOJ,GuEnxVrU,GAAOklC,GAAqBhmC,EAAY,gDACxC,IAAOimC,GAAsBjmC,EAAY,iDACzC,IAAOkmC,GAAyBlmC,EAAW,oDvEgyV3C,IuEnxVMq5B,GAAgB,WAsBrB,QAtBKA,GAsBO8M,IAhBE9M,EAAA+M,kBAAyC,GAAIF,EAO7C7M,GAAAO,OAA8B,GAAIqM,EAOlC5M,GAAAgN,YAAmC,GAAIL,EAMtD,OAAA3M,KAEAn4B,GAA0BJ,QAAjBu4B,IvEgxVNiN,gDAAgD,gDAAgDC,iDAAiD,iDAAiDC,oDAAoD,sDAAsDF,iDAAiD,SAAStmC,EAAQkB,EAAOJ,GACxX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwEj0VtB,IAAO4jC,GAAoBrlC,EAAY,+CAEvC,IAAOW,GAAKX,EAAe,+BAE3B,IAAMgmC,GAAqB,SAAAlkC,GAASX,EAA9B6kC,EAAqBlkC,EAE1B,SAFKkkC,KAIJlkC,EAAAf,KAAAK,MAGM4kC,EAAArkC,UAAA86B,gBAAP,SAAuB6I,EAAqBC,EAAiBC,EAAyBC,GAErF,KAAM,IAAI9kC,GAAM,uGAAyG2kC,EAAamB,eAGhIT,GAAArkC,UAAAk4B,OAAP,WAEC,MAAO,IAAImM,GAEb,OAAAA,IAhBoCX,EAkBpCnkC,GAA+BJ,QAAtBklC,IxE8zVN7rB,+BAA+B,+BAA+BirB,+CAA+C,iDAAiDsB,uCAAuC,SAAS1mC,EAAQkB,EAAOJ,SAE1N6lC,kCAAkC,SAAS3mC,EAAQkB,EAAOJ,SAE1D8lC,kCAAkC,SAAS5mC,EAAQkB,EAAOJ,GyEx1VhE,GAAM+lC,GAAM,WAAZ,QAAMA,MA0BSA,EAAAC,UAAd,WAEC,GAAIC,GAAM,GAAI7kC,OAAM,GACpB,IAAI0H,GAAe,CAEnB,IAAInJ,EACJ,IAAI+E,EAEJ,KAAK/E,EAAI,EAAGA,EAAI,EAAGA,IAClBsmC,EAAIn9B,KAAWi9B,EAAOG,iBAAiB97B,KAAKkJ,MAAMlJ,KAAK+7B,SAAS,IAEjE,KAAKxmC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvBsmC,EAAIn9B,KAAW,EAEf,KAAKpE,EAAI,EAAGA,EAAI,EAAGA,IAClBuhC,EAAIn9B,KAAWi9B,EAAOG,iBAAiB97B,KAAKkJ,MAAMlJ,KAAK+7B,SAAS,KAGlEF,EAAIn9B,KAAW,EAEf,IAAIs9B,IAAc,GAAIC,OAAOC,SzEq1VvB,IyE70VFC,IAAqB,UAAYH,EAAKpkB,SAAS,IAAIwkB,eAAerE,QAAQ,EAE9E,KAAKxiC,EAAI,EAAGA,EAAI,EAAGA,IAClBsmC,EAAIn9B,KAAWy9B,EAAWE,WAAW9mC,EAEtC,KAAKA,EAAI,EAAGA,EAAI,EAAGA,IAClBsmC,EAAIn9B,KAAWi9B,EAAOG,iBAAiB97B,KAAKkJ,MAAMlJ,KAAK+7B,SAAS,IAEjE,OAAOO,QAAOC,aAAaC,MAAM,KAAMX,GAxDzBF,GAAAG,kBAAoB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GA0FhG,OAAAH,KAEA3lC,GAAgBJ,QAAP+lC,OzEizVHc,yCAAyC,SAAS3nC,EAAQkB,EAAOJ,SAEjEylC,kDAAkD,SAASvmC,EAAQkB,EAAOJ,GAChF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0E15VtB,IAAO4jC,GAAoBrlC,EAAY,+CAGvC,IAAMimC,GAAsB,SAAAnkC,GAASX,EAA/B8kC,EAAsBnkC,EAE3B,SAFKmkC,KAIJnkC,EAAAf,KAAAK,MAGM6kC,EAAAtkC,UAAA86B,gBAAP,SAAuB6I,EAAqBC,EAAiBC,EAAyBC,GAGrF,OAGMQ,GAAAtkC,UAAAk4B,OAAP,WAEC,MAAO,IAAIoM,GAEb,OAAAA,IAjBqCZ,EAmBLnkC,GAAAJ,QAAvBmlC,I1Eu5VNb,+CAA+C,iDAAiDoB,qDAAqD,SAASxmC,EAAQkB,EAAOJ,GAChL,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2El7VtB,IAAO4jC,GAAoBrlC,EAAY,+CAGvC,IAAMkmC,GAAyB,SAAApkC,GAASX,EAAlC+kC,EAAyBpkC,EAK9B,SALKokC,GAKO0B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,IAEX9lC,EAAAf,KAAAK,KAEAA,MAAKymC,WAAaD,CAClBxmC,MAAK0mC,gBAGC5B,EAAAvkC,UAAA86B,gBAAP,SAAuB6I,EAAqBC,EAAiBC,EAAyBC,GAErF,GAAIsC,EACJ,IAAIC,EACJ,IAAIlF,EACJ,IAAImF,EAEJF,GAAOzC,EAAa1qB,IAEpB,IAAImtB,EAAK5iC,QAAQ/D,KAAKymC,aAAe,EAAG,CAIvC/E,EAAOiF,EAAKvE,UAAU,EAAGuE,EAAKtE,YAAYriC,KAAKymC,YAC/CI,GAASC,SAASH,EAAKvE,UAAUV,EAAK9hC,OAAS,GAE/C,IAAImnC,MAAMF,GAAS,CAClBnF,EAAOiF,CACPE,GAAS,OAGJ,CACNnF,EAAOiF,CACPE,GAAS,EAGV,GAAIA,GAAU,GAAK7mC,KAAK0mC,aAAatmC,eAAeshC,GAAO,CAE1DmF,EAAS7mC,KAAK0mC,aAAahF,GAM5B,EAAG,CAEFmF,GAEAD,GAAWlF,EAAK7a,OAAO7mB,KAAKymC,WAAYI,EAAOnlB,kBAEvC0iB,EAAiBhkC,eAAewmC,GAEzC5mC,MAAK0mC,aAAchF,GAASmF,CAC5B7mC,MAAKskC,cAAcH,EAAS/I,eAAgBwL,EAAUzC,EAAUD,EAAcE,EAAkBC,GAI1FS,GAAAvkC,UAAAk4B,OAAP,WAEC,MAAO,IAAIqM,GAA0B9kC,KAAKymC,YAE5C,OAAA3B,IAhEwCb,EAkELnkC,GAAAJ,QAA1BolC,I3E85VNd,+CAA+C,iDAAiDgD,yCAAyC,SAASpoC,EAAQkB,EAAOJ,G4En+VpK,GAAMunC,GAAiB,WAAvB,QAAMA,MAESA,EAAAC,UAAmB,WAEnBD,GAAAE,gBAAyB,iBACxC,OAAAF,KAEAnnC,GAA2BJ,QAAlBunC,O5Es+VHxD,2CAA2C,SAAS7kC,EAAQkB,EAAOJ,G6E7+VzE,GAAMu/B,GAAmB,WAAzB,QAAMA,MAMSA,EAAAmI,KAAc,MAMdnI,GAAAoI,UAAmB,WAMnBpI,GAAAqI,KAAc,MAMdrI,GAAAsI,aAAsB,aAMtBtI,GAAAqC,OAAgB,QAC/B,OAAArC,KAEAn/B,GAA6BJ,QAApBu/B,O7E6+VHuE,iCAAiC,SAAS5kC,EAAQkB,EAAOJ,GAC/D,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8EnhWtB,IAAO4+B,GAAmBrgC,EAAa,0CAEvC,IAAO4oC,GAAgB5oC,EAAc,uCACrC,IAAO6oC,GAAY7oC,EAAe,mCAClC,IAAO8oC,GAAS9oC,EAAe,+BAC/B,IAAOic,GAAejc,EAAc,yCACpC,IAAOmd,GAAend,EAAc,yCACpC,IAAOwd,GAAYxd,EAAe,sCAClC,IAAO+oC,GAAiB/oC,EAAa,uC9E+hWrC,I8EnhWMogC,GAAS,SAAAt+B,GAASX,EAAlBi/B,EAASt+B,EAmBd,SAnBKs+B,KAqBJt+B,EAAAf,KAAAK,KAlBOA,MAAA4nC,aAAsB,CACtB5nC,MAAA6nC,YAAqB,CACrB7nC,MAAA8nC,YAAqB7I,EAAoBmI,IACzCpnC,MAAA+nC,WAAqB,MAqB7B5mC,OAAAC,eAAW49B,EAAAz+B,UAAA,O9EwgWJc,I8ExgWP,WAGC,MAAOrB,MAAKgoC,SAAUhoC,KAAKgoC,SAASxrB,IAAM,I9EwgWpCjb,WAAY,KACZC,aAAc,M8EngWrBL,QAAAC,eAAW49B,EAAAz+B,UAAA,Q9EygWJc,I8EzgWP,WAEC,MAAOrB,MAAKioC,O9E0gWN1mC,WAAY,KACZC,aAAc,M8E//VrBL,QAAAC,eAAW49B,EAAAz+B,UAAA,c9EkgWJc,I8E7/VP,WAEC,MAAOrB,MAAK8nC,a9EsgWNnmC,I8E7gWP,SAAsBumC,GAErBloC,KAAK8nC,YAAcI,G9E8gWb3mC,WAAY,KACZC,aAAc,M8EngWrBL,QAAAC,eAAW49B,EAAAz+B,UAAA,e9E0gWJc,I8E1gWP,WAEC,MAAOrB,MAAK4nC,c9E2gWNrmC,WAAY,KACZC,aAAc,M8ErgWrBL,QAAAC,eAAW49B,EAAAz+B,UAAA,c9E4gWJc,I8E5gWP,WAEC,MAAOrB,MAAK6nC,a9E6gWNtmC,WAAY,KACZC,aAAc,M8EtgWdw9B,GAAAz+B,UAAAg6B,KAAP,SAAYwG,GAEX/gC,KAAKgoC,SAAWjH,CAEhB/gC,MAAKmoC,SAEL,IAAIpH,EAAQqH,SAAWZ,EAAiBa,KACvCroC,KAAKsoC,YAAYvH,OAEjB/gC,MAAKuoC,WAAWxH,GAMX/B,GAAAz+B,UAAAioC,MAAP,WAECxoC,KAAKyoC,KAAKC,OACV1oC,MAAK2oC,aAMC3J,GAAAz+B,UAAA8B,QAAP,WAEC,GAAIrC,KAAKyoC,KACRzoC,KAAKyoC,KAAKC,OAEX1oC,MAAK2oC,YAEL3oC,MAAKioC,MAAQ,IACbjoC,MAAK8nC,YAAc,IACnB9nC,MAAK4nC,aAAe,IACpB5nC,MAAK6nC,YAAc,KAQZ7I,GAAAz+B,UAAAqoC,gBAAR,SAAwBC,EAAoBC,GAE3C,OAAQA,GACP,IAAK7J,GAAoBsI,aACzB,IAAKtI,GAAoBqI,KACzB,IAAKrI,GAAoBmI,KACxByB,EAAIC,aAAeA,CACnB,MAED,KAAK7J,GAAoBoI,UACxBwB,EAAIC,aAAe7J,EAAoBmI,IACvC,MAED,KAAKnI,GAAoBqC,OACxBuH,EAAIC,aAAe,EACnB,MAED,WAQM9J,GAAAz+B,UAAAgoC,WAAR,SAAmBxH,GAElB,IACC/gC,KAAKyoC,KAAKM,KAAKhI,EAAQqH,OAAQrH,EAAQvkB,IAAKukB,EAAQiI,MACpDhpC,MAAK4oC,gBAAgB5oC,KAAKyoC,KAAMzoC,KAAK8nC,YACrC9nC,MAAKyoC,KAAKQ,OACT,MAAOpqC,GACRmB,KAAKkpC,8BAA8BrqC,IAQ7BmgC,GAAAz+B,UAAA+nC,YAAR,SAAoBvH,GAEnB/gC,KAAK+nC,WAAa,KAElB/nC,MAAKyoC,KAAKM,KAAKhI,EAAQqH,OAAQrH,EAAQvkB,IAAKukB,EAAQiI,MAEpD,IAAIjI,EAAQx4B,MAAQ,KAAM,CACzB,GAAIw4B,EAAQx4B,eAAgBk/B,GAAc,CACzC,GAAI0B,GAAsCpI,EAAQx4B,IAElD,KACCvI,KAAKyoC,KAAKK,aAAe,MACzB9oC,MAAKyoC,KAAKQ,KAAKE,EAAQC,UACtB,MAAOvqC,GACRmB,KAAKkpC,8BAA8BrqC,QAE9B,CACNmB,KAAK4oC,gBAAgB5oC,KAAKyoC,KAAMzoC,KAAK8nC,YAErC,IAAI/G,EAAQx4B,KACXvI,KAAKyoC,KAAKQ,KAAKlI,EAAQx4B,UAEvBvI,MAAKyoC,KAAKQ,YAEN,CACNjpC,KAAKyoC,KAAKQ,QASJjK,GAAAz+B,UAAA2oC,8BAAR,SAAsCG,GAErC,OAAQA,EAAM7pC,MASb,IAAK,KAEJ,OAOKw/B,GAAAz+B,UAAA4nC,QAAR,WAAA,GAAAhQ,GAAAn4B,IAEC,KAAKA,KAAKyoC,KAAM,CACfzoC,KAAKyoC,KAAO,GAAIa,eAEhBtpC,MAAKyoC,KAAKc,YAAc,SAACnuB,GAAwB,MAAA+c,GAAKqR,YAAYpuB,GAClEpb,MAAKyoC,KAAKgB,WAAa,SAACruB,GAAwB,MAAA+c,GAAKuR,WAAWtuB,GAChEpb,MAAKyoC,KAAKkB,QAAU,SAACvuB,GAAkB,MAAA+c,GAAKyR,QAAQxuB,GACpDpb,MAAKyoC,KAAKoB,QAAU,SAACzuB,GAAqB,MAAA+c,GAAKoB,YAAYne,GAC3Dpb,MAAKyoC,KAAKqB,OAAS,SAAC1uB,GAAgB,MAAA+c,GAAK4H,eAAe3kB,GACxDpb,MAAKyoC,KAAKsB,UAAY,SAAC3uB,GAAgB,MAAA+c,GAAK6R,UAAU5uB,GACtDpb,MAAKyoC,KAAKwB,UAAY,SAAC7uB,GAAwB,MAAA+c,GAAK+R,UAAU9uB,GAC9Dpb,MAAKyoC,KAAK0B,mBAAqB,SAAC/uB,GAAgB,MAAA+c,GAAKiS,mBAAmBhvB,KAOlE4jB,GAAAz+B,UAAAooC,WAAR,WAEC,GAAI3oC,KAAKyoC,OAAS,KAAM,CACvBzoC,KAAKyoC,KAAKc,YAAc,IACxBvpC,MAAKyoC,KAAKgB,WAAa,IACvBzpC,MAAKyoC,KAAKkB,QAAU,IACpB3pC,MAAKyoC,KAAKoB,QAAU,IACpB7pC,MAAKyoC,KAAKqB,OAAS,IACnB9pC,MAAKyoC,KAAKsB,UAAY,IACtB/pC,MAAKyoC,KAAKwB,UAAY,IACtBjqC,MAAKyoC,KAAO,MAQPzJ,GAAAz+B,UAAA8pC,mBAAP,SAA0BhgC,GAEzB,GAAI6b,GAAgB,GAAI/kB,OAExBkJ,GAASA,EAAO+4B,MAAM,KAAKkH,KAAK,IAEhC,IAAIC,GAAQC,EAAK,uBAEjB,OAAOD,EAASC,EAAGC,KAAKpgC,GACvB6b,EAAOwkB,mBAAmBH,EAAO,KAAOG,mBAAmBH,EAAO,GAEnE,OAAOrkB,GASA8Y,GAAAz+B,UAAA6pC,mBAAR,SAA2BhvB,GAE1B,GAAIpb,KAAKyoC,KAAKkC,YAAc,EAAG,CAC9B,GAAI3qC,KAAKyoC,KAAKzsB,QAAU,IAAK,CAC5Bhc,KAAK+nC,WAAa,IAElB,KAAK/nC,KAAK4qC,gBACT5qC,KAAK4qC,gBAAkB,GAAIxuB,GAAaA,EAAaC,SAEtDrc,MAAKqR,cAAcrR,KAAK4qC,iBAGzB5qC,KAAKqR,cAAc,GAAI0K,GAAgBA,EAAgBE,YAAajc,KAAKyoC,KAAKzsB,UAQxEgjB,GAAAz+B,UAAA2pC,UAAR,SAAkB9uB,GAEjB,GAAIpb,KAAK+nC,aAAe,KACvB,OAOM/I,GAAAz+B,UAAAypC,UAAR,SAAkB5uB,IASV4jB,GAAAz+B,UAAAqpC,QAAR,SAAgBxuB,IASR4jB,GAAAz+B,UAAAmpC,WAAR,SAAmBtuB,GAElB,IAAKpb,KAAK6qC,eACT7qC,KAAK6qC,eAAiB,GAAIlD,GAAkBA,EAAkBpqB,SAE/Dvd,MAAK6qC,eAAeC,WAAa1vB,EAAM2vB,KACvC/qC,MAAK6qC,eAAeG,YAAc5vB,EAAM6vB,MAExCjrC,MAAKqR,cAAcrR,KAAK6qC,gBAOjB7L,GAAAz+B,UAAAipC,YAAR,SAAoBpuB,GAEnB,IAAKpb,KAAKkrC,gBACTlrC,KAAKkrC,gBAAkB,GAAIxD,GAAUA,EAAUnsB,KAEhDvb,MAAKqR,cAAcrR,KAAKkrC,iBAOjBlM,GAAAz+B,UAAAw/B,eAAR,SAAuB3kB,GAEtB,GAAIpb,KAAK+nC,aAAe,KACvB,MAED,QAAQ/nC,KAAK8nC,aACZ,IAAK7I,GAAoBmI,KACxBpnC,KAAKioC,MAAQjoC,KAAKyoC,KAAK0C,YACvB,MAED,KAAKlM,GAAoBoI,UACxBrnC,KAAKioC,MAAQjoC,KAAKqqC,mBAAmBrqC,KAAKyoC,KAAK0C,aAC/C,MAED,KAAKlM,GAAoBqI,KACzB,IAAKrI,GAAoBsI,aACzB,IAAKtI,GAAoBqC,OACxBthC,KAAKioC,MAAQjoC,KAAKyoC,KAAK2C,QACvB,MAED,SACCprC,KAAKioC,MAAQjoC,KAAKyoC,KAAK0C,YACvB,OAGF,IAAKnrC,KAAKqrC,mBACTrrC,KAAKqrC,mBAAqB,GAAI3D,GAAUA,EAAUpsB,SAEnDtb,MAAKqR,cAAcrR,KAAKqrC,oBAOjBrM,GAAAz+B,UAAAg5B,YAAR,SAAoBne,GAEnBpb,KAAK+nC,WAAa,IAElB,KAAK/nC,KAAK4qC,gBACT5qC,KAAK4qC,gBAAkB,GAAIxuB,GAAaA,EAAaC,SAEtDrc,MAAKqR,cAAcrR,KAAK4qC,iBAE1B,OAAA5L,IA3YwBnkB,EA6YxB/a,GAAmBJ,QAAVs/B,I9Ew8VNrkB,+BAA+B,+BAA+BC,yCAAyC,yCAAyCkB,yCAAyC,yCAAyCK,sCAAsC,sCAAsCkB,uCAAuC,uCAAuComB,0CAA0C,0CAA0C6H,uCAAuC,uCAAuCC,mCAAmC,qCAAqCD,wCAAwC,SAAS1sC,EAAQkB,EAAOJ,G+Ez2WzqB,GAAM8nC,GAAgB,WAAtB,QAAMA,MAMSA,EAAAa,KAAc,MAKdb,GAAAgE,IAAa,KAC5B,OAAAhE,KAE0B1nC,GAAAJ,QAAjB8nC,O/E62WHiE,kCAAkC,SAAS7sC,EAAQkB,EAAOJ,GgF33WhE,GAAO8nC,GAAgB5oC,EAAc,uCAErC,IAAM8sC,GAAU,WAsCf,QAtCKA,GAsCOlvB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAjBLxc,KAAAooC,OAAgBZ,EAAiBgE,GAMjCxrC,MAAAgpC,MAAgB,IAatBhpC,MAAK2c,KAAOH,EAObrb,OAAAC,eAAWsqC,EAAAnrC,UAAA,OhFu2WJc,IgFv2WP,WAEC,MAAOrB,MAAK2c,MhF42WNhb,IgFr2WP,SAAeC,GAEd5B,KAAK2c,KAAO/a,GhFs2WNL,WAAY,KACZC,aAAc,MgFj2WdkqC,GAAAnrC,UAAA8B,QAAP,WAECrC,KAAKuI,KAAO,IACZvI,MAAK2c,KAAO,KAEd,OAAA+uB,KAEA5rC,GAAoBJ,QAAXgsC,IhFu2WNJ,uCAAuC,yCAAyCC,oCAAoC,SAAS3sC,EAAQkB,EAAOJ,GiFh7W/I,GAAM+nC,GAAY,WAQjB,QARKA,GAQOp9B,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KANJrK,KAAA2rC,WAAoB,GAAIxqC,OAQ/B,IAAIkJ,IAAW,KACdrK,KAAK4rC,OAAOvhC,GAOPo9B,EAAAlnC,UAAAqrC,OAAP,SAAcvhC,GAEbA,EAASA,EAAO+4B,MAAM,KAAKkH,KAAK,IAEhC,IAAIC,GAAQC,EAAK,uBAEjB,OAAOD,EAASC,EAAGC,KAAKpgC,GACvBrK,KAAK2rC,WAAWjB,mBAAmBH,EAAO,KAAOG,mBAAmBH,EAAO,IAOtE9C,GAAAlnC,UAAAmhB,SAAP,WAEC,MAAO,GAORvgB,QAAAC,eAAWqmC,EAAAlnC,UAAA,ajFy6WJc,IiFz6WP,WAEC,MAAOrB,MAAK2rC,YjF86WNhqC,IiFz5WP,SAAqBkqC,GAEpB7rC,KAAK2rC,WAAaE,GjF05WZtqC,WAAY,KACZC,aAAc,MiF36WrBL,QAAAC,eAAWqmC,EAAAlnC,UAAA,YjFk7WJc,IiFl7WP,WAEC,GAAIyqC,GAAc,GAAIC,SAEtB,KAAK,GAAI9sC,KAAKe,MAAK2rC,WAClBG,EAAGhlB,OAAO7nB,EAAGe,KAAK2rC,WAAW1sC,GAE9B,OAAO6sC,IjFi7WDvqC,WAAY,KACZC,aAAc,MiFv6WtB,OAAAimC,KAEsB3nC,GAAAJ,QAAb+nC,OjF26WH/D,yCAAyC,SAAS9kC,EAAQkB,EAAOJ,GACvE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkFp/WtB,IAAO4+B,GAAmBrgC,EAAY,0CACtC,IAAOotC,GAAUptC,EAAc,qCAC/B,IAAOqtC,GAAWrtC,EAAc,sCAChC,IAAOstC,GAASttC,EAAc,kCAC9B,IAAOkT,GAAUlT,EAAc,mClF4/W/B,IkFr/WMsgC,GAAa,SAAAx+B,GAASX,EAAtBm/B,EAAax+B,EAYlB,SAZKw+B,KAcJx+B,EAAAf,KAAAK,KAAMi/B,EAAoBqI,MAQbpI,EAAAqE,aAAd,SAA2B4I,GAG1BA,EAAYA,EAAU7I,aACtB,OAAO6I,IAAa,OAASA,GAAa,QAAUA,GAAa,OAASA,GAAa,MAS1EjN,GAAA+D,aAAd,SAA2B16B,GAG1B,GAAIA,YAAiB6jC,kBACpB,MAAO,KAER,MAAM7jC,YAAgB2jC,IACrB,MAAO,MAER,IAAIG,GAA2B9jC,CAC/B8jC,GAAGxgC,SAAW,CAEd,IAAIwgC,EAAGC,qBAAuB,MAC7B,MAAO,KAERD,GAAGxgC,SAAW,CACd,IAAIwgC,EAAGE,aAAe,MACrB,MAAO,KAERF,GAAGxgC,SAAW,CACd,IAAIwgC,EAAGG,aAAa,IAAM,MACzB,MAAO,KAERH,GAAGxgC,SAAW,CACd,IAAIwgC,EAAGG,aAAa,IAAM,OAASH,EAAGE,aAAe,OAAUF,EAAGI,YAAc,GAC/E,MAAO,KAERJ,GAAGxgC,SAAW,CACd,IAAIwgC,EAAGG,aAAa,IAAM,MACzB,MAAO,KAER,OAAO,OAODtN,GAAA3+B,UAAAmsC,iBAAP,WAAA,GAAAvU,GAAAn4B,IAGC,IAAIka,EACJ,IAAIyyB,GAAoB,KAExB,IAAI3sC,KAAK4sC,cAAe,CACvB,MAAOZ,GAAWa,kBACZ,IAAI7sC,KAAK8sC,kBAAmB,CAClC,GAAIh7B,EAAWi7B,wBAAwB/sC,KAAK8sC,mBAAoB,CAC/D5yB,EAAQ+xB,EAAYe,qBAAqBhtC,KAAK8sC,kBAC9C9sC,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,iBAErC,IAAIljC,KAAKuI,eAAgB6jC,kBAAkB,CACjD,GAAIc,GAAuDltC,KAAKuI,IAChE,IAAIuJ,EAAWi7B,wBAAwBG,GAAmB,CAEzDhzB,EAAQ+xB,EAAYe,qBAAqBE,EACzCltC,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBACpC,CACNyJ,EAAY,UAGP,IAAI3sC,KAAKuI,eAAgB2jC,GAAW,CAE1C,GAAIG,GAAersC,KAAKuI,IACxB8jC,GAAGxgC,SAAW,CACd,IAAIqhC,GAAoCjB,EAAYkB,iBAAiBntC,KAAKuI,KAE1E,IAAIuJ,EAAWi7B,wBAAwBG,GAAmB,CACzDhzB,EAAQ+xB,EAAYe,qBAAqBE,EACzCltC,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBACpC,CACNyJ,EAAY,UAGP,IAAI3sC,KAAKuI,eAAgB/E,aAAa,CAE5CxD,KAAK8sC,kBAAoBb,EAAYmB,mBAAmBptC,KAAKuI,KAE7D2R,GAAQ+xB,EAAYe,qBAAqBhtC,KAAK8sC,kBAC9C9sC,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBAEpC,IAAIljC,KAAKuI,eAAgB8kC,MAAM,CAErCrtC,KAAK8sC,kBAAoBb,EAAYqB,YAAYttC,KAAKuI,KAEtDvI,MAAK8sC,kBAAkBhD,OAAS,SAAC1uB,GAAU,MAAA+c,GAAK4H,eAAe3kB,GAC/Dpb,MAAK4sC,cAAgB,IAErB,OAAOZ,GAAWa,cAGnB,GAAIF,GAAa,KACjB,EAMA3sC,KAAKutC,UAAYrzB,CAEjB,OAAO8xB,GAAWwB,aAIZtO,GAAA3+B,UAAAw/B,eAAP,SAAsB3kB,GAErBpb,KAAK4sC,cAAgB,MAEvB,OAAA1N,IA/I4B8M,EAiJ5BlsC,GAAuBJ,QAAdw/B,IlFg9WNuE,0CAA0C,0CAA0CgK,qCAAqC,qCAAqCC,sCAAsC,sCAAsCC,kCAAkC,kCAAkCx7B,mCAAmC,qCAAqCwxB,2CAA2C,SAAS/kC,EAAQkB,EAAOJ,GAC5b,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmFlnXtB,IAAOwM,GAAejO,EAAa,uCAEnC,IAAOqgC,GAAmBrgC,EAAY,0CACtC,IAAO8sC,GAAU9sC,EAAc,iCAC/B,IAAOotC,GAAUptC,EAAc,qCnFynX/B,ImFjnXMugC,GAAe,SAAAz+B,GAASX,EAAxBo/B,EAAez+B,EAgBpB,SAhBKy+B,KAkBJz+B,EAAAf,KAAAK,KAAMi/B,EAAoBmI,MASbjI,EAAAoE,aAAd,SAA2B4I,GAE1BA,EAAYA,EAAU7I,aACtB,OAAO6I,IAAa,OAQPhN,GAAA8D,aAAd,SAA2B16B,GAE1B,IACC,GAAIsjC,GAAM+B,KAAKC,MAAMtlC,EAErB,IAAIsjC,EAAK,CACR,MAAO,MAER,MAAO,OACN,MAAOhtC,GACR,MAAO,OAGR,MAAO,OAMDsgC,GAAA5+B,UAAAutC,oBAAP,SAA2BC,IAQpB5O,GAAA5+B,UAAAytC,2BAAP,SAAkCD,IAQ3B5O,GAAA5+B,UAAAmsC,iBAAP,WAEC,GAAI1sC,KAAKiuC,0BAA4B,KAAM,CAC1C,GAAI/zB,GAAwB,GAAIrN,GAAgB7M,KAAKkuC,kBAAkB/O,EAAgBpyB,MAAM1F,MAE7F6S,GAAMhS,KAAK2E,EAAgBE,KAAM/M,KAAKkuC,kBAAkB/O,EAAgBpyB,MACxEmN,GAAMhS,KAAK2E,EAAgBG,KAAMhN,KAAKkuC,kBAAkB/O,EAAgBnyB,MACxEkN,GAAMhS,KAAK2E,EAAgBI,KAAMjN,KAAKkuC,kBAAkB/O,EAAgBlyB,MACxEiN,GAAMhS,KAAK2E,EAAgBK,KAAMlN,KAAKkuC,kBAAkB/O,EAAgBjyB,MACxEgN,GAAMhS,KAAK2E,EAAgBM,KAAMnN,KAAKkuC,kBAAkB/O,EAAgBhyB,MACxE+M,GAAMhS,KAAK2E,EAAgBO,KAAMpN,KAAKkuC,kBAAkB/O,EAAgB/xB,MAGxEpN,MAAKiuC,yBAA2B,IAEhC/zB,GAAMV,KAAOxZ,KAAKkjC,UAElBljC,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,WAE1C,OAAO8I,GAAWwB,aAGnB,IACC,GAAIW,GAAWP,KAAKC,MAAM7tC,KAAKuI,KAC/B,IAAIA,GAAqC4lC,EAAK5lC,IAC9C,IAAI6lC,EAEJ,IAAI7lC,EAAK3I,QAAU,EAClBI,KAAKquC,eAAe,qEAErB,IAAIF,EAAM,CACTnuC,KAAKiuC,yBAA2B,GAAI9sC,OAEpC,KAAK,GAAIykB,GAAW,EAAGA,EAAIrd,EAAK3I,OAAQgmB,IAAK,CAC5CwoB,EAAM7lC,EAAKqd,EACX5lB,MAAKiuC,yBAAyBG,EAAIx+B,IAAM5P,KAAKsuC,gBAAgBF,EAAIx+B,GAAI,GAAI87B,GAAW0C,EAAIG,MAAM7sB,aAG/F,IAAK1hB,KAAKwuC,oBAAqB,CAE9BxuC,KAAKquC,eAAe,+DAAiElP,EAAgBpyB,KAAO,KAAOoyB,EAAgBnyB,KAAO,QAAUmyB,EAAgBlyB,KAAO,KAAOkyB,EAAgBjyB,KAAO,QAAUiyB,EAAgBhyB,KAAO,KAAOgyB,EAAgB/xB,KAEjQ,OAAO4+B,GAAWwB,aAInBxtC,KAAKyuC,gCAEL,OAAOzC,GAAWa,eAElB,MAAOhuC,GACRmB,KAAKquC,eAAe,uCAGrB,MAAOrC,GAAWwB,aAIXrO,GAAA5+B,UAAAiuC,kBAAR,WAEC,MAAUxuC,MAAKiuC,yBAA0B9O,EAAgBpyB,OAAU,MAAQ/M,KAAKiuC,yBAA0B9O,EAAgBnyB,OAAU,MAAQhN,KAAKiuC,yBAA0B9O,EAAgBlyB,OAAU,MAAQjN,KAAKiuC,yBAA0B9O,EAAgBjyB,OAAU,MAAQlN,KAAKiuC,yBAA0B9O,EAAgBhyB,OAAU,MAAQnN,KAAKiuC,yBAA0B9O,EAAgB/xB,OAAU,KAGjY+xB,GAAA5+B,UAAA2tC,kBAAR,SAA0B10B,GAEzB,GAAIG,GAAqD3Z,KAAKiuC,yBAA0Bz0B,EAExF,IAAIG,EACH,MAAuBA,GAAW+C,OAAO,EAE1C,OAAO,MA7IOyiB,GAAApyB,KAAc,MACdoyB,GAAAnyB,KAAc,MACdmyB,GAAAlyB,KAAc,MACdkyB,GAAAjyB,KAAc,MACdiyB,GAAAhyB,KAAc,MACdgyB,GAAA/xB,KAAc,MA2I9B,OAAA+xB,IAlJ8B6M,EAoJLlsC,GAAAJ,QAAhBy/B,InF0kXNzyB,uCAAuC,uCAAuC+2B,0CAA0C,0CAA0CgI,iCAAiC,iCAAiCgC,qCAAqC,uCAAuCA,sCAAsC,SAAS7uC,EAAQkB,EAAOJ,GACjX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoF7uXtB,IAAOiV,GAAmB1W,EAAY,6CACtC,IAAOob,GAAUpb,EAAc,oCAC/B,IAAOic,GAAejc,EAAa,yCACnC,IAAOoe,GAAWpe,EAAc,qCAChC,IAAOmf,GAAUnf,EAAc,oCAC/B,IAAOqtC,GAAWrtC,EAAc,sCAChC,IAAOygC,GAAkBzgC,EAAY,6CAErC,IAAOkT,GAAUlT,EAAc,mCAC/B,IAAO8vC,GAAK9vC,EAAe,8BAC3B,IAAO+vC,GAAQ/vC,EAAe,iCpFkwX9B,IoF7uXMotC,GAAU,SAAAtrC,GAASX,EAAnBisC,EAAUtrC,EAsDf,SAtDKsrC,GAsDO9D,GAtDb,GAAA/P,GAAAn4B,IAwDEU,GAAAf,KAAAK,KAEAA,MAAK89B,cAAgB,CACrB99B,MAAK8nC,YAAcI,CACnBloC,MAAK4uC,cAAgB,GAAI9tC,MAEzBd,MAAK6uC,qBAAuB,SAACzzB,GAAqB,MAAA+c,GAAK2W,aAAa1zB,IA5CvD4wB,EAAAzI,aAAd,SAA2B4I,GAE1B,KAAM,IAAI72B,GAuBXnU,QAAAC,eAAW4qC,EAAAzrC,UAAA,WpF8tXJc,IoF9tXP,WAEC,MAAOrB,MAAKutC,WpF+tXNhsC,WAAY,KACZC,aAAc,MoFxsXdwqC,GAAAzrC,UAAAwuC,qBAAP,SAA4BC,GAE3B,GAAIC,GAAkBn9B,EAAWo9B,eAAeF,EAEhD,KAAKC,EAAS,CAEbE,QAAQnlC,IAAI,+EAGb,MAAOilC,GAGR9tC,QAAAC,eAAW4qC,EAAAzrC,UAAA,kBpFysXJc,IoFpsXP,WAEC,MAAOrB,MAAKovC,iBpFqsXNztC,IoF5sXP,SAA0BzB,GAEzBF,KAAKovC,gBAAkBlvC,GpF6sXjBqB,WAAY,KACZC,aAAc,MoFtsXrBL,QAAAC,eAAW4qC,EAAAzrC,UAAA,iBpFysXJc,IoFzsXP,WAEC,MAAOrB,MAAKqvC,gBpF0sXN9tC,WAAY,KACZC,aAAc,MoFxsXrBL,QAAAC,eAAW4qC,EAAAzrC,UAAA,mBpF2sXJc,IoF3sXP,WAEC,MAAOrB,MAAKsvC,kBpF4sXN/tC,WAAY,KACZC,aAAc,MoF1sXrBL,QAAAC,eAAW4qC,EAAAzrC,UAAA,gBpF6sXJc,IoFxsXP,WAEC,MAAOrB,MAAK89B,epFysXNn8B,IoFhtXP,SAAwB4tC,GAEvBvvC,KAAK89B,cAAgByR,GpFitXfhuC,WAAY,KACZC,aAAc,MoF1sXrBL,QAAAC,eAAW4qC,EAAAzrC,UAAA,QpF6sXJc,IoF7sXP,WAEC,MAAOrB,MAAKioC,OpF8sXN1mC,WAAY,KACZC,aAAc,MoFzsXrBL,QAAAC,eAAW4qC,EAAAzrC,UAAA,cpF+sXJc,IoF/sXP,WAEC,MAAOrB,MAAK8nC,apFgtXNvmC,WAAY,KACZC,aAAc,MoFpsXdwqC,GAAAzrC,UAAA4iC,WAAP,SAAkB56B,EAAUinC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,GAE3BxvC,KAAKioC,MAAQ1/B,CACbvI,MAAKyvC,eAAeD,GAMrBruC,QAAAC,eAAW4qC,EAAAzrC,UAAA,gBpFgtXJc,IoFhtXP,WAEC,MAAOrB,MAAK4uC,epFitXNrtC,WAAY,KACZC,aAAc,MoFxsXdwqC,GAAAzrC,UAAAutC,oBAAP,SAA2BC,GAE1B,KAAM,IAAIz4B,GAQJ02B,GAAAzrC,UAAAytC,2BAAP,SAAkCD,GAEjC,KAAM,IAAIz4B,GAQJ02B,GAAAzrC,UAAAmvC,wBAAP,SAA+B3B,EAAuC7zB,GAErE,MAAOA,GAAMV,KAGPwyB,GAAAzrC,UAAAogC,iCAAP,WAEC3gC,KAAKqvC,eAAiB,KAEtB,IAAIrvC,KAAK2vC,OACR3vC,KAAK2vC,OAAOC,QAGP5D,GAAAzrC,UAAA0sC,gBAAP,SAAuB/yB,EAAcV,GAAA,GAAAA,QAAA,GAAkB,CAAlBA,EAAA,KAEpC,GAAIq2B,EACJ,IAAIC,EAEJ,IAAIt2B,GAAQ,KACXU,EAAMV,KAAOA,CAId,KAAKU,EAAMV,KACVU,EAAMV,KAAOU,EAAM5Y,SAEpBtB,MAAKqR,cAAc,GAAI2I,GAAWA,EAAWO,eAAgBL,IAQvD8xB,GAAAzrC,UAAAmsC,iBAAP,WAEC,KAAM,IAAIp3B,GAGJ02B,GAAAzrC,UAAA8tC,eAAP,SAAsBv1B,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,wBAErB,GAAI9Y,KAAK2vC,OAAQ,CAChB3vC,KAAK2vC,OAAOx0B,oBAAoB4C,EAAWC,MAAOhe,KAAK6uC,qBACvD7uC,MAAK2vC,OAAOrT,MACZt8B,MAAK2vC,OAAS,KAGf3vC,KAAKqR,cAAc,GAAI2L,GAAYA,EAAYG,YAAarE,IAGtDkzB,GAAAzrC,UAAA+tC,gBAAP,SAAuB1+B,EAAW4qB,EAAgB0G,EAAmC34B,EAAiBwnC,EAAqCC,GAAzF,GAAA9O,QAAA,GAAiC,CAAjCA,EAAA,MAAmC,GAAA34B,QAAA,GAAe,CAAfA,EAAA,KAAiB,GAAAwnC,QAAA,GAAmC,CAAnCA,EAAA,MAAqC,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE1I,GAAIr2B,GAAgC,GAAI0lB,GAAmBzvB,EAAI4qB,EAAKjyB,EAAM,KAAMvI,KAAMkhC,EAAmB6O,EAAqBC,EAC9HhwC,MAAK4uC,cAAchrC,KAAK+V,EAExB,OAAOA,GAGDqyB,GAAAzrC,UAAAkuC,+BAAP,WAEC,GAAIzuC,KAAK2vC,OACR3vC,KAAK2vC,OAAOrT,MAEbt8B,MAAKqvC,eAAiB,IACtBrvC,MAAKqR,cAAc,GAAI2L,GAAYA,EAAYI,yBAOzC4uB,GAAAzrC,UAAA0vC,UAAP,WAEC,MAAStB,KAAa3uC,KAAKkwC,eAAkBlwC,KAAKmwC,YAM5CnE,GAAAzrC,UAAAuuC,aAAP,SAAoB1zB,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEnBpb,KAAKkwC,eAAiBvB,GAEtB,IAAI3uC,KAAK0sC,qBAAuB1sC,KAAKovC,gBACpCpvC,KAAKowC,kBAOApE,GAAAzrC,UAAAkvC,eAAP,SAAsBD,GAErBxvC,KAAKmwC,YAAcX,CACnBxvC,MAAK2vC,OAAS,GAAIjB,GAAM1uC,KAAKmwC,YAAa,EAC1CnwC,MAAK2vC,OAAO30B,iBAAiB+C,EAAWC,MAAOhe,KAAK6uC,qBACpD7uC,MAAK2vC,OAAOC,QAMN5D,GAAAzrC,UAAA6vC,gBAAP,WAEC,GAAIpwC,KAAK2vC,OAAQ,CAChB3vC,KAAK2vC,OAAOx0B,oBAAoB4C,EAAWC,MAAOhe,KAAK6uC,qBACvD7uC,MAAK2vC,OAAOrT,OAGbt8B,KAAK2vC,OAAS,IACd3vC,MAAKsvC,iBAAmB,IAExBtvC,MAAKqR,cAAc,GAAI2L,GAAYA,EAAYE,iBAQzC8uB,GAAAzrC,UAAA8vC,cAAP,WAEC,MAAOpE,GAAYvqB,SAAS1hB,KAAKioC,OAQ3B+D,GAAAzrC,UAAA+vC,cAAP,WAEC,MAAOrE,GAAYsE,YAAYvwC,KAAKioC,OAlRvB+D,GAAAwB,aAAuB,IAMvBxB,GAAAa,cAAwB,KA8QvC,OAAAb,IArTyBnxB,EAuTzB/a,GAAoBJ,QAAXssC,IpF4rXN11B,6CAA6C,6CAA6CwD,oCAAoC,oCAAoCc,yCAAyC,yCAAyCmC,qCAAqC,qCAAqCe,oCAAoC,oCAAoC4vB,sCAAsC,sCAAsC9J,6CAA6C,6CAA6CzxB,mCAAmC,mCAAmCq+B,8BAA8B,8BAA8BC,iCAAiC,mCAAmCC,4CAA4C,SAAS9xC,EAAQkB,EAAOJ,GAIzzB,GqFthYMixC,GAAgB,WAAtB,QAAMA,MAKSA,EAAArP,OAAgB,QAKhBqP,GAAAC,WAAoB,WAKpBD,GAAAE,MAAe,OAE9B,OAAAF,KAEA7wC,GAA0BJ,QAAjBixC,OrFshYHjD,uCAAuC,SAAS9uC,EAAQkB,EAAOJ,GsF5iYrE,GAAO0H,GAAaxI,EAAa,qCACjC,IAAO+Z,GAAS/Z,EAAc,iCAC9B,IAAOstC,GAASttC,EAAc,kCAE9B,IAAMqtC,GAAW,WAAjB,QAAMA,MAEUA,EAAA6E,oBAAf,SAAmCvoC,EAAiBwoC,GAEnD,GAAIC,GAAiB,EACrB,IAAI7uC,GAAaoG,EAAKjE,UAEtB,KAAK,GAAIjF,GAAI,EAAGA,EAAI8C,EAAK9C,IACxB2xC,GAAW5K,OAAOC,aAAa99B,EAAKlJ,GAErC,IAAI4xC,GAAqBC,OAAOC,KAAKH,EACrC,OAAO,QAAUD,EAAW,WAAaE,EAG5BhF,GAAAmF,mBAAd,SAAiC7oC,EAAiB8oC,GAEjD,GAAIC,GAAarF,EAAY6E,oBAAoBvoC,EAAM,SAAW8oC,EAClE,IAAIE,GAA4C,GAAIC,MACpDD,GAAMpb,IAAMmb,CACZ,OAAOC,GAWMtF,GAAAmB,mBAAd,SAAiC7kC,GAEhC,GAAI+oC,GAAarF,EAAY6E,oBAAoBvoC,EAAM,YACvD,IAAIkpC,GAA0C,GAAIC,MAClDD,GAAItb,IAAMmb,CACV,OAAOG,GAWMxF,GAAAkB,iBAAd,SAA+B5kC,GAE9B,GAAI+oC,GAAarF,EAAY6E,oBAAoBvoC,EAAK1F,gBAAiB,YACvE,IAAI4uC,GAA0C,GAAIC,MAClDD,GAAItb,IAAMmb,CACV,OAAOG,GAGMxF,GAAA0F,iBAAd,SAA+BppC,EAAgBqpC,GAE9C,GAAIN,GAAarF,EAAY6E,oBAAoBvoC,EAAK1F,gBAAiB,SAAW+uC,EAClF,IAAIL,GAA4C,GAAIC,MACpDD,GAAMpb,IAAMmb,CACZ,OAAOC,GAWMtF,GAAAqB,YAAd,SAA0B/kC,GAEzB,GAAIspC,GAAaX,OAAO,QAAUA,OAAO,YACzC,IAAI/a,GAAM0b,EAAOC,gBAAgBvpC,EACjC,IAAIkpC,GAA0C,GAAIC,MAClDD,GAAItb,IAAMA,CACV,OAAOsb,GAWMxF,GAAA8F,YAAd,SAA0BxpC,GAEzB,GAAIspC,GAAaX,OAAO,QAAUA,OAAO,YACzC,IAAI/a,GAAM0b,EAAOC,gBAAgBvpC,EACjC,IAAIkpC,GAA0C,GAAID,MAClDC,GAAItb,IAAMA,CACV,OAAOsb,GAMMxF,GAAAe,qBAAd,SAAmCyE,GAElC,GAAIO,GAA2B,GAAI5qC,GAAcqqC,EAAIpqC,MAAOoqC,EAAInqC,OAAQ,KACxE0qC,GAAW9pC,KAAKupC,EAEhB,OAAOO,GAWM/F,GAAAsE,YAAd,SAA0BhoC,GAEzB,GAAIrI,GAAc,GAAIgsC,EACtBhsC,GAAE+xC,eAAe1pC,EACjB,OAAOrI,GAYM+rC,GAAAvqB,SAAd,SAAuBnZ,EAAU3I,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAGhC,SAAW2I,KAAS,SAAU,CAC7B,GAAItJ,GAAoBsJ,CAExB,IAAItJ,EAAE,WAAa,KAClB,MAAOA,GAAE4iC,OAAO,EAAG5iC,EAAEW,QAGvB,GAAI2I,YAAgB2jC,GAAW,CAC9B,GAAIG,GAA2B9jC,CAC/B8jC,GAAGxgC,SAAW,CACd,OAAOwgC,GAAGG,aAAa1iC,KAAKooC,IAAI7F,EAAG8F,oBAAqBvyC,IAGzD,MAAO,MAsBMqsC,GAAAmG,iBAAd,SAA+Bx5B,GAE9B,MAAO,IAAID,GAAUC,GAEvB,OAAAqzB,KAEqBnsC,GAAAJ,QAAZusC,ItFkhYNjlC,qCAAqC,qCAAqC0R,iCAAiC,iCAAiCi1B,kCAAkC,oCAAoC/J,8CAA8C,SAAShlC,EAAQkB,EAAOJ,GAM3R,GuFjsYM2/B,GAAkB,WAkBvB,QAlBKA,GAkBOzvB,EAAWmxB,EAAoBx4B,EAAUmyB,EAAmB2X,EAAyBnR,EAAmCoR,EAAqCtC,GAAxE,GAAA9O,QAAA,GAAiC,CAAjCA,EAAA,MAAmC,GAAAoR,QAAA,GAAmC,CAAnCA,EAAA,MAAqC,GAAAtC,QAAA,GAAe,CAAfA,EAAA,EAExKhwC,KAAK+2B,IAAMnnB,CACX5P,MAAKuyC,QAAUvC,CACfhwC,MAAKgoC,SAAWjH,CAChB/gC,MAAKioC,MAAQ1/B,CACbvI,MAAKwyC,QAAU9X,CACf16B,MAAKyyC,cAAgBJ,CACrBryC,MAAK0yC,mBAAqBxR,CAC1BlhC,MAAK2yC,qBAAuBL,CAC5BtyC,MAAK6c,QAAU,GAAI/b,MACnBd,MAAK4uC,cAAgB,GAAI9tC,OAM1BK,OAAAC,eAAWi+B,EAAA9+B,UAAA,MvFkrYJc,IuFlrYP,WAEC,MAAOrB,MAAK+2B,KvFmrYNx1B,WAAY,KACZC,aAAc,MuFlrYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,UvFqrYJc,IuFrrYP,WAEC,MAAOrB,MAAKuyC,SvFsrYNhxC,WAAY,KACZC,aAAc,MuFjrYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,WvFurYJc,IuFvrYP,WAEC,MAAOrB,MAAKgoC,UvFwrYNzmC,WAAY,KACZC,aAAc,MuFnrYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,QvFyrYJc,IuFzrYP,WAEC,MAAOrB,MAAKioC,OvF0rYN1mC,WAAY,KACZC,aAAc,MuFrrYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,UvF2rYJc,IuF3rYP,WAEC,MAAOrB,MAAKwyC,SvF4rYNjxC,WAAY,KACZC,aAAc,MuFvrYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,gBvF6rYJc,IuF7rYP,WAEC,MAAOrB,MAAKyyC,evF8rYNlxC,WAAY,KACZC,aAAc,MuFzrYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,qBvF+rYJc,IuF/rYP,WAEC,MAAOrB,MAAK0yC,oBvFgsYNnxC,WAAY,KACZC,aAAc,MuF3rYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,sBvFisYJc,IuFjsYP,WAEC,MAAOrB,MAAK2yC,sBvFksYNpxC,WAAY,KACZC,aAAc,MuF7rYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,UvFmsYJc,IuFnsYP,WAEC,MAAOrB,MAAK6c,SvFosYNtb,WAAY,KACZC,aAAc,MuF/rYrBL,QAAAC,eAAWi+B,EAAA9+B,UAAA,gBvFqsYJc,IuFrsYP,WAEC,MAAOrB,MAAK4uC,evFssYNrtC,WAAY,KACZC,aAAc,MuFhsYd69B;EAAA9+B,UAAA0gC,UAAP,SAAiB14B,GAEhBvI,KAAKioC,MAAQ1/B,EAOP82B,GAAA9+B,UAAAghC,YAAP,SAAmB7G,GAElB16B,KAAKwyC,QAAU9X,EAQT2E,GAAA9+B,UAAAsgC,QAAP,WAEC,GAAI7gC,KAAKyyC,cACRzyC,KAAKyyC,cAAc3E,oBAAoB9tC,MAMlCq/B,GAAA9+B,UAAAqiC,eAAP,WAEC,GAAI5iC,KAAKyyC,cACRzyC,KAAKyyC,cAAczE,2BAA2BhuC,MAMzCq/B,GAAA9+B,UAAAuiC,YAAP,SAAmB5oB,GAElB,GAAIla,KAAKyyC,cACR,MAAOzyC,MAAKyyC,cAAc/C,wBAAwB1vC,KAAMka,EAEzD,OAAOA,GAAMV,KAEf,OAAA6lB,KAE4Bv/B,GAAAJ,QAAnB2/B,OvF8rYHwE,8CAA8C,SAASjlC,EAAQkB,EAAOJ,GAC5E,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwF32YtB,IAAOgT,GAASzU,EAAc,iCAE9B,IAAOgO,GAAShO,EAAc,iCAE9B,IAAOqgC,GAAmBrgC,EAAY,0CACtC,IAAO8sC,GAAU9sC,EAAc,iCAC/B,IAAOotC,GAAUptC,EAAc,qCAC/B,IAAOqtC,GAAWrtC,EAAc,sCAEhC,IAAOg0C,GAAQh0C,EAAe,iCxFg3Y9B,IwFz2YMwgC,GAAkB,SAAA1+B,GAASX,EAA3Bq/B,EAAkB1+B,EAavB,SAbK0+B,KAeJ1+B,EAAAf,KAAAK,KAAMi/B,EAAoBmI,KATnBpnC,MAAA6yC,YAAqB,EAkBfzT,EAAAmE,aAAd,SAA2B4I,GAE1BA,EAAYA,EAAU7I,aACtB,OAAO6I,IAAa,MAQP/M,GAAA6D,aAAd,SAA2B16B,GAE1B,IACC,GAAIkU,GAAiBwvB,EAAYvqB,SAASnZ,EAC1C,IAAGkU,EAAQ1Y,QAAQ,kBAAoB,GAAK0Y,EAAQ1Y,QAAQ,kBAAoB,EAC/E,MAAO,KAER,OAAO,OACN,MAAOlF,GACR,MAAO,OAGR,MAAO,OAMDugC,GAAA7+B,UAAAutC,oBAAP,SAA2BC,GAE1B,GAAGA,EAAmBrxB,OAAO9c,OAAQ,CACpCI,KAAKqI,WAA6B0lC,EAAmBrxB,OAAO,EAC5D1c,MAAK6yC,YAAcC,EAAwBC,sBACrC,CACN/yC,KAAK6yC,YAAcC,EAAwB51B,gBAOtCkiB,GAAA7+B,UAAAytC,2BAAP,SAAkCD,GAEjC/tC,KAAK6yC,YAAcC,EAAwB51B,eAMrCkiB,GAAA7+B,UAAAmsC,iBAAP,WAEC,GAAIsG,EAEJ,QAAOhzC,KAAK6yC,aACX,IAAKC,GAAwBG,UAC5B,IACCjzC,KAAKkzC,KAAON,EAASO,mBAAmBP,EAASQ,SAASpzC,KAAKqwC,iBAAkB,gBAAgB,EAEjGrwC,MAAKqzC,WAAaT,EAASU,mBAAmBtzC,KAAKkzC,KAAM,YAEzDlzC,MAAKuzC,iBAAmBX,EAASO,mBAAmBnzC,KAAKkzC,KAAM,aAE/DlzC,MAAK6yC,YAAcC,EAAwBU,YAE1C,MAAMj0C,GACP,MAAOysC,GAAWwB,aAEnB,KAED,KAAKsF,GAAwBU,YAC5B,GAAIxzC,KAAKqzC,WAAW,CACnBrzC,KAAKsuC,gBAAgBtuC,KAAKqzC,WAAY,GAAI3H,GAAW1rC,KAAKqzC,YAC1DrzC,MAAKyuC,qCACC,CACN,MAAOzC,GAAWwB,aAGnB,KAED,KAAKsF,GAAwBC,kBAC5B,GAAIU,EACJ,IAAIC,EACJ,IAAIjrC,EACJ,IAAIC,EACJ,IAAIrB,EACJ,IAAIC,EACJ,IAAInF,GAAanC,KAAKuzC,iBAAiB3zC,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAI8C,EAAK9C,IAAK,CACpCq0C,EAAU1zC,KAAKuzC,iBAAiBl0C,EAChCo0C,GAAS,GAAIpgC,GAAUrT,KAAKqI,WAG5BI,GAAImqC,EAASU,mBAAmBI,EAAS,IACzChrC,GAAIkqC,EAASU,mBAAmBI,EAAS,IACzCrsC,GAAQurC,EAASU,mBAAmBI,EAAS,QAC7CpsC,GAASsrC,EAASU,mBAAmBI,EAAS,SAC9C,IAAIjrC,GAAKC,GAAKrB,GAASC,EACtBmsC,EAAOE,UAAY,GAAI/mC,GAAUk6B,SAASr+B,GAAIq+B,SAASp+B,GAAIo+B,SAASz/B,GAAQy/B,SAASx/B,GAGtFmB,GAAImqC,EAASU,mBAAmBI,EAAS,SACzChrC,GAAIkqC,EAASU,mBAAmBI,EAAS,SACzCrsC,GAAQurC,EAASU,mBAAmBI,EAAS,aAC7CpsC,GAASsrC,EAASU,mBAAmBI,EAAS,cAC9C,IAAIjrC,GAAKC,GAAKrB,GAASC,EACtBmsC,EAAOG,UAAY,GAAIhnC,GAAUk6B,SAASr+B,GAAIq+B,SAASp+B,GAAIo+B,SAASz/B,GAAQy/B,SAASx/B,GAEtFtH,MAAKitC,gBAAgBwG,EAAQb,EAASU,mBAAmBI,EAAS,SAGnE1zC,KAAK6yC,YAAcC,EAAwB51B,cAE3C,MAED,KAAK41B,GAAwB51B,eAC5B,MAAO8uB,GAAWwB,aAGpB,MAAOxB,GAAWa,cAEpB,OAAAzN,IAjJiC4M,EAqJjC,IAAM8G,GAAuB,WAA7B,QAAMA,MACSA,EAAAG,UAAmB,CACnBH,GAAAU,YAAqB,CACrBV,GAAAC,kBAA2B,CAC3BD,GAAA51B,eAAwB,CACvC,OAAA41B,KAPAhzC,GAAAJ,QAAS0/B,IxFs1YNjsB,iCAAiC,iCAAiC7F,iCAAiC,iCAAiCm2B,0CAA0C,0CAA0CgI,iCAAiC,iCAAiCgC,qCAAqC,qCAAqCC,sCAAsC,sCAAsCmG,iCAAiC,mCAAmC/P,2CAA2C,SAASllC,EAAQkB,EAAOJ,GAC1jB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyF5/YtB,IAAO4+B,GAAmBrgC,EAAY,0CACtC,IAAOotC,GAAUptC,EAAc,qCAC/B,IAAOqtC,GAAWrtC,EAAc,sCAChC,IAAOstC,GAASttC,EAAc,kCAE9B,IAAM0gC,GAAe,SAAA5+B,GAASX,EAAxBu/B,EAAe5+B,EAKpB,SALK4+B,KAOJ5+B,EAAAf,KAAAK,KAAMi/B,EAAoBqI,MAGbhI,EAAAiE,aAAd,SAA2B4I,GAG1BA,EAAYA,EAAU7I,aACtB,OAAO6I,IAAa,OAASA,GAAa,OAASA,GAAa,MAInD7M,GAAA2D,aAAd,SAA2B16B,GAG1B,GAAIA,YAAgBurC,kBACnB,MAAO,KAER,MAAMvrC,YAAgB2jC,IACrB,MAAO,MAER,IAAIG,GAA2B9jC,CAC/B,IAAIqpC,GAAoBtS,EAAgByU,cAAc1H,EACtD,OAAOuF,GAAU,KAAO,MAIlBtS,GAAA/+B,UAAAmsC,iBAAP,WAAA,GAAAvU,GAAAn4B,IAGC,IAAIka,EAEJ,IAAIla,KAAK4sC,cAAe,CACvB,MAAOZ,GAAWa,kBAEd,IAAI7sC,KAAK6Y,kBAAmB,CAChCqB,EAAQ+xB,EAAYmG,iBAAiBpyC,KAAK6Y,kBAC1C7Y,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBAEtC,IAAIljC,KAAKuI,eAAgBurC,kBAAkB,CAC/C,GAAIl7B,GAAuD5Y,KAAKuI,IAChE2R,GAAQ+xB,EAAYmG,iBAAiBx5B,EACrC5Y,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBAEtC,IAAIljC,KAAKuI,eAAgB2jC,GAAW,CACxC,GAAIG,GAAersC,KAAKuI,IACxB,IAAIqpC,GAAWtS,EAAgByU,cAAc1H,EAC7C,IAAIzzB,GAAoCqzB,EAAY0F,iBAAiBtF,EAAIuF,EACzE13B,GAAQ+xB,EAAYmG,iBAAiBx5B,EACrC5Y,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBAEtC,IAAIljC,KAAKuI,eAAgB/E,aAAa,CAC1C,GAAIouC,GAAWtS,EAAgByU,cAAc/zC,KAAKuI,KAAKyrC,WACvDh0C,MAAK6Y,kBAAoBozB,EAAYmF,mBAAmBpxC,KAAKuI,KAAMqpC,EAEnE13B,GAAQ+xB,EAAYmG,iBAAiBpyC,KAAK6Y,kBAC1C7Y,MAAKitC,gBAAyB/yB,EAAOla,KAAKkjC,gBAGtC,IAAIljC,KAAKuI,eAAgB8kC,MAAM,CAEnCrtC,KAAK6Y,kBAAoBozB,EAAY8F,YAAY/xC,KAAKuI,KAEtDvI,MAAK6Y,kBAAkBixB,OAAS,SAAC1uB,GAAU,MAAA+c,GAAK4H,eAAe3kB,GAC/Dpb,MAAK4sC,cAAgB,IAErB,OAAOZ,GAAWa,cAGnB7sC,KAAKutC,UAAYrzB,CAEjB,OAAO8xB,GAAWwB,aAIZlO,GAAA/+B,UAAAw/B,eAAP,SAAsB3kB,GAErBpb,KAAK4sC,cAAgB,MAGPtN,GAAAyU,cAAf,SAA6B1H,GAE5BA,EAAGxgC,SAAW,CACdsjC,SAAQnlC,IAAI,cAEZqiC,GAAGxgC,SAAW,CACd,IAAIwgC,EAAGC,oBAAsB,MAAQ,CACpC,MAAO,MAGRD,EAAGxgC,SAAW,CACd,IAAIwgC,EAAGG,aAAa,IAAM,OACzB,MAAO,KAERH,GAAGxgC,SAAW,CACd,IAAIwgC,EAAGG,aAAa,IAAM,OACzB,MAAO,KAERH,GAAGxgC,SAAW,CAEd,OAAO,MAET,OAAAyzB,IA5G8B0M,EA8G9BlsC,GAAyBJ,QAAhB4/B,IzF69YNmE,0CAA0C,0CAA0CgK,qCAAqC,qCAAqCC,sCAAsC,sCAAsCC,kCAAkC,oCAAoCsG,qCAAqC,SAASr1C,EAAQkB,EAAOJ,SAE1Ww0C,gDAAgD,SAASt1C,EAAQkB,EAAOJ,GAM9E,G0FrlZMy0C,GAAgB,WAAtB,QAAMA,MAKSA,EAAAC,YAAqB,YAKrBD,GAAAE,aAAsB,aACrC,OAAAF,KAE0Br0C,GAAAJ,QAAjBy0C,O1FulZHG,oDAAoD,SAAS11C,EAAQkB,EAAOJ,GAClF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2F9mZtB,IAAOgvB,GAAqBzwB,EAAW,oDACvC,IAAO21C,GAAc31C,EAAa,6CAElC,IAAM41C,GAAoB,SAAA9zC,GAASX,EAA7By0C,EAAoB9zC,EAEzB,SAFK8zC,KAIJ9zC,EAAAf,KAAAK,KAEAA,MAAKy0C,SAAS31B,UAAS,GAAIuQ,IAAwB5kB,QAIpDtJ,OAAAC,eAAWozC,EAAAj0C,UAAA,Q3F6mZJoB,I2F7mZP,SAAgBC,GAEf5B,KAAK00C,OAAS9yC,G3F8mZRL,WAAY,KACZC,aAAc,M2F3mZrBL,QAAAC,eAAWozC,EAAAj0C,UAAA,O3F+mZJoB,I2F/mZP,SAAeC,GAEd5B,KAAK20C,MAAQ/yC,G3FgnZPL,WAAY,KACZC,aAAc,M2F7mZrBL,QAAAC,eAAWozC,EAAAj0C,UAAA,gB3FinZJoB,I2FjnZP,SAAwBC,GAEvB5B,KAAK40C,cAAgBhzC,G3FknZfL,WAAY,KACZC,aAAc,M2F/mZdgzC,GAAAj0C,UAAA+B,MAAP,WAEC,GAAIA,GAA6B,GAAIkyC,EACrClyC,GAAMmyC,SAAS31B,SAAS9e,KAAKy0C,SAC7BnyC,GAAMoyC,OAAS10C,KAAK00C,MACpBpyC,GAAMqyC,MAAQ30C,KAAK20C,KACnBryC,GAAMsyC,cAAgB50C,KAAK40C,aAC3BtyC,GAAMuyC,mBACN,OAAOvyC,GAIDkyC,GAAAj0C,UAAAu0C,cAAP,WAEC90C,KAAK+0C,gBAAkB,MAEzB,OAAAP,IA5CmCD,EA8CLz0C,GAAAJ,QAArB80C,I3FinZNQ,oDAAoD,oDAAoDC,6CAA6C,+CAA+CC,2CAA2C,SAASt2C,EAAQkB,EAAOJ,SAEpQy1C,0DAA0D,SAASv2C,EAAQkB,EAAOJ,GACxF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4FvqZtB,IAAO8d,GAAQvf,EAAe,gCAC9B,IAAO6e,GAAe7e,EAAa,yCAEnC,IAAO21C,GAAc31C,EAAa,6CAElC,IAAMw2C,GAA0B,SAAA10C,GAASX,EAAnCq1C,EAA0B10C,EAO/B,SAPK00C,GAOOC,EAA4B1vB,GAPzC,GAAAwS,GAAAn4B,IASEU,GAAAf,KAAAK,KACAA,MAAKq1C,eAAiBA,CACtBr1C,MAAK2lB,MAAQA,CAEb3lB,MAAKs1C,mCAAqC,SAACl6B,GAA0B,MAAA+c,GAAKod,0BAA0Bn6B,IAIrGja,OAAAC,eAAWg0C,EAAA70C,UAAA,kB5FiqZJc,I4FjqZP,WAEC,MAAOrB,MAAKw1C,gBAAgBC,gB5FkqZtBl0C,WAAY,KACZC,aAAc,M4F/pZrBL,QAAAC,eAAWg0C,EAAA70C,UAAA,Q5FmqZJc,I4FnqZP,WAEC,MAAOrB,MAAKw1C,gBAAgBE,M5FqqZtB/zC,I4FjqZP,SAAgBC,GAEf5B,KAAKw1C,gBAAgBE,KAAO9zC,G5FkqZtBL,WAAY,KACZC,aAAc,M4F/pZrBL,QAAAC,eAAWg0C,EAAA70C,UAAA,O5FmqZJc,I4FnqZP,WAEC,MAAOrB,MAAKw1C,gBAAgBG,K5FqqZtBh0C,I4FjqZP,SAAeC,GAEd5B,KAAKw1C,gBAAgBG,IAAM/zC,G5FkqZrBL,WAAY,KACZC,aAAc,M4F/pZrBL,QAAAC,eAAWg0C,EAAA70C,UAAA,gB5FmqZJc,I4FnqZP,WAEC,MAAOrB,MAAKw1C,gBAAgBI,e5FqqZtBj0C,I4FjqZP,SAAwBC,GAEvB5B,KAAKw1C,gBAAgBI,cAAgBh0C,G5FkqZ/BL,WAAY,KACZC,aAAc,M4FhqZrBL,QAAAC,eAAWg0C,EAAA70C,UAAA,S5FmqZJc,I4FnqZP,WAEC,MAAOrB,MAAK61C,Q5FoqZNl0C,I4FjqZP,SAAiBC,GAEhB5B,KAAK61C,OAASj0C,CACd5B,MAAK60C,qB5FkqZCtzC,WAAY,KACZC,aAAc,M4FhqZrBL,QAAAC,eAAWg0C,EAAA70C,UAAA,kB5FmqZJoB,I4FnqZP,SAA0BC,GAEzB,GAAI5B,KAAKw1C,gBAAiB,CACzBx1C,KAAKw1C,gBAAgBr6B,oBAAoBsC,EAAgBG,eAAgB5d,KAAKs1C,oCAE/Et1C,KAAKw1C,gBAAkB5zC,CAEvB,IAAI5B,KAAKw1C,gBAAiB,CACzBx1C,KAAKw1C,gBAAgBx6B,iBAAiByC,EAAgBG,eAAgB5d,KAAKs1C,oCAE5Et1C,KAAK60C,qB5FmqZCtzC,WAAY,KACZC,aAAc,M4FjqZb4zC,GAAA70C,UAAAg1C,0BAAR,SAAkCn6B,GAEjCpb,KAAK60C,oBAICO,GAAA70C,UAAAu0C,cAAP,WAEC90C,KAAKy0C,SAAS31B,SAAS9e,KAAKw1C,gBAAgB/qC,OAE5C,IAAIqrC,GAAY91C,KAAK61C,OAAOz2C,CAC5B,IAAI22C,GAAY/1C,KAAK61C,OAAO31C,CAC5B,IAAI81C,GAAYh2C,KAAK61C,OAAOjwB,CAC5B,IAAIqwB,IAAaj2C,KAAK61C,OAAO51C,EAAI,GACjC,IAAIi2C,GAAeJ,GAAM,EAAG,GAAK,CACjC,IAAIK,GAAeJ,GAAM,EAAG,GAAK,CACjC,IAAI51C,GAAa,GAAIge,GAAS+3B,EAAOC,EAAO,EAAG,EAC/C,IAAIC,GAAmBp2C,KAAKy0C,SAASnyC,OACrC8zC,GAAQ5qB,QACR,IAAIlB,GAAa8rB,EAAQpwB,gBAAgB7lB,EACzCH,MAAKy0C,SAASxqB,UAAU,EAAG9pB,EAC3B,IAAIf,IAAYkrB,EAAE7hB,EAAEtI,EAAEsI,EAAI6hB,EAAE5hB,EAAEvI,EAAEuI,EAAI4hB,EAAEjM,EAAEle,EAAEke,EAAIiM,EAAEnV,EAAEhV,EAAEgV,IAAI2gC,EAAGxrB,EAAE7hB,EAAIstC,EAAGzrB,EAAE5hB,EAAIstC,EAAG1rB,EAAEjM,EAAI43B,EAAG3rB,EAAEnV,EACxFnV,MAAKy0C,SAAS1qB,YAAY,EAAG,GAAI5L,GAAS23B,EAAG12C,EAAG22C,EAAG32C,EAAG42C,EAAG52C,EAAG62C,EAAG72C,IAEjE,OAAAg2C,IA1GyCb,EA4GzCz0C,GAAoCJ,QAA3B01C,I5FiqZN53B,yCAAyC,yCAAyCqE,gCAAgC,gCAAgCozB,6CAA6C,+CAA+CoB,+DAA+D,SAASz3C,EAAQkB,EAAOJ,GACxU,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6FzxZtB,IAAO8d,GAAQvf,EAAe,gCAC9B,IAAO21C,GAAc31C,EAAa,6CAElC,IAAM03C,GAA+B,SAAA51C,GAASX,EAAxCu2C,EAA+B51C,EAQpC,SARK41C,GAQOC,EAAaC,EAAaC,EAAaC,GAElDh2C,EAAAf,KAAAK,KACAA,MAAK22C,MAAQJ,CACbv2C,MAAK42C,MAAQJ,CACbx2C,MAAK62C,MAAQJ,CACbz2C,MAAK82C,MAAQJ,EAGdv1C,OAAAC,eAAWk1C,EAAA/1C,UAAA,Q7FmxZJc,I6FnxZP,WAEC,MAAOrB,MAAK22C,O7FoxZNh1C,I6FjxZP,SAAgBC,GAEf5B,KAAK22C,MAAQ/0C,CACb5B,MAAK60C,qB7FkxZCtzC,WAAY,KACZC,aAAc,M6FhxZrBL,QAAAC,eAAWk1C,EAAA/1C,UAAA,Q7FmxZJc,I6FnxZP,WAEC,MAAOrB,MAAK42C,O7FoxZNj1C,I6FjxZP,SAAgBC,GAEf5B,KAAK42C,MAAQh1C,CACb5B,MAAK60C,qB7FkxZCtzC,WAAY,KACZC,aAAc,M6FhxZrBL,QAAAC,eAAWk1C,EAAA/1C,UAAA,Q7FmxZJc,I6FnxZP,WAEC,MAAOrB,MAAK62C,O7FoxZNl1C,I6FjxZP,SAAgBC,GAEf5B,KAAK62C,MAAQj1C,CACb5B,MAAK60C,qB7FkxZCtzC,WAAY,KACZC,aAAc,M6FhxZrBL,QAAAC,eAAWk1C,EAAA/1C,UAAA,Q7FmxZJc,I6FnxZP,WAEC,MAAOrB,MAAK82C,O7FoxZNn1C,I6FjxZP,SAAgBC,GAEf5B,KAAK82C,MAAQl1C,CACb5B,MAAK60C,qB7FkxZCtzC,WAAY,KACZC,aAAc,M6F/wZd80C,GAAA/1C,UAAAw2C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAI7yB,GAAa,GAAIlG,GAAS64B,GAAKC,EAAIC,EAAI,EAC3C7yB,GAAIrkB,KAAKm3C,mBAAmBnxB,gBAAgB3B,EAE5CA,GAAEhG,EAAI64B,CAEN,OAAO7yB,GAIDiyB,GAAA/1C,UAAA+B,MAAP,WAEC,GAAIA,GAAwC,GAAIg0C,GAAgCt2C,KAAK22C,MAAO32C,KAAK42C,MAAO52C,KAAK62C,MAAO72C,KAAK82C,MACzHx0C,GAAMoyC,OAAS10C,KAAK00C,MACpBpyC,GAAMqyC,MAAQ30C,KAAK20C,KACnBryC,GAAMsyC,cAAgB50C,KAAK40C,aAC3B,OAAOtyC,GAIDg0C,GAAA/1C,UAAAu0C,cAAP,WAEC,GAAI7wB,KACJ,IAAI9O,GAAW,GAAGnV,KAAK42C,MAAQ52C,KAAK22C,MACpC,IAAIvhC,GAAW,GAAGpV,KAAK82C,MAAQ92C,KAAK62C,MACpC,IAAI52C,GAAW,GAAGD,KAAK20C,MAAQ30C,KAAK00C,OAEpCzwB,GAAI,GAAK,EAAE9O,CACX8O,GAAI,GAAK,EAAE7O,CACX6O,GAAI,IAAMhkB,CACVgkB,GAAI,MAAQjkB,KAAK42C,MAAQ52C,KAAK22C,OAAOxhC,CACrC8O,GAAI,MAAQjkB,KAAK82C,MAAQ92C,KAAK62C,OAAOzhC,CACrC6O,GAAI,KAAOjkB,KAAK00C,OAAOz0C,CACvBgkB,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFjkB,MAAKy0C,SAAStwB,gBAAgBF,EAE9BjkB,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK22C,KACnH32C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK42C,KACnH52C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK62C,KACnH72C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK82C,KACpH92C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK00C,MAClH10C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,KAErH30C,MAAK+0C,gBAAkB,MAEzB,OAAAuB,IA7G8C/B,EA+GLz0C,GAAAJ,QAAhC42C,I7F2wZNz0B,gCAAgC,gCAAgCozB,6CAA6C,+CAA+CoC,sDAAsD,SAASz4C,EAAQkB,EAAOJ,GAC7O,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Fl4ZtB,IAAO8d,GAAQvf,EAAe,gCAC9B,IAAO21C,GAAc31C,EAAa,6CAElC,IAAM04C,GAAsB,SAAA52C,GAASX,EAA/Bu3C,EAAsB52C,EAO3B,SAPK42C,GAOOC,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,IAEX72C,EAAAf,KAAAK,KACAA,MAAKw3C,kBAAoBD,EAG1Bp2C,OAAAC,eAAWk2C,EAAA/2C,UAAA,oB9F83ZJc,I8F93ZP,WAEC,MAAOrB,MAAKw3C,mB9F+3ZN71C,I8F53ZP,SAA4BC,GAE3B,GAAIA,GAAS5B,KAAKw3C,kBAAmB,CACpC,OAEDx3C,KAAKw3C,kBAAoB51C,CACzB5B,MAAK60C,qB9F63ZCtzC,WAAY,KACZC,aAAc,M8F13Zd81C,GAAA/2C,UAAAw2C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAI7yB,GAAa,GAAIlG,GAAS64B,EAAKh3C,KAAKyK,OAAOsa,QAAQ,KAAMkyB,EAAKj3C,KAAKyK,OAAOsa,QAAQ,IAAKmyB,EAAI,EAC/F7yB,GAAIrkB,KAAKm3C,mBAAmBnxB,gBAAgB3B,EAG5CA,GAAEhG,EAAI64B,CAEN,OAAO7yB,GAIDizB,GAAA/2C,UAAA+B,MAAP,WAEC,GAAIA,GAA+B,GAAIg1C,EACvCh1C,GAAMoyC,OAAS10C,KAAK00C,MACpBpyC,GAAMqyC,MAAQ30C,KAAK20C,KACnBryC,GAAMsyC,cAAgB50C,KAAK40C,aAC3BtyC,GAAMi1C,iBAAmBv3C,KAAKw3C,iBAC9B,OAAOl1C,GAIDg1C,GAAA/2C,UAAAu0C,cAAP,WAEC,GAAI7wB,KACJjkB,MAAKy3C,MAAQz3C,KAAKw3C,kBAAkB,EACpCx3C,MAAK03C,MAAQ13C,KAAKy3C,MAAMz3C,KAAK40C,aAE7B,IAAI+C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAI93C,KAAK+3C,cAActvC,GAAK,GAAKzI,KAAK+3C,cAAcrvC,GAAK,GAAK1I,KAAK+3C,cAAc1wC,OAASrH,KAAKg4C,WAAW3wC,OAASrH,KAAK+3C,cAAczwC,QAAUtH,KAAKg4C,WAAW1wC,OAAQ,CAGvKqwC,GAAQ33C,KAAK03C,KACbE,GAAQ53C,KAAK03C,KACbG,IAAO73C,KAAKy3C,KACZK,GAAS93C,KAAKy3C,KAEdxzB,GAAI,GAAK,GAAGjkB,KAAKw3C,kBAAkBx3C,KAAK40C,cACxC3wB,GAAI,GAAK,EAAEjkB,KAAKw3C,iBAChBvzB,GAAI,IAAM,GAAGjkB,KAAK20C,MAAQ30C,KAAK00C,OAC/BzwB,GAAI,IAAMjkB,KAAK00C,QAAQ10C,KAAK00C,OAAS10C,KAAK20C,MAC1C1wB,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,IAAM,MAEJ,CAEN,GAAIg0B,GAAgBj4C,KAAK03C,OAAO13C,KAAKg4C,WAAW3wC,MAAMrH,KAAK+3C,cAAc1wC,MACzE,IAAI6wC,GAAcl4C,KAAKy3C,OAAOz3C,KAAKg4C,WAAW1wC,OAAOtH,KAAK+3C,cAAczwC,OACxE,IAAI6wC,GAAgBn4C,KAAK03C,OAAO13C,KAAK+3C,cAActvC,EAAE,EAAIzI,KAAKg4C,WAAW3wC,OAAOrH,KAAK+3C,cAAc1wC,MAAQrH,KAAK03C,KAChH,IAAIU,IAAiBp4C,KAAKy3C,OAAOz3C,KAAK+3C,cAAcrvC,EAAE,EAAI1I,KAAKg4C,WAAW1wC,QAAQtH,KAAK+3C,cAAczwC,OAAStH,KAAKy3C,KAEnHE,GAAOQ,EAASF,CAChBL,GAAQO,EAASF,CACjBJ,GAAMO,EAASF,CACfJ,GAASM,EAASF,CAElBj0B,GAAI,GAAK,EAAE,GAAG2zB,EAAQD,EACtB1zB,GAAI,IAAM,EAAE,GAAG4zB,EAAMC,EACrB7zB,GAAI,IAAM,GAAGjkB,KAAK20C,MAAQ30C,KAAK00C,OAE/BzwB,GAAI,KAAO2zB,EAAQD,IAAOC,EAAQD,EAClC1zB,GAAI,KAAO6zB,EAASD,IAAMC,EAASD,EACnC5zB,GAAI,IAAMjkB,KAAK00C,QAAQ10C,KAAK01C,KAAO11C,KAAK21C,IAExC1xB,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,EAGXjkB,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMO,CAC9G33C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMQ,CAC9G53C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMS,CAC9G73C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMU,CAC/G93C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK00C,MAClH10C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,KAErH30C,MAAKy0C,SAAStwB,gBAAgBF,EAE9BjkB,MAAK+0C,gBAAkB,MAEzB,OAAAuC,IAhHqC/C,EAkHNz0C,GAAAJ,QAAvB43C,I9F42ZLz1B,gCAAgC,gCAAgCozB,6CAA6C,+CAA+CD,qDAAqD,SAASp2C,EAAQkB,EAAOJ,GAC5O,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+Ft+ZtB,IAAO8d,GAAQvf,EAAe,gCAC9B,IAAOu1C,GAAgBv1C,EAAa,+CACpC,IAAO21C,GAAc31C,EAAa,6CAElC,IAAMywB,GAAqB,SAAA3uB,GAASX,EAA9BsvB,EAAqB3uB,EAS1B,SATK2uB,GASOgpB,EAAyBC,GAAzB,GAAAD,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAAC,QAAA,GAAsC,CAAtCA,EAAA,aAEpC53C,EAAAf,KAAAK,KAAMs4C,EATCt4C,MAAAu4C,aAAsB,EACtBv4C,MAAAw4C,aAAsB,GACtBx4C,MAAAy4C,cAAuB,EACvBz4C,MAAA04C,cAAuB,GACvB14C,MAAA24C,qBAA+B,IAC/B34C,MAAA44C,qBAA+B,KAKtC54C,MAAKq4C,YAAcA,EAMpBl3C,OAAAC,eAAWiuB,EAAA9uB,UAAA,uB/Fu+ZJc,I+Fv+ZP,WAEC,MAAOrB,MAAK24C,sB/Fw+ZNh3C,I+Fr+ZP,SAA+BC,GAE9B,GAAI5B,KAAK24C,sBAAwB/2C,EAChC,MAED5B,MAAK24C,qBAAuB/2C,CAE5B,IAAI5B,KAAK24C,qBACR34C,KAAK60C,qB/Fo+ZAtzC,WAAY,KACZC,aAAc,M+F/9ZrBL,QAAAC,eAAWiuB,EAAA9uB,UAAA,uB/Fq+ZJc,I+Fr+ZP,WAEC,MAAOrB,MAAK44C,sB/Fs+ZNj3C,I+Fn+ZP,SAA+BC,GAE9B,GAAI5B,KAAK44C,sBAAwBh3C,EAChC,MAED5B,MAAK44C,qBAAuBh3C,CAE5B5B,MAAK60C,qB/Fk+ZCtzC,WAAY,KACZC,aAAc,M+F79ZrBL,QAAAC,eAAWiuB,EAAA9uB,UAAA,e/Fm+ZJc,I+Fn+ZP,WAEC,MAAOrB,MAAKu4C,c/Fo+ZN52C,I+Fj+ZP,SAAuBC,GAEtB,GAAI5B,KAAKu4C,cAAgB32C,EACxB,MAED5B,MAAKu4C,aAAe32C,CAEpB5B,MAAK60C,qB/Fg+ZCtzC,WAAY,KACZC,aAAc,M+F39ZrBL,QAAAC,eAAWiuB,EAAA9uB,UAAA,e/Fi+ZJc,I+Fj+ZP,WAEC,MAAOrB,MAAKw4C,c/Fk+ZN72C,I+F/9ZP,SAAuBC,GAEtB,GAAI5B,KAAKw4C,cAAgB52C,EACxB,MAED5B,MAAKw4C,aAAe52C,CAEpB5B,MAAK60C,qB/F89ZCtzC,WAAY,KACZC,aAAc,M+Fz9ZrBL,QAAAC,eAAWiuB,EAAA9uB,UAAA,gB/F+9ZJc,I+F/9ZP,WAEC,MAAOrB,MAAKy4C,e/Fg+ZN92C,I+F79ZP,SAAwBC,GAEvB,GAAI5B,KAAKy4C,eAAiB72C,EACzB,MAED5B,MAAKy4C,cAAgB72C,CAErB5B,MAAK04C,cAAgB,EAAE5uC,KAAK+uC,IAAI74C,KAAKy4C,cAAc3uC,KAAKkZ,GAAG,IAE3DhjB,MAAK60C,qB/F29ZCtzC,WAAY,KACZC,aAAc,M+Ft9ZrBL,QAAAC,eAAWiuB,EAAA9uB,UAAA,gB/F49ZJc,I+F59ZP,WAEC,MAAOrB,MAAK04C,e/F69ZN/2C,I+F19ZP,SAAwBC,GAEvB,GAAI5B,KAAK04C,eAAiB92C,EACzB,MAED5B,MAAK04C,cAAgB92C,CAErB5B,MAAK60C,qB/Fy9ZCtzC,WAAY,KACZC,aAAc,M+Fr9Zd6tB,GAAA9uB,UAAAw2C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAI7yB,GAAa,GAAIlG,GAAS64B,GAAKC,EAAIC,EAAI,EAE3C7yB,GAAE5b,GAAKyuC,CACP7yB,GAAE3b,GAAKwuC,CAEP7yB,GAAIrkB,KAAKm3C,mBAAmBnxB,gBAAgB3B,EAG5CA,GAAEhG,EAAI64B,CAEN,OAAO7yB,GAIDgL,GAAA9uB,UAAA+B,MAAP,WAEC,GAAIA,GAA8B,GAAI+sB,GAAsBrvB,KAAKu4C,aACjEj2C,GAAMoyC,OAAS10C,KAAK00C,MACpBpyC,GAAMqyC,MAAQ30C,KAAK20C,KACnBryC,GAAMsyC,cAAgB50C,KAAK40C,aAC3BtyC,GAAMw2C,mBAAqB94C,KAAK84C,kBAChC,OAAOx2C,GAID+sB,GAAA9uB,UAAAu0C,cAAP,WAEC,GAAI7wB,KAEJ,IAAIjkB,KAAK44C,qBAAsB,CAC9B,GAAI54C,KAAK24C,qBACR34C,KAAK04C,cAAgB14C,KAAKw4C,YAE3Bx4C,MAAKu4C,aAAezuC,KAAKivC,KAAK,GAAI/4C,KAAK+3C,cAAczwC,OAAOtH,KAAKw4C,cAAc,IAAI1uC,KAAKkZ,EACxFhjB,MAAKy4C,cAAgB3uC,KAAKivC,KAAK,GAAI/4C,KAAK+3C,cAAc1wC,MAAMrH,KAAK04C,eAAe,IAAI5uC,KAAKkZ,OACnF,CACNhjB,KAAKw4C,aAAe,GAAIx4C,KAAK+3C,cAAczwC,OAAOwC,KAAK+uC,IAAI74C,KAAKu4C,aAAazuC,KAAKkZ,GAAG,IAErF,IAAIhjB,KAAK24C,qBACR34C,KAAK04C,cAAgB14C,KAAKw4C,iBAE1Bx4C,MAAK04C,cAAgB,GAAI14C,KAAK+3C,cAAc1wC,MAAMyC,KAAK+uC,IAAI74C,KAAKy4C,cAAc3uC,KAAKkZ,GAAG,KAGxF,GAAIg2B,IAAWh5C,KAAKi5C,UAAUj5C,KAAK04C,aACnC,IAAIQ,IAAW,EAAIl5C,KAAKi5C,WAAWj5C,KAAK04C,aACxC,IAAIS,IAAWn5C,KAAKo5C,UAAUp5C,KAAKw4C,YACnC,IAAIa,IAAW,EAAIr5C,KAAKo5C,WAAWp5C,KAAKw4C,YAExC,IAAIb,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,E/F68ZE,I+F18ZFK,MAAmBa,EAAUE,GAASl5C,KAAK+3C,cAActvC,EAAIuwC,EAAQh5C,KAAK+3C,cAAc1wC,MAC5F,IAAI+wC,IAAkBe,EAAUE,GAASr5C,KAAK+3C,cAAcrvC,EAAIywC,EAAQn5C,KAAK+3C,cAAczwC,MAE3FqwC,GAAOQ,GAAUe,EAAUF,GAASh5C,KAAKg4C,WAAW3wC,KACpDuwC,GAAQO,CACRN,GAAMO,CACNN,GAASM,GAAUiB,EAAUF,GAASn5C,KAAKg4C,WAAW1wC,MAEtD2c,GAAI,GAAK,GAAG2zB,EAAQD,EACpB1zB,GAAI,GAAK,GAAG6zB,EAASD,EACrB5zB,GAAI,IAAM2zB,EAAQD,IAAOC,EAAQD,EACjC1zB,GAAI,IAAM6zB,EAASD,IAAMC,EAASD,EAClC5zB,GAAI,KAAOjkB,KAAK20C,MAAQ30C,KAAK00C,SAAS10C,KAAK20C,MAAQ30C,KAAK00C,OACxDzwB,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACpFA,GAAI,KAAO,EAAEjkB,KAAK20C,MAAM30C,KAAK00C,QAAQ10C,KAAK20C,MAAQ30C,KAAK00C,OAEvD,IAAI10C,KAAK84C,oBAAsB3E,EAAiBE,aAC/CpwB,EAAI,IAAMA,EAAI,EAEfjkB,MAAKy0C,SAAStwB,gBAAgBF,EAE9BjkB,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAK00C,OAAOiD,CAClE33C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAK00C,OAAOkD,CAClE53C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAK00C,OAAOmD,CAClE73C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK00C,OAAOoD,CAEnE93C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,MAAMgD,CACnE33C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,MAAMiD,CACnE53C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,MAAMkD,CACnE73C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,MAAMmD,CAEnE93C,MAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,GAAKp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK00C,MAClH10C,MAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAKo3C,iBAAiB,IAAMp3C,KAAK20C,KAErH30C,MAAK+0C,gBAAkB,MAIzB,OAAA1lB,IAhOoCklB,EAkOLz0C,GAAAJ,QAAtB2vB,I/Fk8ZNxN,gCAAgC,gCAAgCqyB,+CAA+C,+CAA+Ce,6CAA6C,+CAA+CA,8CAA8C,SAASr2C,EAAQkB,EAAOJ,GACnU,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgG7qatB,IAAO8iB,GAAQvkB,EAAe,gCAC9B,IAAOgO,GAAShO,EAAc,iCAE9B,IAAOic,GAAejc,EAAa,yCACnC,IAAO6e,GAAe7e,EAAa,yCACnC,IAAO0W,GAAmB1W,EAAY,6CAGtC,IAAM21C,GAAc,SAAA7zC,GAASX,EAAvBw0C,EAAc7zC,EAkBnB,SAlBK6zC,GAkBO+D,GAAA,GAAAA,QAAA,GAAsC,CAAtCA,EAAA,aAEX53C,EAAAf,KAAAK,KAlBMA,MAAAy0C,SAAoB,GAAItxB,EACxBnjB,MAAA+3C,cAA0B,GAAInrC,EAC9B5M,MAAAg4C,WAAuB,GAAIprC,EAC3B5M,MAAA00C,OAAgB,EAChB10C,MAAA20C,MAAe,GACf30C,MAAA40C,cAAuB,CAEvB50C,MAAA+0C,gBAA0B,IAC1B/0C,MAAAo3C,mBAEAp3C,MAAAi5C,UAAmB,EACnBj5C,MAAAo5C,UAAmB,EAGlBp5C,MAAAs5C,qBAA+B,IAMtCt5C,MAAKs4C,iBAAmBA,EAMzBn3C,OAAAC,eAAWmzC,EAAAh0C,UAAA,oBhGsqaJc,IgGtqaP,WAEC,MAAOrB,MAAK84C,oBhGuqaNn3C,IgGpqaP,SAA4BC,GAE3B,GAAI5B,KAAK84C,oBAAsBl3C,EAC9B,MAED5B,MAAK84C,mBAAqBl3C,CAE1B5B,MAAK60C,qBhGmqaCtzC,WAAY,KACZC,aAAc,MgGjqarBL,QAAAC,eAAWmzC,EAAAh0C,UAAA,kBhGoqaJc,IgGpqaP,WAEC,MAAOrB,MAAKo3C,kBhGqqaNz1C,IgGlqaP,SAA0B8zC,GAEzBz1C,KAAKo3C,iBAAmB3B,GhGmqalBl0C,WAAY,KACZC,aAAc,MgGjqarBL,QAAAC,eAAWmzC,EAAAh0C,UAAA,UhGoqaJc,IgGpqaP,WAEC,GAAIrB,KAAK+0C,gBAAiB,CACzB/0C,KAAK80C,eACL90C,MAAK+0C,gBAAkB,MAExB,MAAO/0C,MAAKy0C,UhGqqaN9yC,IgGlqaP,SAAkBC,GAEjB5B,KAAKy0C,SAAW7yC,CAChB5B,MAAK60C,qBhGmqaCtzC,WAAY,KACZC,aAAc,MgGjqarBL,QAAAC,eAAWmzC,EAAAh0C,UAAA,QhGoqaJc,IgGpqaP,WAEC,MAAOrB,MAAK00C,QhGqqaN/yC,IgGlqaP,SAAgBC,GAEf,GAAIA,GAAS5B,KAAK00C,OAAQ,CACzB,OAED10C,KAAK00C,OAAS9yC,CACd5B,MAAK60C,qBhGmqaCtzC,WAAY,KACZC,aAAc,MgGjqarBL,QAAAC,eAAWmzC,EAAAh0C,UAAA,WhGoqaJc,IgGpqaP,WAEC,MAAOrB,MAAKi5C,WhGqqaNt3C,IgGlqaP,SAAmBC,GAElB,GAAI5B,KAAKi5C,WAAar3C,EACrB,MAED5B,MAAKi5C,UAAYr3C,GhGkqaXL,WAAY,KACZC,aAAc,MgGhqarBL,QAAAC,eAAWmzC,EAAAh0C,UAAA,WhGmqaJc,IgGnqaP,WAEC,MAAOrB,MAAKo5C,WhGoqaNz3C,IgGjqaP,SAAmBC,GAElB,GAAI5B,KAAKo5C,WAAax3C,EACrB,MAED5B,MAAKo5C,UAAYx3C,GhGiqaXL,WAAY,KACZC,aAAc,MgG/parBL,QAAAC,eAAWmzC,EAAAh0C,UAAA,OhGkqaJc,IgGlqaP,WAEC,MAAOrB,MAAK20C,OhGmqaNhzC,IgGhqaP,SAAeC,GAEd,GAAIA,GAAS5B,KAAK20C,MAAO,CACxB,OAED30C,KAAK20C,MAAQ/yC,CACb5B,MAAK60C,qBhGiqaCtzC,WAAY,KACZC,aAAc,MgG/pad+yC,GAAAh0C,UAAAm2B,QAAP,SAAe6iB,GAEd,GAAIl1B,GAAarkB,KAAKyK,OAAOub,gBAAgBuzB,EAC7Cl1B,GAAE5b,EAAI4b,EAAE5b,EAAE4b,EAAElP,CACZkP,GAAE3b,GAAK2b,EAAE3b,EAAE2b,EAAElP,CAGbkP,GAAEhG,EAAIk7B,EAAQl7B,CAEd,OAAOgG,GAGRljB,QAAAC,eAAWmzC,EAAAh0C,UAAA,sBhG8paJc,IgG9paP,WAEC,GAAIrB,KAAKs5C,qBAAsB,CAC9B,IAAKt5C,KAAKw5C,cACTx5C,KAAKw5C,cAAgB,GAAIr2B,EAE1BnjB,MAAKw5C,cAAc16B,SAAS9e,KAAKyK,OACjCzK,MAAKw5C,cAAchuB,QACnBxrB,MAAKs5C,qBAAuB,MAE7B,MAAOt5C,MAAKw5C,ehG8paNj4C,WAAY,KACZC,aAAc,MgG5pad+yC,GAAAh0C,UAAAw2C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,KAAM,IAAI5hC,GAGJi/B,GAAAh0C,UAAA+B,MAAP,WAEC,KAAM,IAAIgT,GAGXnU,QAAAC,eAAWmzC,EAAAh0C,UAAA,iBhG2paJc,IgG3paP,WAEC,MAAOrB,MAAK40C,ehG4paNjzC,IgGzpaP,SAAyBC,GAExB,GAAI5B,KAAK40C,eAAiBhzC,EACzB,MAED5B,MAAK40C,cAAgBhzC,CAErB5B,MAAK60C,qBhGwpaCtzC,WAAY,KACZC,aAAc,MgGtpad+yC,GAAAh0C,UAAAs0C,kBAAP,WAEC70C,KAAK+0C,gBAAkB,IACvB/0C,MAAKs5C,qBAAuB,IAC5Bt5C,MAAKqR,cAAc,GAAIoM,GAAgBA,EAAgBG,eAAgB5d,OAGjEu0C,GAAAh0C,UAAAu0C,cAAP,WAEC,KAAM,IAAIx/B,GAGJi/B,GAAAh0C,UAAAk5C,oBAAP,SAA2BhxC,EAAUC,EAAUrB,EAAcC,GAE5DtH,KAAK+3C,cAActvC,EAAIA,CACvBzI,MAAK+3C,cAAcrvC,EAAIA,CACvB1I,MAAK+3C,cAAc1wC,MAAQA,CAC3BrH,MAAK+3C,cAAczwC,OAASA,CAC5BtH,MAAK60C,oBAGCN,GAAAh0C,UAAAm5C,iBAAP,SAAwBjxC,EAAUC,EAAUrB,EAAcC,GAEzDtH,KAAKg4C,WAAWvvC,EAAIA,CACpBzI,MAAKg4C,WAAWtvC,EAAIA,CACpB1I,MAAKg4C,WAAW3wC,MAAQA,CACxBrH,MAAKg4C,WAAW1wC,OAASA,CACzBtH,MAAK60C,oBAEP,OAAAN,IAzM6B15B,EA2M7B/a,GAAwBJ,QAAf60C,IhGmpaNj+B,6CAA6C,6CAA6CsE,yCAAyC,yCAAyC4C,yCAAyC,yCAAyCmJ,gCAAgC,gCAAgCrZ,iCAAiC,mCAAmCqsC,+BAA+B,SAAS/6C,EAAQkB,EAAOJ,GiGt2a5b,GAAMk6C,GAAQ,WAAd,QAAMA,MAKSA,EAAAC,EAAoB,EAKpBD,GAAAE,UAA4B,EAK5BF,GAAAG,MAAwB,QAKxBH,GAAAI,EAAoB,EAKpBJ,GAAA5oB,KAAuB,QAKvB4oB,GAAAK,UAA4B,GAK5BL,GAAAM,UAA4B,GAK5BN,GAAAO,UAA4B,CAK5BP,GAAArtC,KAAuB,QAKvBqtC,GAAAQ,EAAoB,EAKpBR,GAAAS,UAA4B,EAK5BT,GAAAU,aAA+B,QAK/BV,GAAAW,WAA6B,QAK7BX,GAAAY,MAAwB,GAMxBZ,GAAAa,QAA0B,EAK1Bb,GAAAc,QAA0B,EAU1Bd,GAAAe,EAAoB,EAKpBf,GAAAgB,OAAyB,EAKzBhB,GAAAiB,KAAuB,EAKvBjB,GAAAkB,IAAsB,QAKtBlB,GAAAmB,EAAoB,EAKpBnB,GAAAoB,IAAsB,EAKtBpB,GAAAqB,MAAwB,EAKxBrB,GAAAsB,MAAwB,GAKxBtB,GAAAuB,OAAyB,EAKzBvB,GAAAwB,KAAuB,QAKvBxB,GAAAyB,EAAoB,EAKpBzB,GAAA0B,GAAqB,GAKrB1B,GAAA2B,IAAsB,GAKtB3B,GAAA4B,IAAsB,GAKtB5B,GAAA6B,IAAsB,GAKtB7B,GAAA8B,IAAsB,GAKtB9B,GAAA+B,IAAsB,GAKtB/B,GAAAgC,IAAsB,GAKtBhC,GAAAiC,GAAqB,GAKrBjC,GAAAkC,GAAqB,GAKrBlC,GAAAmC,GAAqB,GAKrBnC,GAAAoC,GAAqB,GAKrBpC,GAAAqC,GAAqB,GAKrBrC,GAAAsC,GAAqB,GAKrBtC,GAAAuC,GAAqB,GAKrBvC,GAAAwC,GAAqB,GAKrBxC,GAAAyC,aAA+B,QAK/BzC,GAAA0C,EAAoB,EAKpB1C,GAAAptC,MAAwB,QAKxBotC,GAAA2C,MAAwB,QAKxB3C,GAAA4C,EAAoB,EAKpB5C,GAAA6C,KAAuB,QAKvB7C,GAAA8C,KAAuB,EAKvB9C,GAAA+C,EAAoB,EAKpB/C,GAAAgD,KAAuB,QAKvBhD,GAAAiD,MAAwB,QAKxBjD,GAAAkD,OAAyB,EAKzBlD,GAAAmD,EAAoB,EAKpBnD,GAAAoD,EAAoB,EAKpBpD,GAAAqD,cAAuB,OAKvBrD,GAAAsD,cAAuB,OAKvBtD,GAAAuD,qBAA8B,QAK9BvD,GAAAwD,kBAA2B,OAK3BxD,GAAAyD,eAAwB,QAKxBzD,GAAA0D,mBAA4B,QAK5B1D,GAAA2D,mBAA4B,OAK5B3D,GAAA4D,kBAA2B,MAK3B5D,GAAA6D,YAAqB,KAKrB7D,GAAA8D,gBAAyB,MAKzB9D,GAAA+D,WAAoB,IAKpB/D,GAAAgE,YAAqB,KAKrBhE,GAAAiE,YAAqB,KAKrBjE,GAAAkE,YAAqB,KAKrBlE,GAAAmE,YAAqB,KAKrBnE,GAAAoE,YAAqB,KAKrBpE,GAAAqE,YAAqB,KAKrBrE,GAAAsE,YAAqB,KAKrBtE,GAAAuE,YAAqB,KAKrBvE,GAAAwE,YAAqB,KAKrBxE,GAAAyE,YAAqB,KAKrBzE,GAAA0E,WAAoB,IAKpB1E,GAAA2E,YAAqB,KAKrB3E,GAAA4E,YAAqB,KAKrB5E,GAAA6E,YAAqB,KAKrB7E,GAAA8E,YAAqB,KAKrB9E,GAAA+E,YAAqB,KAKrB/E,GAAAgF,YAAqB,KAKrBhF,GAAAiF,YAAqB,KAKrBjF,GAAAkF,YAAqB,KAKrBlF,GAAAmF,YAAqB,KAKrBnF,GAAAoF,YAAqB,KAKrBpF,GAAAqF,WAAoB,IAKpBrF,GAAAsF,YAAqB,KAKrBtF,GAAAuF,YAAqB,KAKrBvF,GAAAwF,YAAqB,KAKrBxF,GAAAyF,YAAqB,KAKrBzF,GAAA0F,YAAqB,KAKrB1F,GAAA2F,YAAqB,KAKrB3F,GAAA4F,WAAoB,IAKpB5F,GAAA6F,WAAoB,IAKpB7F,GAAA8F,WAAoB,IAKpB9F,GAAA+F,WAAoB,IAKpB/F,GAAAgG,WAAoB,IAKpBhG,GAAAiG,WAAoB,IAKpBjG,GAAAkG,aAAsB,MAKtBlG,GAAAmG,aAAsB,MAKtBnG,GAAAoG,aAAsB,MAKtBpG,GAAAqG,eAAwB,QAKxBrG,GAAAsG,mBAA4B,QAK5BtG,GAAAuG,mBAA4B,OAK5BvG,GAAAwG,kBAA2B,MAK3BxG,GAAAyG,aAAsB,MAKtBzG,GAAA0G,mBAA4B,QAK5B1G,GAAA2G,aAAsB,MAKtB3G,GAAA4G,iBAA0B,MAK1B5G,GAAA6G,eAAwB,MAKxB7G,GAAA8G,cAAuB,OAKvB9G,GAAA+G,aAAsB,MAKtB/G,GAAAgH,cAAuB,OAKvBhH,GAAAiH,oBAA6B,UAK7BjH,GAAAkH,aAAsB,MAKtBlH,GAAAmH,cAAuB,OAKvBnH,GAAAoH,mBAA4B,OAK5BpH,GAAAqH,mBAA4B,SAK5BrH,GAAAsH,eAAwB,QAKxBtH,GAAAuH,aAAsB,MAKtBvH,GAAAwH,eAAwB,QAKxBxH,GAAAyH,eAAwB,KAKxBzH,GAAA0H,aAAsB,MAKtB1H,GAAA2H,gBAAyB,IAKzB3H,GAAA4H,aAAsB,MAKtB5H,GAAA6H,EAAoB,EAKpB7H,GAAA8H,KAAuB,QAKvB9H,GAAA+H,KAAuB,EAKvB/H,GAAAgI,YAA8B,GAK9BhI,GAAAiI,KAAuB,QAKvBjI,GAAAkI,EAAoB,EAKpBlI,GAAAmI,aAA+B,QAK/BnI,GAAAoI,KAAuB,QAKvBpI,GAAAqI,MAAwB,GAKxBrI,GAAAsI,EAAoB,EAKpBtI,GAAAuI,KAAuB,QAKvBvI,GAAAwI,SAA2B,EAK3BxI,GAAAyI,SAA2B,EAK3BzI,GAAA0I,SAA2B,EAK3B1I,GAAA2I,SAA2B,EAK3B3I,GAAA4I,SAA2B,EAK3B5I,GAAA6I,SAA2B,EAK3B7I,GAAA8I,SAA2B,EAK3B9I,GAAA+I,SAA2B,EAK3B/I,GAAAgJ,SAA2B,EAK3BhJ,GAAAiJ,SAA2B,EAK3BjJ,GAAAkJ,OAAyB,EAKzBlJ,GAAAmJ,SAA2B,EAK3BnJ,GAAAoJ,SAA2B,EAK3BpJ,GAAAqJ,SAA2B,EAK3BrJ,GAAAsJ,SAA2B,EAK3BtJ,GAAAuJ,SAA2B,GAK3BvJ,GAAAwJ,SAA2B,GAK3BxJ,GAAAyJ,SAA2B,GAK3BzJ,GAAA0J,SAA2B,GAK3B1J,GAAA2J,SAA2B,GAK3B3J,GAAA4J,SAA2B,GAK3B5J,GAAA6J,WAA6B,GAK7B7J,GAAA8J,eAAiC,GAKjC9J,GAAA+J,cAAgC,GAKhC/J,GAAAgK,aAA+B,GAK/BhK,GAAAiK,gBAAkC,GAKlCjK,GAAAkK,gBAAkC,GAKlClK,GAAAmK,EAAoB,EAKpBnK,GAAAoK,EAAoB,EAKpBpK,GAAAqK,UAA4B,EAK5BrK,GAAAsK,QAA0B,EAK1BtK,GAAAuK,MAAwB,QAKxBvK,GAAAwK,OAAyB,GAKzBxK,GAAAyK,KAAuB,QAKvBzK,GAAA0K,SAA2B,QAK3B1K,GAAA2K,EAAoB,EAKpB3K,GAAA4K,MAAwB,GAKxB5K,GAAA6K,EAAoB,EAKpB7K,GAAA8K,OAAyB,QAKzB9K,GAAAntC,IAAsB,QAKtBmtC,GAAA+K,OAAyB,QAKzB/K,GAAAgL,MAAwB,EAKxBhL,GAAAiL,aAA+B,GAK/BjL,GAAAkL,EAAoB,EAKpBlL,GAAAmL,OAAyB,QAKzBnL,GAAAoL,UAA4B,GAK5BpL,GAAAqL,MAAwB,QAKxBrL,GAAAsL,MAAwB,EAKxBtL,GAAAuL,cAAgC,QAKhCvL,GAAAwL,aAA+B,QAK/BxL,GAAAyL,MAAwB,GAKxBzL,GAAA0L,MAAwB,EAKxB1L,GAAA2L,KAAuB,QAKvB3L,GAAA4L,SAA2B,QAK3B5L,GAAA6L,EAAoB,EAKpB7L,GAAA8L,IAAsB,CAKtB9L,GAAA+L,EAAoB,EAKpB/L,GAAAgM,GAAqB,EAKrBhM,GAAAiM,EAAoB,EAKpBjM,GAAAkM,IAAsB,QAKtBlM,GAAAmM,EAAoB,EAKpBnM,GAAAoM,EAAoB,EAKpBpM,GAAAqM,EAAoB,EAKpBrM,GAAAsM,OAAyB,QAKzBtM,GAAAuM,EAAoB,EAEnC,OAAAvM,KAEA95C,GAAkBJ,QAATk6C,OjG0paH1tC,0CAA0C,SAAStN,EAAQkB,EAAOJ,GkGvpcxE,GAAOwH,GAAUtI,EAAc,mCAE/B,IAAMuI,GAAgB,WAAtB,QAAMA,MAESA,EAAA4D,UAAd,SAAwB0vB,EAAkCryB,EAAgB0C,EAAcvD,GAEvF,GAAIuD,GAAS,GAAOvD,EAAa,CAChCkzB,EAAQ2rB,UAAUh+C,EAAKK,EAAGL,EAAKM,EAAGN,EAAKf,MAAOe,EAAKd,YAC7C,CACN,GAAIiE,GAAgBrE,EAAWsE,mBAAmBV,EAElD,IAAIvD,EACHkzB,EAAQ4rB,UAAY,QAAU96C,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAG,IAAM,QAE5FkvB,GAAQ4rB,UAAY,QAAU96C,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAK,KAEzEkvB,GAAQzyB,SAASI,EAAKK,EAAGL,EAAKM,EAAGN,EAAKf,MAAOe,EAAKd,SAItCH,GAAAqD,YAAd,SAA0BiwB,EAAkC6rB,EAAkBh9C,EAAsBgB,GAEnGmwB,EAAQ8rB,UAAUD,EAAMh9C,EAAWb,EAAGa,EAAWZ,EAAGY,EAAWjC,MAAOiC,EAAWhC,OAAQgD,EAAS7B,EAAG6B,EAAS5B,EAAG4B,EAASjD,MAAOiD,EAAShD,QAG7HH,GAAA0D,MAAd,SAAoB4vB,EAAkCpwB,EAAoBI,EAAetC,EAA+BuC,EAAqBC,EAAoBC,GAEhK6vB,EAAQ+rB,MAER,IAAI/7C,GAAU,KACbgwB,EAAQgsB,aAAah8C,EAAOrL,EAAGqL,EAAOvK,EAAGuK,EAAOmb,EAAGnb,EAAOxK,EAAGwK,EAAOwjB,GAAIxjB,EAAOyjB,GAEhF,IAAIvjB,GAAY,KACf8vB,EAAQ8rB,UAAUl8C,EAAQM,EAASlC,EAAGkC,EAASjC,EAAGiC,EAAStD,MAAOsD,EAASrD,YAE3EmzB,GAAQ8rB,UAAUl8C,EAAQ,EAAG,EAE9BowB,GAAQisB,UAEV,OAAAv/C,KAEArH,GAA0BJ,QAAjByH,IlGipcNgF,mCAAmC,qCAAqCw6C,uCAAuC,SAAS/nD,EAAQkB,EAAOJ,GmG9rc1I,GAAO4V,GAAmB1W,EAAY,6CAEtC,IAAMgoD,GAAa,WAQlB,QARKA,KAEE5mD,KAAA6L,SAAkB,CAClB7L,MAAAJ,OAAgB,CAChBI,MAAA6mD,MAAe,GAQfD,EAAArmD,UAAAumD,UAAP,SAAiB5mD,GAEhB,KAAM,iBAGA0mD,GAAArmD,UAAAksC,SAAP,WAEC,KAAM,iBAGAma,GAAArmD,UAAAwmD,kBAAP,SAAyB7mD,GAExB,KAAM,iBAGA0mD,GAAArmD,UAAAymD,iBAAP,WAEC,KAAM,iBAGAJ,GAAArmD,UAAA0mD,mBAAP,SAA0B/mD,GAEzB,KAAM,iBAGA0mD,GAAArmD,UAAA+rC,kBAAP,WAEC,KAAM,iBAGAsa,GAAArmD,UAAA2mD,iBAAP,SAAwBhnD,GAEvB,KAAM,iBAGA0mD,GAAArmD,UAAAuL,gBAAP,WAEC,KAAM,iBAGA86C,GAAArmD,UAAA4mD,WAAP,SAAkBjnD,GAEjB,KAAM,iBAGA0mD,GAAArmD,UAAA6mD,YAAP,SAAmB3+C,GAElB,KAAM,iBAGAm+C,GAAArmD,UAAA8mD,UAAP,SAAiBnnD,GAEhB,KAAM,iBAGA0mD,GAAArmD,UAAA+mD,cAAP,SAAqB7+C,GAEpB,KAAM,iBAGAm+C,GAAArmD,UAAA4xC,kBAAP,WAEC,KAAM,IAAI78B,GAAoB,uDAGxBsxC,GAAArmD,UAAAmhB,SAAP,WAEC,MAAO,iBAAmB1hB,KAAK6mD,MAAQ,eAAiB7mD,KAAK6L,SAAW,WAAa7L,KAAKJ,OAGpFgnD,GAAArmD,UAAAgnD,aAAP,SAAoBC,EAAO5mD,GAE1B,GAAIA,GAASuX,WAAavX,EAAQZ,KAAKJ,OAASI,KAAK6L,SACpDjL,EAAQZ,KAAKJ,OAASI,KAAK6L,QAC5B,IAAIjL,EAAQ4mD,EAAM5nD,OAAS4nD,EAAM37C,SAChCjL,EAAQ4mD,EAAM5nD,OAAS4nD,EAAM37C,QAC9B,IAAI47C,GAAM7mD,CACV,IAAI5B,GAAI,IACR,OAAOA,GAAK4B,GAAS,EAAG,CACvBA,GAAS,CACT,IAAIZ,KAAK8L,mBAAqB07C,EAAM17C,kBAAmB9M,EAAI,MAE5D,MAAOA,GAAK4B,GAAS,EAAG,CACvBA,GACA,IAAIZ,KAAKgnD,oBAAsBQ,EAAMR,mBAAoBhoD,EAAI,MAE9D,GAAI0oD,EACJ1nD,MAAK6L,UAAa67C,EAAK9mD,CACvB4mD,GAAM37C,UAAa67C,EAAK9mD,CACxB,OAAO5B,GAGD4nD,GAAArmD,UAAAonD,kBAAP,SAAyB1oD,GAExB,IAAK,GAAII,GAAW,EAAGA,EAAIJ,EAAEW,OAAQP,IAAK,CACzC,GAAIglB,GAAIplB,EAAE2iC,OAAOviC,IAIZunD,GAAArmD,UAAAqnD,cAAP,WAEC,GAAIC,GAAS7nD,KAAK6L,QAClB7L,MAAK6L,SAAW,CAChB,IAAIi8C,GAAe,CAEnB,SAASC,GAAYt/C,EAAGu/C,GAEvB,GAAIC,IAAsB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAIC,GAAY,EAChB,KAAK,GAAIjoD,GAAW,EAAGA,EAAI+nD,EAAQ/nD,IAAK,CACvCioD,EAAKD,EAAKx/C,IAAMxI,GAAK,GAAM,IAAOioD,EAEnC,MAAOA,GAGR,IAAK,GAAI7oD,GAAI,EAAGA,EAAIW,KAAKJ,OAAQP,GAAKyoD,EAAO,CAC5C,GAAI7oD,GAAW8oD,EAAY1oD,EAAG,GAAK,GACnC,KAAK,GAAI+E,GAAW,EAAGA,EAAI0jD,GAASzoD,EAAI+E,EAAIpE,KAAKJ,OAAQwE,IAAK,CAC7DnF,GAAK,IAAM8oD,EAAY/nD,KAAKgnD,mBAAoB,GAEjD7X,QAAQnlC,IAAI/K,GAEbe,KAAK6L,SAAWg8C,EAGVjB,GAAArmD,UAAA4nD,iBAAP,SAAwBvnD,GAEvB,GAAIA,GAASuX,WAAavX,EAAQZ,KAAKJ,OAASI,KAAK6L,SACpDjL,EAAQZ,KAAKJ,OAASI,KAAK6L,QAC5B,MAAMjL,EAAQ,GAAI,MAAO,EAEzB,OAAOgmD,GAAcwB,wBAAwBxnD,EAAOZ,KAAKgnD,iBAAkBhnD,MAG9D4mD,GAAAwB,wBAAd,SAAsCxnD,EAAOynD,EAAqBC,GAEjE,GAAItpD,GAAI,EACR,IAAIupD,GAAIC,EAAIC,EAAIC,EAAMC,EAAMC,EAAMC,CAClC,IAAIC,GAAYlC,EAAcmC,SAC9B,OAAOnoD,GAAS,EAAG,CAClB2nD,EAAKF,EAAoB/hB,MAAMgiB,EAC/BE,GAAKH,EAAoB/hB,MAAMgiB,EAC/BG,GAAKJ,EAAoB/hB,MAAMgiB,EAC/BI,GAAOH,GAAM,CACbI,IAASJ,EAAK,IAAM,EAAMC,GAAM,CAChCI,IAASJ,EAAK,KAAO,EAAMC,GAAM,CACjCI,GAAOJ,EAAK,EACZzpD,IAAK8pD,EAAUlnB,OAAO8mB,GAAQI,EAAUlnB,OAAO+mB,GAAQG,EAAUlnB,OAAOgnB,GAAQE,EAAUlnB,OAAOinB,EACjGjoD,IAAS,EAGV,GAAIA,GAAS,EAAG,CACf2nD,EAAKF,EAAoB/hB,MAAMgiB,EAC/BE,GAAKH,EAAoB/hB,MAAMgiB,EAC/BI,GAAOH,GAAM,CACbI,IAASJ,EAAK,IAAM,EAAMC,GAAM,CAChCI,IAASJ,EAAK,KAAO,CACrBxpD,IAAK8pD,EAAUlnB,OAAO8mB,GAAQI,EAAUlnB,OAAO+mB,GAAQG,EAAUlnB,OAAOgnB,GAAQ,QAC1E,IAAIhoD,GAAS,EAAG,CACtB2nD,EAAKF,EAAoB/hB,MAAMgiB,EAC/BI,GAAOH,GAAM,CACbI,IAASJ,EAAK,IAAM,CACpBvpD,IAAK8pD,EAAUlnB,OAAO8mB,GAAQI,EAAUlnB,OAAO+mB,GAAQ,KAExD,MAAO3pD,GA1KM4nD,GAAAmC,UAAY,kEA4K3B,OAAAnC,KAEuB9mD,GAAAJ,QAAdknD,InGspcNtwC,6CAA6C,+CAA+C0yC,yCAAyC,SAASpqD,EAAQkB,EAAOJ,GAChK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoGj1ctB,IAAOumD,GAAahoD,EAAa,sCAEjC,IAAMqqD,GAAe,SAAAvoD,GAASX,EAAxBkpD,EAAevoD,EAWpB,SAXKuoD,KAaJvoD,EAAAf,KAAAK,KACAA,MAAKkpD,SACLlpD,MAAK6mD,MAAQ,QAGPoC,EAAA1oD,UAAAumD,UAAP,SAAiB5mD,GAEhB,GAAIipD,KAAcjpD,CAClBF,MAAKkpD,OAAQlpD,KAAK6L,YAAes9C,CACjC,IAAInpD,KAAK6L,SAAW7L,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAK6L,UAIdo9C,GAAA1oD,UAAAksC,SAAP,WAEC,GAAIzsC,KAAK6L,UAAY7L,KAAKJ,OAAQ,CACjC,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ;CAEtF,MAAOI,MAAKkpD,OAAQlpD,KAAK6L,YAGnBo9C,GAAA1oD,UAAAwmD,kBAAP,SAAyB7mD,GAExB,GAAIipD,KAAcjpD,CAClBF,MAAKkpD,OAAOlpD,KAAK6L,YAAcs9C,EAAK,GACpC,IAAInpD,KAAK6L,SAAW7L,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAK6L,UAIdo9C,GAAA1oD,UAAAymD,iBAAP,WAEC,GAAIhnD,KAAK6L,UAAY7L,KAAKJ,OAAQ,CACjC,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,OAEtF,MAAOI,MAAKkpD,OAAQlpD,KAAK6L,YAGnBo9C,GAAA1oD,UAAA0mD,mBAAP,SAA0B/mD,GAEzB,GAAIipD,KAAcjpD,CAClBF,MAAKkpD,OAAQlpD,KAAK6L,YAAes9C,EAAK,GACtCnpD,MAAKkpD,OAAQlpD,KAAK6L,YAAgBs9C,GAAM,EAAK,GAC7C,IAAInpD,KAAK6L,SAAW7L,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAK6L,UAIdo9C,GAAA1oD,UAAA+rC,kBAAP,WAEC,GAAItsC,KAAK6L,SAAW,EAAI7L,KAAKJ,OAAQ,CACpC,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,OAEtF,GAAIZ,GAAWgB,KAAKkpD,OAAQlpD,KAAK6L,UAAe7L,KAAKkpD,OAAQlpD,KAAK6L,SAAW,IAAO,CACpF7L,MAAK6L,UAAY,CACjB,OAAO7M,GAGDiqD,GAAA1oD,UAAA2mD,iBAAP,SAAwBhnD,GAEvB,GAAIipD,KAAcjpD,CAClBF,MAAKkpD,OAAQlpD,KAAK6L,YAAes9C,EAAK,GACtCnpD,MAAKkpD,OAAQlpD,KAAK6L,YAAgBs9C,IAAO,EAAK,GAC9CnpD,MAAKkpD,OAAQlpD,KAAK6L,YAAgBs9C,IAAO,GAAM,GAC/CnpD,MAAKkpD,OAAQlpD,KAAK6L,YAAgBs9C,IAAO,GAAM,GAC/C,IAAInpD,KAAK6L,SAAW7L,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAK6L,UAIdo9C,GAAA1oD,UAAAuL,gBAAP,WAEC,GAAI9L,KAAK6L,SAAW,EAAI7L,KAAKJ,OAAQ,CACpC,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,OAEtF,GAAIZ,GAAWgB,KAAKkpD,OAAQlpD,KAAK6L,UAAe7L,KAAKkpD,OAAOlpD,KAAK6L,SAAW,IAAM,EAAQ7L,KAAKkpD,OAAOlpD,KAAK6L,SAAW,IAAM,GAAS7L,KAAKkpD,OAAOlpD,KAAK6L,SAAW,IAAM,EACvK7L,MAAK6L,UAAY,CACjB,OAAO7M,KAAM,EAGPiqD,GAAA1oD,UAAA4mD,WAAP,SAAkBjnD,GAIjBF,KAAKknD,iBAAiBlnD,KAAKonD,YAAYgC,OAAOlpD,KAGxC+oD,GAAA1oD,UAAA6mD,YAAP,SAAmB3+C,GAIlB,GAAIA,GAAK,EAAG,CACX,MAAO,GpGszcF,GoGnzcF4gD,GAAc,CAClB,IAAI5gD,EAAI,EAAG,CACVA,GAAKA,CACL4gD,GAAO,MACD,CACNA,EAAO,EpGuzcF,GoGpzcFC,GAAkBx/C,KAAKE,IAAIvB,GAAGqB,KAAKE,IAAI,EAC3Cs/C,GAAWx/C,KAAKkJ,MAAMs2C,EACtB7gD,GAAIA,EAAEqB,KAAK+jB,IAAI,EAAG,GAAKy7B,EACvB,IAAIC,GAAWz/C,KAAKkJ,MAAMvK,GAAK,OAC/B6gD,GAAWA,EAAW,GACtB,OAAUD,IAAQ,KAAS,EAAOC,GAAY,GAAOC,EAG/CN,GAAA1oD,UAAA8mD,UAAP,SAAiBnnD,GAEhB,MAAOF,MAAKsnD,cAActnD,KAAK8L,mBAGzBm9C,GAAA1oD,UAAA+mD,cAAP,SAAqB7+C,GAEpB,GAAIA,GAAK,EAAG,CACX,MAAO,GAER,GAAI6gD,GAAoB7gD,IAAM,GAAO,GACrC,IAAI8gD,GAAoB9gD,EAAI,QAAa,OACzC,IAAIC,GAAIoB,KAAK+jB,IAAI,EAAKy7B,EAAW,IAAQ,IAAIC,CAC7C,IAAI9gD,IAAM,IAAM,EAAG,CAClBC,GAAKA,EAEN,MAAOA,GAsBT,OAAAugD,IAnK8BrC,EAqKL9mD,GAAAJ,QAAhBupD,IpG8xcNtC,sCAAsC,wCAAwChZ,mCAAmC,SAAS/uC,EAAQkB,EAAOJ,GAC5I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqG18ctB,IAAOumD,GAAahoD,EAAa,sCAEjC,IAAMstC,GAAS,SAAAxrC,GAASX,EAAlBmsC,EAASxrC,EA6Bd,SA7BKwrC,GA6BOtsC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEXc,EAAAf,KAAAK,KACAA,MAAKJ,OAASA,CACdI,MAAK6mD,MAAQ,aACb7mD,MAAKwpD,WAAa5pD,CAClBI,MAAKypD,aAAe,GAAIjmD,aAAYxD,KAAKwpD,WAEzCxpD,MAAK0pD,YAAc,GAAIlmD,aAAY,GAEnCxD,MAAK2pD,WAAa,GAAI3mD,YAAWhD,KAAK0pD,YACtC1pD,MAAK4pD,YAAc,GAAIhjD,aAAY5G,KAAK0pD,YACxC1pD,MAAK6pD,WAAa,GAAIhjD,YAAW7G,KAAK0pD,YACtC1pD,MAAK8pD,YAAc,GAAIC,aAAY/pD,KAAK0pD,YACxC1pD,MAAKgqD,WAAa,GAAIC,YAAWjqD,KAAK0pD,YACtC1pD,MAAKkqD,aAAe,GAAI/jD,cAAanG,KAAK0pD,YAC1C1pD,MAAKmqD,aAAe,GAAIC,cAAapqD,KAAK0pD,YAE1C1pD,MAAKqqD,eAvBNlpD,OAAAC,eAAW8qC,EAAA3rC,UAAA,mBrGu8cJc,IqGv8cP,WAEC,MAAOrB,MAAKsqD,arGw8cN/oD,WAAY,KACZC,aAAc,MqGj7cd0qC,GAAA3rC,UAAA0xC,eAAP,SAAsBsY,GAErBvqD,KAAKwqD,YAAYD,EAAQjmD,WAEzBtE,MAAKJ,OAAS2qD,EAAQjmD,UAEtBtE,MAAKsqD,YAAY3oD,IAAI,GAAIqB,YAAWunD,GAEpCvqD,MAAK6L,SAAW,EAIVqgC,GAAA3rC,UAAA4xC,kBAAP,WAEC,MAAOnyC,MAAKJ,OAASI,KAAK6L,SAGpBqgC,GAAA3rC,UAAAiqD,YAAP,SAAmBzrD,GAElB,GAAIA,EAAIiB,KAAKwpD,WAAY,CACxB,GAAIiB,GAAuB1rD,EAAI,KAAS,GACxC,IAAI2rD,GAAiB,GAAIlnD,aAAYinD,EACrC,IAAIjmD,GAAU,GAAIxB,YAAW0nD,EAAgB,EAAGD,EAChDjmD,GAAQ7C,IAAI3B,KAAKsqD,YACjBtqD,MAAKypD,aAAeiB,CACpB1qD,MAAKwpD,WAAaiB,CAElBzqD,MAAKqqD,gBAIAne,GAAA3rC,UAAAumD,UAAP,SAAiB5mD,GAEhBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC7L,MAAK2qD,WAAW3qD,KAAK6L,cAAiB3L,CAEtC,IAAIF,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAAksC,SAAP,WAEC,GAAIzsC,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,OAAOI,MAAK2qD,WAAW3qD,KAAK6L,YAGtBqgC,GAAA3rC,UAAAqqD,UAAP,SAAiBC,EAAiB/nD,EAAmBlD,GAAnB,GAAAkD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAlD,QAAA,GAAiB,CAAjBA,EAAA,EAEpD,GAAIA,GAAU,KACbA,EAASirD,EAAMjrD,MAEhBirD,GAAML,YAAYxqD,KAAK6L,SAAW/I,EAASlD,EAE3CirD,GAAMhoD,gBAAgBlB,IAAI3B,KAAKsqD,YAAYjnD,SAASrD,KAAK6L,SAAU7L,KAAK6L,SAAWjM,GAASkD,EAE5F9C,MAAK6L,UAAYjM,CAEjB,IAAIA,EAASkD,EAAS+nD,EAAMjrD,OAC3BirD,EAAMjrD,QAAYA,EAASkD,EAAW+nD,EAAMjrD,OAGvCssC,GAAA3rC,UAAAwmD,kBAAP,SAAyB7mD,GAExBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC7L,MAAKsqD,YAAYtqD,KAAK6L,cAAiB3L,EAAK,GAE5C,IAAIF,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAAymD,iBAAP,WAEC,GAAIhnD,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,OAAOI,MAAKsqD,YAAYtqD,KAAK6L,YAGvBqgC,GAAA3rC,UAAAisC,aAAP,SAAoBrqC,GAEnB,GAAIP,GAAe,EACnB,IAAIkpD,GAAa9qD,KAAK6L,SAAW1J,CACjC,IAAIoG,GAAgB,GAAIwiD,UAAS/qD,KAAKypD,aAGtC,OAAOzpD,KAAK6L,SAAWi/C,EAAK,CAE3B,GAAIllC,GAAWrd,EAAKyiD,SAAShrD,KAAK6L,WAElC,IAAI+Z,EAAI,IAAM,CAEb,GAAIA,GAAK,EAAG,KACZhkB,IAASwkC,OAAOC,aAAazgB,OAEvB,IAAIA,EAAI,IAAM,CAEpBhkB,GAASwkC,OAAOC,cAAezgB,EAAI,KAAS,EAAMrd,EAAKyiD,SAAShrD,KAAK6L,YAAc,SAE7E,IAAI+Z,EAAI,IAAM,CAEpB,GAAIqlC,GAAK1iD,EAAKyiD,SAAShrD,KAAK6L,WAC5BjK,IAASwkC,OAAOC,cAAezgB,EAAI,KAAS,IAAQqlC,EAAK,MAAS,EAAM1iD,EAAKyiD,SAAShrD,KAAK6L,YAAc,SAEnG,CAEN,GAAIo/C,GAAK1iD,EAAKyiD,SAAShrD,KAAK6L,WAC5B,IAAIq/C,GAAK3iD,EAAKyiD,SAAShrD,KAAK6L,WAE5BjK,IAASwkC,OAAOC,cAAezgB,EAAI,KAAS,IAAQqlC,EAAK,MAAS,GAAQC,GAAM,EAAK,IAAS3iD,EAAKyiD,SAAShrD,KAAK6L,YAAc,MAMjI,MAAOjK,GAKDsqC,GAAA3rC,UAAA4qD,SAAP,SAAgBjrD,GAEfF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC,KAAK7L,KAAK6L,SAAW,IAAM,EAAG,CAC7B7L,KAAKorD,YAAYprD,KAAK6L,UAAY,KAAQ3L,MACpC,CACNF,KAAKgqD,WAAW,KAAQ9pD,CACxBF,MAAKsqD,YAAYtqD,KAAK6L,UAAY7L,KAAK2pD,WAAW,EAClD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,GAGvD3pD,KAAK6L,UAAY,CAEjB,IAAI7L,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAA8qD,QAAP,WAEC,GAAIrrD,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,IAAI6C,EACJ,IAAI6oD,EACJ,KAAKtrD,KAAK6L,SAAW,IAAM,EAAG,CAC7BpJ,EAAOzC,KAAKorD,WACZE,GAAKtrD,KAAK6L,UAAY,MAChB,CACNpJ,EAAOzC,KAAKgqD,UACZhqD,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAC3C7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtDy/C,GAAK,EAGNtrD,KAAK6L,UAAY,CAEjB,OAAOpJ,GAAK6oD,GAGNpf,GAAA3rC,UAAAgrD,WAAP,SAAkBrrD,GAEjBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC,KAAK7L,KAAK6L,SAAW,IAAM,EAAG,CAC7B7L,KAAKwrD,YAAYxrD,KAAK6L,UAAY,KAAQ3L,MACpC,CACNF,KAAK6pD,WAAW,KAAQ3pD,CACxBF,MAAKsqD,YAAYtqD,KAAK6L,UAAY7L,KAAK2pD,WAAW,EAClD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,GAGvD3pD,KAAK6L,UAAY,CAEjB,IAAI7L,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAAgsC,UAAP,WAEC,GAAIvsC,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,IAAI6C,EACJ,IAAI6oD,EACJ,KAAMtrD,KAAK6L,SAAW,IAAO,EAAG,CAC/BpJ,EAAOzC,KAAKwrD,WACZF,GAAKtrD,KAAK6L,UAAY,MAChB,CACNpJ,EAAOzC,KAAK6pD,UACZ7pD,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAC3C7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtDy/C,GAAK,EAGNtrD,KAAK6L,UAAY,CAEjB,OAAOpJ,GAAK6oD,GAGNpf,GAAA3rC,UAAAkrD,YAAP,SAAmBvrD,GAElBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC,KAAM7L,KAAK6L,SAAW,IAAO,EAAG,CAC/B7L,KAAK0rD,cAAc1rD,KAAK6L,UAAY,GAAK3L,MACnC,CACNF,KAAKmqD,aAAa,GAAKjqD,CACvBF,MAAKsqD,YAAYtqD,KAAK6L,UAAY7L,KAAK2pD,WAAW,EAClD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,GAGvD3pD,KAAK6L,UAAY,CAEjB,IAAI7L,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAAorD,WAAP,WAEC,GAAI3rD,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,IAAI6C,EACJ,IAAI6oD,EACJ,KAAKtrD,KAAK6L,SAAW,IAAM,EAAG,CAC7BpJ,EAAOzC,KAAK0rD,aACZJ,GAAKtrD,KAAK6L,UAAY,MAChB,CACNpJ,EAAOzC,KAAKmqD,YACZnqD,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAC3C7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtDy/C,GAAK,EAGNtrD,KAAK6L,UAAY,CAEjB,OAAOpJ,GAAK6oD,GAGNpf,GAAA3rC,UAAA0mD,mBAAP,SAA0B/mD,GAEzBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC,KAAK7L,KAAK6L,SAAW,IAAM,EAAG,CAC7B7L,KAAK4rD,aAAa5rD,KAAK6L,UAAY,KAAQ3L,EAAK,UAC1C,CACNF,KAAK4pD,YAAY,KAAQ1pD,EAAK,KAC9BF,MAAKsqD,YAAYtqD,KAAK6L,UAAY7L,KAAK2pD,WAAW,EAClD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,GAGvD3pD,KAAK6L,UAAY,CAEjB,IAAI7L,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAA+rC,kBAAP,WAEC,GAAItsC,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,IAAI6C,EACJ,IAAI6oD,EACJ,KAAMtrD,KAAK6L,SAAW,IAAO,EAAG,CAC/BpJ,EAAOzC,KAAK4rD,YACZN,GAAKtrD,KAAK6L,UAAY,MAChB,CACNpJ,EAAOzC,KAAK4pD,WACZ5pD,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAC3C7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtDy/C,GAAK,EAGNtrD,KAAK6L,UAAY,CAEjB,OAAOpJ,GAAK6oD,GAGNpf,GAAA3rC,UAAA2mD,iBAAP,SAAwBhnD,GAEvBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC,KAAM7L,KAAK6L,SAAW,IAAO,EAAG,CAC/B7L,KAAK6rD,aAAa7rD,KAAK6L,UAAY,KAAQ3L,EAAK,eAC1C,CACNF,KAAK8pD,YAAY,KAAQ5pD,EAAK,UAC9BF,MAAKsqD,YAAYtqD,KAAK6L,UAAY7L,KAAK2pD,WAAW,EAClD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,GAGvD3pD,KAAK6L,UAAY,CAEjB,IAAI7L,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAAuL,gBAAP,WAEC,GAAI9L,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,IAAI6C,EACJ,IAAI6oD,EACJ,KAAMtrD,KAAK6L,SAAW,IAAO,EAAG,CAC/BpJ,EAAOzC,KAAK6rD,YACZP,GAAKtrD,KAAK6L,UAAY,MAChB,CACNpJ,EAAOzC,KAAK8pD,WACZ9pD,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAC3C7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtDy/C,GAAK,EAGNtrD,KAAK6L,UAAY,CAEjB,OAAOpJ,GAAK6oD,GAGNpf,GAAA3rC,UAAA4mD,WAAP,SAAkBjnD,GAEjBF,KAAKwqD,YAAYxqD,KAAK6L,SAAW,EAEjC,IAAIpJ,EACJ,KAAMzC,KAAK6L,SAAW,IAAO,EAAG,CAC/BpJ,EAAOzC,KAAK8rD,aACZrpD,GAAKzC,KAAK6L,UAAY,GAAK3L,MACrB,CACNF,KAAKkqD,aAAa,GAAKhqD,CACvBF,MAAKsqD,YAAYtqD,KAAK6L,UAAY7L,KAAK2pD,WAAW,EAClD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,EACtD3pD,MAAKsqD,YAAYtqD,KAAK6L,SAAW,GAAK7L,KAAK2pD,WAAW,GAGvD3pD,KAAK6L,UAAY,CAEjB,IAAI7L,KAAKJ,OAASI,KAAK6L,SACtB7L,KAAKJ,OAASI,KAAK6L,SAGdqgC,GAAA3rC,UAAA8mD,UAAP,WAEC,GAAIrnD,KAAK6L,SAAW,EAAI7L,KAAKJ,OAC5B,KAAM,0CAA4CI,KAAK6L,SAAW,YAAc7L,KAAKJ,MAEtF,IAAI6C,EACJ,IAAI6oD,EACJ,KAAKtrD,KAAK6L,SAAW,IAAM,EAAG,CAC7BpJ,EAAOzC,KAAK8rD,aACZR,GAAKtrD,KAAK6L,UAAY,MAChB,CACNpJ,EAAOzC,KAAKkqD,YACZlqD,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAC3C7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtD7L,MAAK2pD,WAAW,GAAK3pD,KAAKsqD,YAAYtqD,KAAK6L,SAAW,EACtDy/C,GAAK,EAGNtrD,KAAK6L,UAAY,CAEjB,OAAOpJ,GAAK6oD,GAGLpf,GAAA3rC,UAAA8pD,aAAR,WAECrqD,KAAKsqD,YAAc,GAAItnD,YAAWhD,KAAKypD,aACvCzpD,MAAK2qD,WAAa,GAAI3kD,WAAUhG,KAAKypD,aACrCzpD,MAAK4rD,aAAe,GAAIhlD,aAAY5G,KAAKypD,aACzCzpD,MAAKwrD,YAAc,GAAI3kD,YAAW7G,KAAKypD,aACvCzpD,MAAK6rD,aAAe,GAAI9B,aAAY/pD,KAAKypD,aACzCzpD,MAAKorD,YAAc,GAAInB,YAAWjqD,KAAKypD,aACvCzpD,MAAK8rD,cAAgB,GAAI3lD,cAAanG,KAAKypD,aAC3CzpD,MAAK0rD,cAAgB,GAAItB,cAAapqD,KAAKypD,cAE7C,OAAAvd,IAlcwB0a,EAocxB9mD,GAAmBJ,QAAVwsC,IrGw1cNya,sCAAsC,wCAAwCoF,6BAA6B,SAASntD,EAAQkB,EAAOJ,GsG9xdtI,GAAMssD,GAAG,WAAT,QAAMA,MAESA,EAAAC,eAAd,SAA6BvY,EAAqBrsC,EAAcC,GAE/DosC,EAAQwY,MAAM7kD,MAAQA,EAAQ,IAC9BqsC,GAAQwY,MAAM5kD,OAASA,EAAS,IAChCosC,GAAQ,SAAWrsC,CACnBqsC,GAAQ,UAAYpsC,EAGP0kD,GAAAG,gBAAd,SAA8BzY,EAAqBrsC,GAElDqsC,EAAQwY,MAAM7kD,MAAQA,EAAQ,IAC9BqsC,GAAQ,SAAWrsC,EAGN2kD,GAAAI,iBAAd,SAA+B1Y,EAAqBpsC,GAEnDosC,EAAQwY,MAAM5kD,OAASA,EAAS,IAChCosC,GAAQ,UAAYpsC,EAGP0kD,GAAAK,YAAd,SAA0B3Y,EAAqBjrC,GAE9CirC,EAAQwY,MAAMrgD,SAAW,UACzB6nC,GAAQwY,MAAMvU,KAAOlvC,EAAI,KAGZujD,GAAAM,YAAd,SAA0B5Y,EAAqBhrC,GAE9CgrC,EAAQwY,MAAMrgD,SAAW,UACzB6nC,GAAQwY,MAAMrU,IAAMnvC,EAAI,KAGXsjD,GAAAO,qBAAd,SAAmC7Y,GAElC,MAAOA,GAAQwY,MAAMM,YAAc,UAGtBR,GAAAS,qBAAd,SAAmC/Y,EAAqBgZ,GAEvD,GAAIA,EAAS,CACZhZ,EAAQwY,MAAMM,WAAa,cACrB,CACN9Y,EAAQwY,MAAMM,WAAa,UAIfR,GAAAW,gBAAd,SAA8BjZ,EAAqBkZ,GAElD,GAAIlZ,YAAmBmZ,mBAAmB,CACzC,GAAIpyB,GAA+BiZ,EAAS3rC,WAAW,KACvD0yB,GAAQqyB,YAAcF,GAIVZ,GAAAe,mBAAd,SAAiCrZ,EAAqBjrC,EAAUC,EAAUskD,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,MAEzE,GAAIA,EAAU,CACbtZ,EAAQwY,MAAMrgD,SAAW,eACnB,CACN6nC,EAAQwY,MAAMrgD,SAAW,WAG1B6nC,EAAQwY,MAAMvU,KAAOlvC,EAAI,IACzBirC,GAAQwY,MAAMrU,IAAMnvC,EAAI,KAE1B,OAAAsjD,KAEAlsD,GAAaJ,QAAJssD,OtGmxdH7/C,oCAAoC,SAASvN,EAAQkB,EAAOJ,GAIlE,GuGz1dMwH,GAAU,WAAhB,QAAMA,MAESA,EAAAsE,mBAAd,SAAiCyhD,GAEhC,GAAI7tD,IAAa6tD,EAAe,cAAiB,EACjD,IAAIjuD,IAAaiuD,EAAe,YAAe,EAC/C,IAAIhiD,IAAagiD,EAAe,SAAa,CAC7C,IAAI/sD,GAAW+sD,EAAe,GAC9B,IAAI/mC,IAAoB9mB,EAAGJ,EAAIiM,EAAI/K,EAEnC,OAAOgmB,GAGOhf,GAAAgmD,eAAf,SAA8BtnC,GAE7B,GAAIunC,GAAMvnC,EAAElE,SAAS,GACrB,OAAOyrC,GAAIvtD,QAAU,EAAG,IAAMutD,EAAMA,EAGvBjmD,GAAAkmD,eAAd,SAA6B7hD,GAE5B,MAAO,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAGzGrE,GAAAmmD,gBAAd,SAA8B9hD,GAE7B,MAAO,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAAMrE,EAAWgmD,eAAe3hD,EAAK,IAE7J,OAAArE,KAEoBpH,GAAAJ,QAAXwH,OvGo1dHomD,+BAA+B,SAAS1uD,EAAQkB,EAAOJ,GwGr3d7D,GAAOga,GAA0B9a,EAAW,oDxG03d5C,IwGr3dM2uD,GAAK,WAAX,QAAMA,MAQSA,EAAAC,WAAd,WAECD,EAAM,WAGOA,GAAAE,sBAAd,SAAoCnc,EAAYoc,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,KAE/C,IAAKA,EACJH,EAAMI,QAAU,SAEhBJ,GAAMI,QAAUrc,EAGJic,GAAAK,SAAd,SAAuBC,EAAaC,EAAYC,GAE/CR,EAAMS,OAAO,8BAAgCH,EAAMC,EAAKC,EAExD,IAAIR,EAAMU,aAAc,CACvB,GAAIV,EAAMI,QAAS,CAClB,GAAI9uD,GAAWgvD,EAAOC,EAAMC,CAE5B,IAAIlvD,EAAEkF,QAAQwpD,EAAMI,WAAa,EAChC,OAGF,KAAM,IAAIj0C,GAA2Bm0C,EAAO,IAAMC,EAAM,KAAOC,IAIlDR,GAAAS,OAAf,SAAsBH,EAAaC,EAAYC,GAAA,GAAAA,QAAA,GAAe,CAAfA,EAAA,GAE9C,GAAIR,EAAMW,cACT/e,QAAQnlC,IAAI6jD,EAAO,IAAMC,EAAM,KAAOC,GAG1BR,GAAAvjD,IAAd,WAAkB,GAAAmkD,KxGy2dX,KwGz2dW,GAAAC,GAAA,EAAAA,EAAAC,UAAAzuD,OAAAwuD,IAAa,CAAbD,EAAAC,EAAA,GAAAC,UAAAD,GAEjB,GAAIb,EAAMe,WACTnf,QAAQnlC,IAAImkD,GA5CAZ,GAAAU,aAAuB,IACvBV,GAAAe,WAAqB,IACrBf,GAAAW,cAAwB,IAEvBX,GAAAI,QAAiB,IA0CjC,OAAAJ,KAEAztD,GAAeJ,QAAN6tD,IxGg3dN9zC,oDAAoD,sDAAsD80C,+CAA+C,SAAS3vD,EAAQkB,EAAOJ,SAE9KyS,oCAAoC,SAASvT,EAAQkB,EAAOJ,GyGv6dlE,GAAMoS,GAAU,WAAhB,QAAMA,MAISA,EAAAo9B,eAAd,SAA6B57B,GAE5B,GAAIA,GAAW,KACd,MAAO,KAER,OAAOxB,GAAWG,iBAAiBqB,EAAQjM,QAAUyK,EAAWG,iBAAiBqB,EAAQhM,QAG5EwK,GAAAi7B,wBAAd,SAAsCwB,GAErC,GAAIA,GAAS,KACZ,MAAO,KAER,OAAOz8B,GAAWG,iBAAiBs8B,EAAMlnC,QAAUyK,EAAWG,iBAAiBs8B,EAAMjnC,QAGxEwK,GAAAG,iBAAd,SAA+BhS,GAE9B,MAAOA,IAAK,GAAKA,GAAK6R,EAAW08C,UAAY18C,EAAW28C,aAAaxuD,GAGxD6R,GAAA28C,aAAd,SAA2B7sD,GAE1B,MAAOA,IAASA,GAASA,IAAUA,EAAS,MAG/BkQ,GAAA48C,gBAAd,SAA8B9sD,GAE7B,GAAIzB,GAAW,CAEf,OAAOA,EAAIyB,EACVzB,IAAM,CAEP,IAAIA,EAAI2R,EAAW08C,SAClBruD,EAAI2R,EAAW08C,QAEhB,OAAOruD,GAtCO2R,GAAA08C,SAAkB,IAwClC,OAAA18C,KAEmBhS,GAAAJ,QAAVoS,OzG45dH68C,yCAAyC,SAAS/vD,EAAQkB,EAAOJ,G0G18dvE,GAAO0H,GAAaxI,EAAa,qCACjC,IAAOovB,GAAMpvB,EAAe,8BAC5B,IAAOgO,GAAShO,EAAc,iCAE9B,IAAMgwD,GAAe,WAArB,QAAMA,MAkBSA,EAAAC,iBAAd,SAA+BxkD,EAAYykD,EAA8BlC,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,MAExE,GAAIz3C,GAAW9K,EAAOhD,KACtB,IAAI+N,GAAW/K,EAAO/C,MACtB,IAAIjI,GAAW,CAEf,IAAIoU,EAEJm7C,GAAgB3mD,MAAMZ,MAAQ8N,CAC9By5C,GAAgB3mD,MAAMX,OAAS8N,CAG/B,OAAOD,GAAK,GAAKC,GAAK,EAAG,CAExB3B,EAASq7C,EAAOzvD,GAAKuvD,EAAgBG,iBAAiBD,EAAOzvD,GAAIuvD,EAAgB3mD,MAAMZ,MAAOunD,EAAgB3mD,MAAMX,OAEpH,IAAIslD,EACHn5C,EAAOzL,SAAS4mD,EAAgB3mD,MAAO,EAExC2mD,GAAgBI,QAAQ5vD,EAAIwvD,EAAgB3mD,MAAMZ,MAAMgD,EAAOhD,KAC/DunD,GAAgBI,QAAQ/uD,EAAI2uD,EAAgB3mD,MAAMX,OAAO+C,EAAO/C,MAEhEmM,GAAOvL,KAAKmC,EAAQukD,EAAgBI,QAEpC75C,KAAM,CACNC,KAAM,CAENw5C,GAAgB3mD,MAAMZ,MAAQ8N,EAAI,EAAGA,EAAI,CACzCy5C,GAAgB3mD,MAAMX,OAAS8N,EAAI,EAAGA,EAAI,CAE1C/V,MAIauvD,GAAAG,iBAAf,SAAgCE,EAA4BC,EAAaC,GAExE,GAAIF,EAAc,CACjB,GAAIA,EAAa5nD,OAAS6nD,GAAQD,EAAa3nD,QAAU6nD,EACxD,MAAOF,EAERL,GAAgBQ,kBAAkBH,GAGnC,IAAKL,EAAgBS,SAASH,GAAO,CACpCN,EAAgBS,SAASH,KACzBN,GAAgBU,YAAYJ,MAG7B,IAAKN,EAAgBS,SAASH,GAAMC,GAAO,CAC1CF,EAAeL,EAAgBS,SAASH,GAAMC,GAAQ,GAAI/nD,GAAc8nD,EAAMC,EAAM,KACpFP,GAAgBU,YAAYJ,GAAMC,GAAQ,MACpC,CACNP,EAAgBU,YAAYJ,GAAMC,GAAQP,EAAgBU,YAAYJ,GAAMC,GAAQ,CACpFF,GAAeL,EAAgBS,SAASH,GAAMC,GAG/C,MAAOF,GAGML,GAAAQ,kBAAd,SAAgCH,GAE/B,GAAIM,GAAqBN,EAAa5nD,KACtC,IAAImoD,GAAsBP,EAAa3nD,MAEvC,MAAMsnD,EAAgBU,YAAYC,GAAaC,IAAiB,EAAG,CAClEZ,EAAgBS,SAASE,GAAaC,GAAcntD,SACpDusD,GAAgBS,SAASE,GAAaC,GAAgB,MAlFzCZ,GAAAS,WACAT,GAAAU,cAEAV,GAAAI,QAAiB,GAAIhhC,EACrB4gC,GAAA3mD,MAAkB,GAAI2E,EAiFtC,OAAAgiD,KAEA9uD,GAAyBJ,QAAhBkvD,I1G86dN5nD,qCAAqC,qCAAqC+mB,8BAA8B,8BAA8BzgB,iCAAiC,mCAAmCmiD,+CAA+C,SAAS7wD,EAAQkB,EAAOJ,G2G3gepR,GAAOivC,GAAQ/vC,EAAe,iCAE9B,IAAM8wD,GAAqB,WAY1B,QAZKA,GAYOC,EAAmBC,GAZhC,GAAAz3B,GAAAn4B,IAISA,MAAA6vD,QAAkB,KAKlB7vD,MAAA8vD,WAAwB,GAAIhvD,MAKnCd,MAAK+vD,UAAYphB,CAEjB3uC,MAAKgwD,YAAYL,EAAUC,EAE3B5vD,MAAKiwD,mBAAqB,WACzB,GAAI93B,EAAK03B,QACR13B,EAAK+3B,QAGPlwD,MAAK8vD,WAAWlsD,KAAK5D,KAAKmwD,KAUpBT,EAAAnvD,UAAAyvD,YAAP,SAAmBL,EAAmBC,GAErC5vD,KAAKowD,UAAYT,CACjB3vD,MAAKqwD,iBAAmBT,EAMlBF,GAAAnvD,UAAAqvC,MAAP,WAEC5vC,KAAKswD,UAAYtwD,KAAK+vD,WACtB/vD,MAAK6vD,QAAU,IAEf,IAAI3e,OAAOqf,sBAAuB,CACjCrf,OAAOqf,sBAAsBvwD,KAAKiwD,wBAC5B,CACN,GAAI/e,OAAO,4BACVA,OAAOqf,sBAAwBrf,OAAO,gCAClC,IAAIA,OAAO,+BACfA,OAAOqf,sBAAwBrf,OAAO,mCAClC,IAAIA,OAAO,0BACfA,OAAOqf,sBAAwBrf,OAAO,2BAOlCwe,GAAAnvD,UAAA+7B,KAAP,WAECt8B,KAAK6vD,QAAU,MAShB1uD,QAAAC,eAAWsuD,EAAAnvD,UAAA,U3Gu/dJc,I2Gv/dP,WAEC,MAAOrB,MAAK6vD,S3Gw/dNtuD,WAAY,KACZC,aAAc,M2Gh/dbkuD,GAAAnvD,UAAA2vD,MAAR,WAEClwD,KAAKwwD,aAAexwD,KAAK+vD,WACzB/vD,MAAKmwD,IAAMnwD,KAAKwwD,aAAexwD,KAAKswD,SACpCtwD,MAAK8vD,WAAW,GAAK9vD,KAAKmwD,GAC1BnwD,MAAKowD,UAAU9pB,MAAMtmC,KAAKqwD,iBAAkBrwD,KAAK8vD,WAEjD5e,QAAOqf,sBAAsBvwD,KAAKiwD,mBAElCjwD,MAAKswD,UAAYtwD,KAAKwwD,aAIxB,OAAAd,KAEA5vD,GAA+BJ,QAAtBgwD,I3Go/dNjf,iCAAiC,mCAAmC9/B,0CAA0C,SAAS/R,EAAQkB,EAAOJ,G4GzlezI,GAAOe,GAAgB7B,EAAa,8CAIpC,IAAOyH,GAAgBzH,EAAa,8CACpC,IAAO2H,GAAgB3H,EAAa,8CACpC,IAAO6H,GAAgB7H,EAAa,8CACpC,IAAOiH,GAAejH,EAAa,6CAEnC,IAAOuf,GAAQvf,EAAe,gCAE9B,IAAM6P,GAAgB,WAAtB,QAAMA,MAQSA,EAAAgK,oBAAd,SAAkCg4C,EAAkCC,EAAqC5B,EAAyBluD,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAI+P,GAAsB49C,EAAgBpvD,IAAIT,EAAOkC,EACrD,IAAIyN,GAAyBmgD,EAAmBrvD,IAAIqvD,EAAmB9vD,MAEvE,IAAIkuD,GAAU,KACbA,EAAS,GAAIroD,GAAiB7F,EAAQkC,OAClC,IAAIgsD,EAAOluD,MAAQA,EAAQkC,EAC/BgsD,EAAOluD,MAAQA,EAAQkC,CAExB,IAAI6tD,GAAkBF,EAAgB7rD,UACtC,IAAIgsD,GAAqBF,EAAmB9rD,UAE5C,IAAIisD,GAA2B/B,EAAOztD,IAAIT,EAAOkC,EAGjDlC,IAAS+vD,CAET,IAAItxD,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIoE,EAEJ,IAAI8pB,GAAWI,EAAWo+B,CAC1B,IAAIv+B,GAAWI,EAAWo+B,CAC1B,IAAIv+B,GAAWI,EAAWo+B,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIxb,GAAWC,EAAWC,CAC1B,IAAI/1C,EAEJ,OAAOZ,EAAIuB,EAAO,CACjB4H,EAAQqK,EAAQxT,KAAKuxD,CACrBt+B,GAAK/hB,EAAU/H,EACf+pB,GAAKhiB,EAAU/H,EAAQ,EACvBgqB,GAAKjiB,EAAU/H,EAAQ,EACvBA,GAAQqK,EAAQxT,KAAKuxD,CACrBl+B,GAAKniB,EAAU/H,EACfmqB,GAAKpiB,EAAU/H,EAAQ,EACvBoqB,GAAKriB,EAAU/H,EAAQ,EACvBA,GAAQqK,EAAQxT,KAAKuxD,CACrBE,GAAKvgD,EAAU/H,EACfuoD,GAAKxgD,EAAU/H,EAAQ,EACvBwoD,GAAKzgD,EAAU/H,EAAQ,EACvByoD,GAAMH,EAAKx+B,CACX4+B,GAAMH,EAAKx+B,CACX4+B,GAAMH,EAAKx+B,CACX4+B,GAAM1+B,EAAKJ,CACX++B,GAAM1+B,EAAKJ,CACX++B,GAAM1+B,EAAKJ,CACXsjB,GAAKqb,EAAIE,EAAMH,EAAII,CACnBvb,GAAKkb,EAAIK,EAAMH,EAAIC,CACnBpb,GAAKkb,EAAIE,EAAMH,EAAII,CACnBpxD,GAAI6J,KAAK2gB,KAAKqrB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAGjC6a,GAAYzsD,KAAO0xC,CACnB+a,GAAYzsD,KAAO2xC,CACnB8a,GAAYzsD,KAAO4xC,CACnB6a,GAAYzsD,KAAOnE,EAGpB6uD,EAAOntD,IAAIkvD,EAAa/tD,EAExB,OAAOgsD,GAGMrgD,GAAAmJ,gBAAd,SAA8B64C,EAAkCc,EAAuCzC,EAAyBngD,GAE/H,GAAIkE,GAAsB49C,EAAgBpvD,IAAIovD,EAAgB7vD,MAC9D,IAAIiwD,GAA2BU,EAAqBlwD,IAAIkwD,EAAqB3wD,MAE7E,IAAIkuD,GAAU,KACbA,EAAS,GAAIvoD,GAAiBoI,EAE/B,IAAIgiD,GAAkBF,EAAgB7rD,UACtC,IAAI4sD,GAAmB1C,EAAOlqD,UAE9B,IAAI0T,GAAuBw2C,EAAOztD,IAAIytD,EAAOluD,MAE7C,IAAIvB,GAAW,CACf,IAAI8C,GAAa2sD,EAAOluD,MAAM4wD,CAG9B,OAAOnyD,EAAI8C,EAAK,CACfmW,EAAQjZ,KAAO,CACfiZ,GAAQjZ,KAAO,CACfiZ,GAAQjZ,KAAO,EAGhBA,EAAI,CACJ8C,GAAMsuD,EAAgB7vD,MAAM+vD,CAC5B,IAAInoD,EACJ,IAAIipD,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAOtyD,EAAI8C,EAAK,CACfqG,EAAQqK,EAAQxT,KAAKmyD,CACrBl5C,GAAQ9P,IAAUqoD,EAAYY,EAC9Bn5C,GAAQ9P,EAAQ,IAAMqoD,EAAYa,EAClCp5C,GAAQ9P,EAAQ,IAAMqoD,EAAYc,EAClCnpD,GAAQqK,EAAQxT,KAAKmyD,CACrBl5C,GAAQ9P,IAAUqoD,EAAYY,EAC9Bn5C,GAAQ9P,EAAQ,IAAMqoD,EAAYa,EAClCp5C,GAAQ9P,EAAQ,IAAMqoD,EAAYc,EAClCnpD,GAAQqK,EAAQxT,KAAKmyD,CACrBl5C,GAAQ9P,IAAUqoD,EAAYY,EAC9Bn5C,GAAQ9P,EAAQ,IAAMqoD,EAAYa,EAClCp5C,GAAQ9P,EAAQ,IAAMqoD,EAAYc,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPtyD,EAAI,CACJ8C,GAAM2sD,EAAOluD,MAAM4wD,CACnB,IAAIjxC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIxgB,EAGJ,OAAOZ,EAAI8C,EAAK,CACfoe,EAAKjI,EAAQjZ,EACbmhB,GAAKlI,EAAQjZ,EAAI,EACjBohB,GAAKnI,EAAQjZ,EAAI,EACjBY,GAAI,EAAI6J,KAAK2gB,KAAKlK,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErCnI,GAAQjZ,KAAOkhB,EAAGtgB,CAClBqY,GAAQjZ,KAAOmhB,EAAGvgB,CAClBqY,GAAQjZ,KAAOohB,EAAGxgB,EAGnB6uD,EAAOntD,IAAI2W,EAEX,OAAOw2C,GAGMrgD,GAAA+J,qBAAd,SAAmCi4C,EAAkCC,EAAqCkB,EAA+B9C,EAAyBluD,EAAckC,EAAmB+uD,GAAnB,GAAA/uD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAA+uD,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAIh/C,GAAsB49C,EAAgBpvD,IAAIT,EAAOkC,EACrD,IAAIyN,GAAyBmgD,EAAmBrvD,IAAIqvD,EAAmB9vD,MACvE,IAAIyP,GAAmBuhD,EAAavwD,IAAIuwD,EAAahxD,MAErD,IAAIkuD,GAAU,KACbA,EAAS,GAAIvoD,GAAiB3F,EAAQkC,OAClC,IAAIgsD,EAAOluD,MAAQA,EAAQkC,EAC/BgsD,EAAOluD,MAAQA,EAAQkC,CAExB,IAAI8tD,GAAqBF,EAAmB9rD,UAC5C,IAAIktD,GAAeF,EAAahtD,UAChC,IAAI+rD,GAAkBF,EAAgB7rD,UAEtC,IAAImtD,GAA4BjD,EAAOztD,IAAIT,EAAOkC,EAElD,IAAIzD,GAAW,CACf,IAAI2yD,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIxb,GAAWC,EAAWC,CAG1Bp1C,IAAS+vD,CAET,OAAOtxD,EAAIuB,EAAO,CACjBoxD,EAASn/C,EAAQxT,EACjB4yD,GAASp/C,EAAQxT,EAAI,EACrB6yD,GAASr/C,EAAQxT,EAAI,EAErB+yD,GAAK/hD,EAAI2hD,EAAOF,EAAQ,EACxBO,GAAMhiD,EAAI4hD,EAAOH,EAAQ,GAAKM,CAC9BE,GAAMjiD,EAAI6hD,EAAOJ,EAAQ,GAAKM,CAE9BD,GAAKH,EAAOpB,CACZ4B,GAAKjiD,EAAU4hD,EACfM,GAAKliD,EAAU4hD,EAAK,EACpBO,GAAKniD,EAAU4hD,EAAK,EACpBA,GAAKF,EAAOrB,CACZK,GAAM1gD,EAAU4hD,GAAMK,CACtBtB,GAAM3gD,EAAU4hD,EAAK,GAAKM,CAC1BtB,GAAM5gD,EAAU4hD,EAAK,GAAKO,CAC1BP,GAAKD,EAAOtB,CACZQ,GAAM7gD,EAAU4hD,GAAMK,CACtBnB,GAAM9gD,EAAU4hD,EAAK,GAAKM,CAC1BnB,GAAM/gD,EAAU4hD,EAAK,GAAKO,CAE1B5c,GAAKwc,EAAIrB,EAAMoB,EAAIjB,CACnBrb,GAAKuc,EAAIpB,EAAMmB,EAAIhB,CACnBrb,GAAKsc,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAEzoD,KAAK2gB,KAAKqrB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEvC+b,GAAa1yD,KAAOkzD,EAAMzc,CAC1Bic,GAAa1yD,KAAOkzD,EAAMxc,CAC1Bgc,GAAa1yD,KAAOkzD,EAAMvc,EAG3B8Y,EAAOntD,IAAIowD,EAAcjvD,EAEzB,OAAOgsD,GAGMrgD,GAAAoJ,iBAAd,SAA+B44C,EAAkCkC,EAAwCpB,EAAuCzC,EAAyBngD,GAExK,GAAIkE,GAAsB49C,EAAgBpvD,IAAIovD,EAAgB7vD,MAC9D,IAAImxD,GAA4BY,EAAsBtxD,IAAIsxD,EAAsB/xD,MAChF,IAAIiwD,GAA2BU,EAAqBlwD,IAAIkwD,EAAqB3wD,MAE7E,IAAIkuD,GAAU,KACbA,EAAS,GAAIvoD,GAAiBoI,EAE/B,IAAIgiD,GAAkBF,EAAgB7rD,UACtC,IAAI4sD,GAAmB1C,EAAOlqD,UAE9B,IAAI2T,GAAwBu2C,EAAOztD,IAAIytD,EAAOluD,MAE9C,IAAIvB,GAAW,CACf,IAAI8C,GAAa2sD,EAAOluD,MAAM4wD,CAG9B,OAAOnyD,EAAI8C,EAAK,CACfoW,EAASlZ,KAAO,CAChBkZ,GAASlZ,KAAO,CAChBkZ,GAASlZ,KAAO,EAGjB,GAAIuzD,EACJ,IAAIpqD,EACJ,IAAIipD,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhBxzD,GAAI,CACJ8C,GAAMsuD,EAAgB7vD,MAAM+vD,CAG5B,OAAOtxD,EAAI8C,EAAK,CACfywD,EAAS/B,EAAYgC,EACrBrqD,GAAQqK,EAAQxT,KAAKmyD,CACrBj5C,GAAS/P,MAAYupD,EAAaN,GAAImB,CACtCr6C,GAAS/P,MAAYupD,EAAaL,GAAIkB,CACtCr6C,GAAS/P,IAAUupD,EAAaJ,GAAIiB,CACpCpqD,GAAQqK,EAAQxT,KAAKmyD,CACrBj5C,GAAS/P,MAAYupD,EAAaN,GAAImB,CACtCr6C,GAAS/P,MAAYupD,EAAaL,GAAIkB,CACtCr6C,GAAS/P,IAAUupD,EAAaJ,GAAIiB,CACpCpqD,GAAQqK,EAAQxT,KAAKmyD,CACrBj5C,GAAS/P,MAAYupD,EAAaN,GAAImB,CACtCr6C,GAAS/P,MAAYupD,EAAaL,GAAIkB,CACtCr6C,GAAS/P,IAAUupD,EAAaJ,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGPxzD,EAAI,CACJ8C,GAAM2sD,EAAOluD,MAAM4wD,CACnB,IAAIjxC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIxgB,EAGJ,OAAOZ,EAAI8C,EAAK,CACfoe,EAAKhI,EAASlZ,EACdmhB,GAAKjI,EAASlZ,EAAI,EAClBohB,GAAKlI,EAASlZ,EAAI,EAClBY,GAAI,EAAI6J,KAAK2gB,KAAKlK,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErClI,GAASlZ,KAAOkhB,EAAGtgB,CACnBsY,GAASlZ,KAAOmhB,EAAGvgB,CACnBsY,GAASlZ,KAAOohB,EAAGxgB,EAGpB6uD,EAAOntD,IAAI4W,EAEX,OAAOu2C,GAIMrgD,GAAAqB,YAAd,SAA0B2gD,EAAkC3B,EAAyBngD,EAAqC/N,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAIgsD,GAAU,KACbA,EAAS,GAAIzoD,GAAiBsI,EAE/B,IAAI6iD,GAAmB1C,EAAOlqD,UAE9B,IAAIyL,GAAmBy+C,EAAOztD,IAAIT,EAAOkC,EAEzC,IAAIzD,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIjC,GAAavB,EAAM4wD,CAEvB,OAAOnyD,EAAI8C,EAAK,CACfkO,EAAIhR,KAAO+E,EAAE,EACbiM,GAAIhR,KAAO,GAAO+E,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGN0qD,EAAOntD,IAAI0O,EAAKvN,EAEhB,OAAOgsD,GAGMrgD,GAAAyE,eAAd,SAA6Bu9C,EAAkC3B,EAAwBngD,EAAqC/N,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAIgsD,GAAU,KACbA,EAAS,GAAIjpD,GAAgB8I,EAE9B,IAAInG,GAAe,CACnB,IAAIyK,GAAoB,GAAIjQ,YAAWpC,EAAM,EAE7C,OAAO4H,EAAQ5H,EAAM,EAAG,CACvB,GAAI4H,EAAM,EAAI,EAAG,CAChByK,EAAOzK,GAAS,GAChByK,GAAOzK,EAAQ,GAAK,GACpByK,GAAOzK,EAAQ,GAAK,GACpByK,GAAOzK,EAAQ,GAAK,QACd,CACNyK,EAAOzK,GAAS,GAChByK,GAAOzK,EAAQ,GAAK,GACpByK,GAAOzK,EAAQ,GAAK,GACpByK,GAAOzK,EAAQ,GAAK,IAGrBA,GAAS,EAGVsmD,EAAOntD,IAAIsR,EAAQnQ,EAEnB,OAAOgsD,GAGMrgD,GAAA2B,SAAd,SAAuBF,EAAeC,EAAe2+C,EAAyBluD,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE3F,GAAIgsD,EAAOluD,MAAQA,EAAQkC,EAC1BgsD,EAAOluD,MAAQA,EAAQkC,CAExB,IAAI0uD,GAAmB1C,EAAOlqD,UAE9B,IAAIyL,GAAmBy+C,EAAOztD,IAAIT,EAAOkC,EAEzC,IAAIzD,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIjC,GAAavB,EAAM4wD,CAEvB,OAAOnyD,EAAI8C,EAAK,CACfkO,EAAIhR,MAAQ6Q,CACZG,GAAIhR,MAAQ8Q,EAGb2+C,EAAOntD,IAAI0O,EAAKvN,GAGH2L,GAAA6B,MAAd,SAAoBA,EAAcw+C,EAAyBluD,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAIgsD,EAAOluD,MAAQA,EAAQkC,EAC1BgsD,EAAOluD,MAAQA,EAAQkC,CAExB,IAAI0uD,GAAmB1C,EAAOlqD,UAE9B,IAAI2L,GAAyBu+C,EAAOztD,IAAIT,EAAOkC,EAE/C,IAAIzD,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIjC,GAAavB,EAAM4wD,CAEvB,OAAOnyD,EAAI8C,EAAK,CACfoO,EAAUlR,MAAQiR,CAClBC,GAAUlR,MAAQiR,CAClBC,GAAUlR,MAAQiR,EAGnBw+C,EAAOntD,IAAI4O,EAAWzN,GAGT2L,GAAA+B,oBAAd,SAAkCC,EAAoBigD,EAAqCoC,EAAmCC,EAAoCnyD,EAAckC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAIyN,GAAyBmgD,EAAmBrvD,IAAIT,EAAOkC,EAC3D,IAAI8tD,GAAqBF,EAAmB9rD,UAE5C,IAAI0T,EACJ,IAAI06C,EAEJ,IAAIF,EAAkB,CACrBx6C,EAAUw6C,EAAiBzxD,IAAIT,EAAOkC,EACtCkwD,GAAYF,EAAiBluD,WAG9B,GAAI2T,EACJ,IAAI06C,EAEJ,IAAIF,EAAmB,CACtBx6C,EAAWw6C,EAAkB1xD,IAAIT,EAAOkC,EACxCmwD,GAAaF,EAAkBnuD,WAGhC,GAAIvF,EACJ,IAAI6zD,EACJ,IAAIC,EACJ,IAAIltC,GAAkB,GAAI9H,EAC1B,IAAIi1C,EAEJ,IAAIN,GAAoBC,EAAmB,CAC1CK,EAAe3iD,EAAUnO,OACzB8wD,GAAa5nC,QACb4nC,GAAatpC,YAGd,GAAIupC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAKl0D,EAAI,EAAGA,EAAIuB,IAASvB,EAAG,CAE3B6zD,EAAKG,EAAM,CACXF,GAAKE,EAAM,CACXptC,GAAOxd,EAAI8H,EAAU8iD,EACrBptC,GAAOvd,EAAI6H,EAAU2iD,EACrBjtC,GAAO5H,EAAI9N,EAAU4iD,EACrBltC,GAASxV,EAAUuV,gBAAgBC,EACnC1V,GAAU8iD,GAAOptC,EAAOxd,CACxB8H,GAAU2iD,GAAMjtC,EAAOvd,CACvB6H,GAAU4iD,GAAMltC,EAAO5H,CACvBg1C,IAAOzC,CAEP,IAAIt4C,EAAS,CAEZ46C,EAAKI,EAAM,CACXH,GAAKG,EAAM,CACXrtC,GAAOxd,EAAI6P,EAAQg7C,EACnBrtC,GAAOvd,EAAI4P,EAAQ46C,EACnBjtC,GAAO5H,EAAI/F,EAAQ66C,EACnBltC,GAASmtC,EAAahtC,qBAAqBH,EAC3CA,GAAO1B,WACPjM,GAAQg7C,GAAOrtC,EAAOxd,CACtB6P,GAAQ46C,GAAMjtC,EAAOvd,CACrB4P,GAAQ66C,GAAMltC,EAAO5H,CACrBi1C,IAAON,EAGR,GAAIz6C,EAAU,CAEb26C,EAAKK,EAAM,CACXJ,GAAKI,EAAM,CACXttC,GAAOxd,EAAI8P,EAASg7C,EACpBttC,GAAOvd,EAAI6P,EAAS26C,EACpBjtC,GAAO5H,EAAI9F,EAAS46C,EACpBltC,GAASmtC,EAAahtC,qBAAqBH,EAC3CA,GAAO1B,WACPhM,GAASg7C,GAAOttC,EAAOxd,CACvB8P,GAAS26C,GAAMjtC,EAAOvd,CACtB6P,GAAS46C,GAAMltC,EAAO5H,CACtBk1C,IAAON,GAITvC,EAAmB/uD,IAAI4O,EAAWzN,EAElC,IAAIgwD,EACHA,EAAiBnxD,IAAI2W,EAASxV,EAE/B,IAAIiwD,EACHA,EAAkBpxD,IAAI4W,EAAUzV,GAKpB2L,GAAA+kD,cAAd,SAA4B/C,EAAgCgD,EAAoBC,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAI1xD,GAA0BwuD,EAAgBxuD,MAC9C,IAAI2xD,GAAoBnD,EAAgB7wD,MAGxC8zD,GAAc9zD,OAAS,CAGvB,IAAIg0D,EAAanlD,EAAiBolD,eAAiBJ,EAAchlD,EAAiBqlD,YACjF,MAAO7xD,EAER,IAAI5C,EACJ,IAAIwT,GAAoC49C,EAAgBpvD,IAAIovD,EAAgB7vD,MAAO+yD,EACnF,IAAII,GAA6B,GAAIjzD,MACrC,IAAIkzD,GAA0BvlD,EAAiBwlD,UAG/CD,GAAUp0D,OAASg0D,CACnB,KAAKv0D,EAAI,EAAGA,EAAIu0D,EAAYv0D,IAC3B20D,EAAU30D,IAAM,CAEjB,IAAI60D,EACJ,IAAIC,EACJ,IAAI3rD,GAAe,CACnB,IAAI4rD,GAAsBT,EAAYlD,EAAgB7rD,UAItDvF,GAAI,CACJ,OAAOA,EAAIu0D,EAAaQ,GAAgB/0D,EAAI,EAAIoP,EAAiBolD,eAAiBrrD,EAAQ,EAAIiG,EAAiBqlD,YAAa,CAC3HI,EAAgBrhD,EAAQxT,EAExB,IAAI20D,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAa3rD,GACbwrD,GAAUE,GAAiBC,CAC3BT,GAAcS,GAAcD,EAK7BH,EAAa10D,KAAO80D,EAGrBlyD,EAAS,GAAIxB,GAAiBgwD,EAAgB9rD,KAAK8rD,EAAgB7rD,WAAYmvD,EAAan0D,OAAO6wD,EAAgB7rD,WAEnH6rD,GAAkBA,EAAgBnuD,MAAML,EACxCwuD,GAAgB9uD,IAAIoyD,EAEpB,OAAO9xD,GAGMwM,GAAA4lD,eAAd,SAA6BC,EAA+BZ,GAE3D,IAAKA,EAAc9zD,OAClB,MAAO00D,EAER,IAAI3zD,GAAgB2zD,EAAa3zD,MAEjC,IAAI4zD,GAAsBD,EAAa9xD,UAEvC,IAAIgyD,GAAwB,GAAIxxD,YAAW0wD,EAAc9zD,OAAOe,EAChE,IAAIwzD,EACJ,IAAID,EACJ,IAAI70D,GAAW,CACf,IAAI+E,GAAW,CACf,IAAIjC,GAAauxD,EAAc9zD,MAC/B,KAAKP,EAAI,EAAGA,EAAI8C,EAAK9C,IAAK,CACzB80D,EAAa90D,EAAEsB,CACfuzD,GAAgBR,EAAcr0D,GAAGsB,CAEjC,KAAKyD,EAAI,EAAGA,EAAIzD,EAAQyD,IACvBowD,EAAWL,EAAa/vD,GAAKmwD,EAASL,EAAgB9vD,GAGxDkwD,EAAe,GAAI7zD,GAAiBE,EAAQwB,EAC5CmyD,GAAa9xD,WAAagyD,CAE1B,OAAOF,GAxjBO7lD,GAAAqlD,YAAqB,KAErBrlD,GAAAolD,cAAuB,QAEvBplD,GAAAwlD,WAA2B,GAAInzD,MAsjB/C,OAAA2N,KAE0B3O,GAAAJ,QAAjB+O,I5G69dN5O,8CAA8C,8CAA8C+F,6CAA6C,6CAA6CQ,8CAA8C,8CAA8CE,8CAA8C,8CAA8CE,8CAA8C,8CAA8Cqb,gCAAgC,kCAAkC2uB,+BAA+B,SAAS5xC,EAAQkB,EAAOJ,GACtkB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6G3iftB,IAAOd,GAAKX,EAAe,+BAC3B,IAAOic,GAAejc,EAAa,yCACnC,IAAOmf,GAAUnf,EAAc,oCAE/B,IAAM8vC,GAAK,SAAAhuC,GAASX,EAAd2uC,EAAKhuC,EAQV,SARKguC,GAQO+lB,EAAcC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAEzBh0D,EAAAf,KAAAK,KAPOA,MAAA20D,aAAsB,CACtB30D,MAAA40D,cAAuB,CAEvB50D,MAAA60D,SAAmB,KAM1B70D,MAAK80D,OAASL,CACdz0D,MAAK20D,aAAeD,CAEpB,IAAI3tB,MAAM0tB,IAAUA,EAAQ,EAC3B,KAAM,IAAIl1D,GAAM,qCAGlB4B,OAAAC,eAAWstC,EAAAnuC,UAAA,gB7GuifJc,I6GvifP,WAEC,MAAOrB,MAAK40D,e7GwifNrzD,WAAY,KACZC,aAAc,M6GtifrBL,QAAAC,eAAWstC,EAAAnuC,UAAA,S7GyifJc,I6GzifP,WAEC,MAAOrB,MAAK80D,Q7G0ifNnzD,I6GvifP,SAAiBC,GAEhB5B,KAAK80D,OAASlzD,CAEd,IAAI5B,KAAK60D,SAAU,CAClB70D,KAAKs8B,MACLt8B,MAAK4vC,U7GwifAruC,WAAY,KACZC,aAAc,M6GrifrBL,QAAAC,eAAWstC,EAAAnuC,UAAA,e7GwifJc,I6GxifP,WAEC,MAAOrB,MAAK20D,c7GyifNhzD,I6GtifP,SAAuBC,GAEtB5B,KAAK20D,aAAe/yD,G7GuifdL,WAAY,KACZC,aAAc,M6GrifdktC,GAAAnuC,UAAAy8B,MAAP,WAEC,GAAIh9B,KAAK60D,SACR70D,KAAKs8B,MAENt8B,MAAK40D,cAAgB,EAGtBzzD,QAAAC,eAAWstC,EAAAnuC,UAAA,W7GqifJc,I6GrifP,WAEC,MAAOrB,MAAK60D,U7GsifNtzD,WAAY,KACZC,aAAc,M6GpifdktC,GAAAnuC,UAAAqvC,MAAP,WAAA,GAAAzX,GAAAn4B,IAECA,MAAK60D,SAAW,IAChBE,eAAc/0D,KAAKg1D,KACnBh1D,MAAKg1D,KAAOC,YAAY,WAAM,MAAA98B,GAAK+8B,QAAQl1D,KAAK80D,QAG1CpmB,GAAAnuC,UAAA+7B,KAAP,WAECt8B,KAAK60D,SAAW,KAChBE,eAAc/0D,KAAKg1D,MAGZtmB,GAAAnuC,UAAA20D,KAAR,WAECl1D,KAAK40D,eAEL,IAAM50D,KAAK20D,aAAe,GAAO30D,KAAK40D,eAAiB50D,KAAK20D,aAAc,CAEzE30D,KAAKs8B,MACLt8B,MAAKqR,cAAc,GAAI0M,GAAWA,EAAWC,OAC7Che,MAAKqR,cAAc,GAAI0M,GAAWA,EAAWE,qBAEvC,CACNje,KAAKqR,cAAc,GAAI0M,GAAWA,EAAWC,SAGhD,OAAA0wB,IAzFoB7zB,EA2FpB/a,GAAeJ,QAANgvC,I7GkifN31B,+BAA+B,+BAA+B6B,yCAAyC,yCAAyCkD,oCAAoC,sCAAsC+1B,kCAAkC,SAASj1C,EAAQkB,EAAOJ,G8GjofvR,GAAMkzC,GAAQ,WAAd,QAAMA,MAESA,EAAAO,mBAAd,SAAiCgiB,EAAWC,GAE3C,GAAIC,GAA4BztD,SAAS0tD,wBAEzC,IAAGH,EAAM,CACR,GAAII,GAAaJ,EAAKK,WAAW51D,MACjC,KAAI,GAAIP,GAAW,EAAGA,EAAIk2D,EAAKl2D,IAAK,CACnC,GAAIo2D,GAAaN,EAAKK,WAAWn2D,EACjC,IAAGo2D,GAAS,KAAM,CACjB,GAAGA,EAAMC,UAAYN,EAAK,CACzBC,EAASM,YAAYF,MAMzB,MAAOJ,GAASG,WAGH5iB,GAAAgjB,kBAAd,SAAgC5iB,EAAgB6iB,EAAkBC,GAEjE,GAAIT,GAA4BztD,SAAS0tD,wBAEzC,IAAGtiB,EAAO,CACT,GAAIuiB,GAAaviB,EAAMpzC,MACvB,KAAI,GAAIP,GAAW,EAAGA,EAAIk2D,EAAKl2D,IAAK,CACnC,GAAIo2D,GAAaziB,EAAM3zC,EACvB,IAAGo2D,GAAS,KAAM,CACjB,GAAGA,EAAMM,WAAWC,aAAaH,GAAWj0D,OAASk0D,EAAY,CAChET,EAASM,YAAYF,MAMzB,MAAOJ,GAASG,WAGH5iB,GAAAQ,SAAd,SAAuB9B,GACtB,GAAI5W,GAAmB,GAAIu7B,UAC3B,IAAId,GAAYz6B,EAAOw7B,gBAAgB5kB,EAAK,WAC5C,OAAO6jB,GAGMviB,GAAAujB,aAAd,SAA2BhB,GAC1B,IAAIA,EAAM,MAAO,EACjB,IAAI7jB,IAAM,GAAK8kB,gBAAiBC,kBAAkBlB,EAClD,OAAO7jB,GAGMsB,GAAAU,mBAAd,SAAiC6hB,EAAWmB,GAC3C,GAAIC,GAAQpB,EAAKY,UACjB,IAAGQ,GAASp+C,UAAW,CACtB,MAAO,GAER,GAAIq+C,GAAiBD,EAAMP,aAAaM,EACxC,KAAIE,EAAW,CAEd,MAAO,GAGR,MAAOA,GAAU50D,MAGJgxC,GAAA6jB,oBAAd,SAAkCtB,EAAWmB,EAAiBI,GAC7D,GAAIF,GAAiB,GAAIG,KACzBH,GAAUh9C,KAAO88C,CACjBE,GAAU50D,MAAQ80D,CAClBF,GAAYrB,EAAKY,WAAWa,aAAaJ,EACzCrnB,SAAQnlC,IAAI,6CAA+CwsD,EAAUh9C,KAAO,YAAcg9C,EAAU50D,OAGvFgxC,GAAAikB,aAAd,SAA2B1B,EAAWmB,GACrC,GAAIC,GAAQpB,EAAKY,UACjB,IAAGQ,GAASp+C,UAAW,CACtB,MAAO,OAER,GAAIq+C,GAAiBD,EAAMP,aAAaM,EACxC,OAAOE,IAAa,KAEtB,OAAA5jB,KACA9yC,GAAkBJ,QAATkzC,O9G2nfHnC,kCAAkC,SAAS7xC,EAAQkB,EAAOJ,GAMhE,Q+G/sfSivC,KAKR,MAAO5I,MAAK+wB,MAGbh3D,EAAkBJ,QAATivC,O/G+sfHooB,2CAA2C,SAASn4D,EAAQkB,EAAOJ,SAEnEs3D,qCAAqC,SAASp4D,EAAQkB,EAAOJ,SAE7Du3D,sCAAsC,SAASr4D,EAAQkB,EAAOJ",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAttributesBufferVO\t\t= require(\"awayjs-core/lib/vos/IAttributesBufferVO\");\n\nclass AttributesBuffer extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\n\tprivate _attributesBufferVO:Array<IAttributesBufferVO> = new Array<IAttributesBufferVO>();\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.invalidateLength();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.invalidateLength();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this._stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis.stride = stride;\n\t\tthis.count = count;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tvar len:number = this._attributesBufferVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._attributesBufferVO[i].invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateLength():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\n\t\tthis._lengthDirty = true;\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _iAddAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.push(AttributesBufferVO);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _iRemoveAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.splice(this._attributesBufferVO.indexOf(AttributesBufferVO), 1);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _addView(view:AttributesView):number\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.invalidateLength();\n\t\t}\n\n\t\t\n\t\treturn len;\n\t}\n\n\tpublic _removeView(viewIndex:number)\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.invalidateLength();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, this._buffer.byteLength));\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass AttributesView extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this._index);\n\t\tthis._index = this._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this._index);\n\t\tthis._index = this._attributesBuffer._addView(this);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._index = this._attributesBuffer._addView(this);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._attributesBuffer._removeView(this._index);\n\t\tthis._attributesBuffer = null;\n\t}\n}\n\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short3Attributes;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:HTMLCanvasElement;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(width, height);\n\n\t\tthis._transparent = transparent;\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\t\t\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport = BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Array<number> = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport = BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport SubGeometryUtils\t\t\t= require(\"awayjs-core/lib/utils/SubGeometryUtils\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\n\t\tclone.setCurves(this._curves.clone());\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = Image2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IImageObject\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass ImageBase extends AssetBase implements IAsset\n{\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._imageObject.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._imageObject[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.push(ImageObject);\n\n\t\treturn ImageObject;\n\t}\n\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\n\n\t\treturn ImageObject;\n\t}\n}\n\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = ImageCube;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport SubGeometryUtils\t\t\t= require(\"awayjs-core/lib/utils/SubGeometryUtils\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n}\n\nexport = LineSubGeometry;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _offsetX:number = 0;\n\tprivate _offsetY:number = 0;\n\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\n\tprivate _rect:Rectangle;\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D;\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get offsetX():number\n\t{\n\t\treturn this._offsetX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetY():number\n\t{\n\t\treturn this._offsetY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._scaleX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._scaleY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(image2D:Image2D = null, repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis.image2D = image2D;\n\n\t\tthis.repeat = repeat;\n\t\tthis.smooth = smooth;\n\t\tthis.mipmap = mipmap;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t\tif (this._imageRect)\n\t\t\tthis._rect = this._imageRect;\n\t\telse\n\t\t\tthis._rect = this.image2D.rect;\n\n\t\tif (this._imageRect) {\n\t\t\tthis._offsetX = this._imageRect.x/this.image2D.width;\n\t\t\tthis._offsetY = this._imageRect.y/this.image2D.height;\n\n\t\t\tthis._scaleX = this._imageRect.width/this.image2D.width;\n\t\t\tthis._scaleY = this._imageRect.height/this.image2D.height;\n\t\t} else {\n\t\t\tthis._offsetX = 0;\n\t\t\tthis._offsetY = 0;\n\n\t\t\tthis._scaleX = 1;\n\t\t\tthis._scaleY = 1;\n\t\t}\n\n\t}\n}\n\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n */\nclass SamplerBase extends AssetBase implements IAsset\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}\n\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t * The ImageCube object being referenced.\n\t */\n\tpublic imageCube:ImageCube;\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport = SpecularImage2D;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ISubGeometryVO\t\t\t= require(\"awayjs-core/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport SubGeometryUtils\t\t\t= require(\"awayjs-core/lib/utils/SubGeometryUtils\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\t// TODO: hide HTMLAudioElement and provide proper interface for playback control (see TODO above).\n\tprivate _htmlAudioElement : HTMLAudioElement;\n\n\t/**\n\t *\n\t */\n\tconstructor(htmlAudioElement:HTMLAudioElement)\n\t{\n\t\tsuper();\n\t\tthis._htmlAudioElement = htmlAudioElement;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get htmlAudioElement()\n\t{\n\t\treturn this._htmlAudioElement;\n\t}\n\n\tpublic set htmlAudioElement(value : HTMLAudioElement)\n\t{\n\t\tthis._htmlAudioElement = value;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._htmlAudioElement = null;\n\t}\n}\n\nexport = WaveAudio;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport EventDispatcher\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport Event\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform extends EventDispatcher\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tprivate _alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    private _alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    private _blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    private _blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    private _greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    private _greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    private _redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    private _redOffset:number;\n\n\n    private _changeEvent:Event = new Event(Event.CHANGE);\n\n    public get alphaMultiplier():number\n    {\n        return this._alphaMultiplier;\n    }\n\n    public set alphaMultiplier(value:number)\n    {\n        this._alphaMultiplier = value;\n        this._invalidate();\n    }\n\n    public get alphaOffset():number\n    {\n        return this._alphaOffset;\n    }\n\n    public set alphaOffset(value:number)\n    {\n        this._alphaOffset = value;\n        this._invalidate();\n    }\n\n    public get redMultiplier():number\n    {\n        return this._redMultiplier;\n    }\n\n    public set redMultiplier(value:number)\n    {\n        this._redMultiplier = value;\n        this._invalidate();\n    }\n\n    public get redOffset():number\n    {\n        return this._redOffset;\n    }\n\n    public set redOffset(value:number)\n    {\n        this._redOffset = value;\n        this._invalidate();\n    }\n\n    public get greenMultiplier():number\n    {\n        return this._greenMultiplier;\n    }\n\n    public set greenMultiplier(value:number)\n    {\n        this._greenMultiplier = value;\n        this._invalidate();\n    }\n\n    public get greenOffset():number\n    {\n        return this._greenOffset;\n    }\n\n    public set greenOffset(value:number)\n    {\n        this._greenOffset = value;\n        this._invalidate();\n    }\n\n    public get blueMultiplier():number\n    {\n        return this._blueMultiplier;\n    }\n\n    public set blueMultiplier(value:number)\n    {\n        this._blueMultiplier = value;\n        this._invalidate();\n    }\n\n    public get blueOffset():number\n    {\n        return this._blueOffset;\n    }\n\n    public set blueOffset(value:number)\n    {\n        this._blueOffset = value;\n        this._invalidate();\n    }\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this._redOffset << 16) | ( this._greenOffset << 8) | this._blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis._redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis._greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis._blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis._redMultiplier = 0;\n\t\tthis._greenMultiplier = 0;\n\t\tthis._blueMultiplier = 0;\n\n        this._invalidate();\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n        super();\n\t\tthis._redMultiplier = redMultiplier;\n\t\tthis._greenMultiplier = greenMultiplier;\n\t\tthis._blueMultiplier = blueMultiplier;\n\t\tthis._alphaMultiplier = alphaMultiplier;\n\t\tthis._redOffset = redOffset;\n\t\tthis._greenOffset = greenOffset;\n\t\tthis._blueOffset = blueOffset;\n\t\tthis._alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this._redMultiplier = 1;\n        this._greenMultiplier = 1;\n        this._blueMultiplier = 1;\n        this._alphaMultiplier = 1;\n        this._redOffset = 0;\n        this._greenOffset = 0;\n        this._blueOffset = 0;\n        this._alphaOffset = 0;\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this._redMultiplier = source.redMultiplier;\n        this._greenMultiplier = source.greenMultiplier;\n        this._blueMultiplier = source.blueMultiplier;\n        this._alphaMultiplier = source.alphaMultiplier;\n        this._redOffset = source.redOffset;\n        this._greenOffset = source.greenOffset;\n        this._blueOffset = source.blueOffset;\n        this._alphaOffset = source.alphaOffset;\n    }\n\n    private _invalidate()\n    {\n        this.dispatchEvent(this._changeEvent);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this._redOffset += ct.redOffset * this._redMultiplier;\n        this._greenOffset += ct.greenOffset * this._greenMultiplier;\n        this._blueOffset += ct.blueOffset * this._blueMultiplier;\n        this._alphaOffset += ct.alphaOffset * this._alphaMultiplier;\n\n        this._redMultiplier *= ct.redMultiplier;\n        this._greenMultiplier *= ct.greenMultiplier;\n        this._blueMultiplier *= ct.blueMultiplier;\n        this._alphaMultiplier *= ct.alphaMultiplier;\n\n        this._invalidate();\n    }\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:number[] = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:number[];\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:number[] = null)\n\t{\n\t\tif (v != null && v.length == 16)\n\t\t\tthis.rawData = v.concat();\n\t\telse\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\tthis.append(m);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData.slice(0));\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar len:number = sourceMatrix3D.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tdest.rawData = this.rawData.slice(0);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\t// Initial Tests - Not OK\n\n\t\tvar vec:Vector3D[] = [];\n\t\tvar m = this.clone();\n\t\tvar mr = m.rawData;\n\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\n\t\tvar scale:Vector3D = new Vector3D();\n\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\n\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\n\t\t\tscale.z = -scale.z;\n\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\n\t\tvar rot = new Vector3D();\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\n\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\n\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\n\t\t\t\t}\n\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar m = new Matrix3D();\n\t\tm.position = new Vector3D(x, y, z);\n\t\tthis.prepend(m);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tif (components.length < 3) return false\n\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\n\n\t\tthis.identity();\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\n\n\t\tvar angle:number;\n\t\tangle = -components[1].x;\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\n\t\tangle = -components[1].y;\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\n\t\tangle = -components[1].z;\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\n\n\t\tthis.position = components[0];\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar oRawData:number[] = this.rawData.slice(0);\n\n\t\tthis.rawData[1] = oRawData[4];\n\t\tthis.rawData[2] = oRawData[8];\n\t\tthis.rawData[3] = oRawData[12];\n\t\tthis.rawData[4] = oRawData[1];\n\t\tthis.rawData[6] = oRawData[9];\n\t\tthis.rawData[7] = oRawData[13];\n\t\tthis.rawData[8] = oRawData[2];\n\t\tthis.rawData[9] = oRawData[6];\n\t\tthis.rawData[11] = oRawData[14];\n\t\tthis.rawData[12] = oRawData[3];\n\t\tthis.rawData[13] = oRawData[7];\n\t\tthis.rawData[14] = oRawData[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.loadData(data, '', context, ns, parser);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\t//var asset : IAsset;\n\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\n\t\t\t\tasset = this._assets[ c ];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t\t/*\n\t\t\t for each (asset in _assets)\n\t\t\t asset.dispose();\n\t\t\t */\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoadingSessions()\n\t{\n\t\tvar i:number;\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tvar length:number = this._loadingSessions.length;\n\n\t\tfor (i = 0; i < length; i++)\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\n\n\t\tthis._loadingSessions = null;\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar l:number = this._assets.length;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\n\t\tthis._loadingSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loadingSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\n\t}\n\n\tprivate loadingSessionGC():void\n\t{\n\t\tvar loader:AssetLoader;\n\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\n\t\t\tloader = this._loadingSessionsGarbage.pop();\n\t\t\tthis.killLoadingSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\n\t}\n\n\tprivate killLoadingSession(loader:AssetLoader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "class AssetLoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.AssetLoader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = AssetLoaderContext;",
    "import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n\n/**\n * Dispatched when a skybox asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a camera3d asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a mesh asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a geometry asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton pose asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a container asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture projector asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a material asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a animator asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation set has been constructed from a group of animation state resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation node has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light picker asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an effect method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an shadow map method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Instances of this class are returned as tokens by loading operations\n * to provide an object on which events can be listened for in cases where\n * the actual asset loader is not directly available (e.g. when using the\n * AssetLibrary to perform the load.)\n *\n * By listening for events on this class instead of directly on the\n * AssetLibrary, one can distinguish different loads from each other.\n *\n * The token will dispatch all events that the original AssetLoader dispatches,\n * while not providing an interface to obstruct the load and is as such a\n * safer return value for loader wrappers than the loader itself.\n */\nclass AssetLoaderToken extends EventDispatcher\n{\n\tpublic _iLoader:AssetLoader;\n\n\tconstructor(loader:AssetLoader)\n\t{\n\t\tsuper();\n\n\t\tthis._iLoader = loader;\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.addEventListener(type, listener);\n\t}\n\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.removeEventListener(type, listener);\n\t}\n\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\n\t{\n\t\treturn this._iLoader.hasEventListener(type, listener);\n\t}\n\n\t/*\n\t public willTrigger(type:string):boolean\n\t {\n\t return this._iLoader.willTrigger(type);\n\t }\n\t */\n}\n\nexport = AssetLoaderToken;",
    "import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The AssetLoader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass AssetLoader extends EventDispatcher\n{\n\tprivate _context:AssetLoaderContext;\n\tprivate _token:AssetLoaderToken;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\n\t\t\tAssetLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * AssetLoader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = id;\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/')\n\t\t\tend = end.substr(1);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsingAfterDependencies();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._token = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\n\t\t\t\treturn new AssetLoader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t\t\telse\n\t\t\t\tthrow new Error(message);\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = AssetLoader;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\n * and AssetLibrary instead in most cases.\n *\n * @see AssetLoader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see AssetLoader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsingAfterDependencies()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\tprivate static arrayBufferToBase64(data:Uint8Array, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar len:number = data.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(data[i])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:Uint8Array, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:Uint8Array):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arrayBufferView, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arrayBufferView, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n\n\tpublic static audioToWaveAudio(htmlAudioElement:HTMLAudioElement):WaveAudio\n\t{\n\t\treturn new WaveAudio(htmlAudioElement);\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar bitmap:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tbitmap = new Sampler2D(this._imageData);\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tbitmap.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tbitmap.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(bitmap, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport = TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass WaveAudioParser extends ParserBase\n{\n\tprivate _loadingImage:boolean;\n\tprivate _htmlAudioElement:HTMLAudioElement;\n\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data instanceof HTMLAudioElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:WaveAudio;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\t\telse if (this._htmlAudioElement) {\n\t\t\tasset = ParserUtils.audioToWaveAudio(this._htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t}\n\t\telse if (this.data instanceof HTMLAudioElement) {// Parse HTMLImageElement\n\t\t\tvar htmlAudioElement:HTMLAudioElement = <HTMLAudioElement> this.data;\n\t\t\tasset = ParserUtils.audioToWaveAudio(htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t}\n\t\telse if (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tvar filetype = WaveAudioParser.parseFileType(ba);\n\t\t\tvar htmlAudioElement:HTMLAudioElement = ParserUtils.byteArrayToAudio(ba, filetype);\n\t\t\tasset = ParserUtils.audioToWaveAudio(htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t}\n\t\telse if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tvar filetype = WaveAudioParser.parseFileType(this.data.arraybytes);\n\t\t\tthis._htmlAudioElement = ParserUtils.arrayBufferToAudio(this.data, filetype);\n\n\t\t\tasset = ParserUtils.audioToWaveAudio(this._htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t}\n\t\telse if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlAudioElement = ParserUtils.blobToAudio(this.data);\n\n\t\t\tthis._htmlAudioElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\t\tconsole.log(\"WaveAudio: \");\n\n\t\tba.position = 0;\n\t\tif (ba.readUnsignedShort() & 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport = WaveAudioParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tprivate _maxLength:number;\n\tprivate _arrayBuffer:ArrayBuffer;\n\tprivate _swapBuffer:ArrayBuffer;\n\n\tprivate _uint8Swap:Uint8Array;\n\n\tprivate _uint16Swap:Uint16Array;\n\tprivate _int16Swap:Int16Array;\n\tprivate _uint32Swap:Uint32Array;\n\tprivate _int32Swap:Int32Array;\n\tprivate _float32Swap:Float32Array;\n\tprivate _float64Swap:Float64Array;\n\n\tprivate _uint8Array:Uint8Array;\n\tprivate _int8Array:Int8Array;\n\tprivate _uint16Array:Uint16Array;\n\tprivate _int16Array:Int16Array;\n\tprivate _uint32Array:Uint32Array;\n\tprivate _int32Array:Int32Array;\n\tprivate _float32Array:Float32Array;\n\tprivate _float64Array:Float64Array;\n\t\n\tpublic get arrayBufferView():Uint8Array\n\t{\n\t\treturn this._uint8Array;\n\t}\n\t\n\tconstructor(length:number = 8)\n\t{\n\t\tsuper();\n\t\tthis.length = length;\n\t\tthis._mode = \"Typed array\";\n\t\tthis._maxLength = length;\n\t\tthis._arrayBuffer = new ArrayBuffer(this._maxLength);\n\n\t\tthis._swapBuffer = new ArrayBuffer(16);\n\t\t\n\t\tthis._uint8Swap = new Uint8Array(this._swapBuffer);\n\t\tthis._uint16Swap = new Uint16Array(this._swapBuffer);\n\t\tthis._int16Swap = new Int16Array(this._swapBuffer);\n\t\tthis._uint32Swap = new Uint32Array(this._swapBuffer);\n\t\tthis._int32Swap = new Int32Array(this._swapBuffer);\n\t\tthis._float32Swap = new Float32Array(this._swapBuffer);\n\t\tthis._float64Swap = new Float64Array(this._swapBuffer);\n\t\t\n\t\tthis._updateViews();\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\t\t\n\t\tthis._uint8Array.set(new Uint8Array(aBuffer));\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn this.length - this.position;\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this._maxLength) {\n\t\t\tvar newMaxLength:number = (n + 255) & (~255); //rounds up to the nearest multiple of 255 (or 8 bytes)\n\t\t\tvar newArrayBuffer = new ArrayBuffer(newMaxLength);\n\t\t\tvar newView = new Uint8Array(newArrayBuffer, 0, newMaxLength);\n\t\t\tnewView.set(this._uint8Array);      // memcpy\n\t\t\tthis._arrayBuffer = newArrayBuffer;\n\t\t\tthis._maxLength = newMaxLength;\n\n\t\t\tthis._updateViews();\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 1);\n\n\t\tthis._int8Array[this.position++] = (~~b); // ~~ is cast to int in js...\n\t\t\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position + 1 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t\n\t\treturn this._int8Array[this.position++];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureSpace(this.position + offset + length);\n\t\t\n\t\tbytes.arrayBufferView.set(this._uint8Array.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 1);\n\t\t\n\t\tthis._uint8Array[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\t\t\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position + 1 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t\n\t\treturn this._uint8Array[this.position++];\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this._arrayBuffer);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\n\tpublic writeInt(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 4);\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tthis._int32Array[this.position >> 2] = (~~b); // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tthis._int32Swap[0] = (~~b);\n\t\t\tthis._uint8Array[this.position] = this._uint8Swap[0];\n\t\t\tthis._uint8Array[this.position + 1] = this._uint8Swap[1];\n\t\t\tthis._uint8Array[this.position + 2] = this._uint8Swap[2];\n\t\t\tthis._uint8Array[this.position + 3] = this._uint8Swap[3];\n\t\t}\n\n\t\tthis.position += 4;\n\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\t\n\tpublic readInt():number\n\t{\n\t\tif (this.position + 4 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view:Uint32Array;\n\t\tvar pa:number;\n\t\tif ((this.position & 3) == 0) {\n\t\t\tview = this._int32Array;\n\t\t\tpa = this.position >> 2;\n\t\t} else {\n\t\t\tview = this._int32Swap;\n\t\t\tthis._uint8Swap[0] = this._uint8Array[this.position];\n\t\t\tthis._uint8Swap[1] = this._uint8Array[this.position + 1];\n\t\t\tthis._uint8Swap[2] = this._uint8Array[this.position + 2];\n\t\t\tthis._uint8Swap[3] = this._uint8Array[this.position + 3];\n\t\t\tpa = 0;\n\t\t}\n\n\t\tthis.position += 4;\n\n\t\treturn view[pa];\n\t}\n\n\tpublic writeShort(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 2);\n\n\t\tif ((this.position & 1) == 0) {\n\t\t\tthis._int16Array[this.position >> 1] = (~~b); // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tthis._int16Swap[0] = (~~b);\n\t\t\tthis._uint8Array[this.position] = this._uint8Swap[0];\n\t\t\tthis._uint8Array[this.position + 1] = this._uint8Swap[1];\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tif (this.position + 2 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view:Uint16Array;\n\t\tvar pa:number;\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tview = this._int16Array;\n\t\t\tpa = this.position >> 1;\n\t\t} else {\n\t\t\tview = this._int16Swap;\n\t\t\tthis._uint8Swap[0] = this._uint8Array[this.position];\n\t\t\tthis._uint8Swap[1] = this._uint8Array[this.position + 1];\n\t\t\tpa = 0;\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\treturn view[pa];\n\t}\n\n\tpublic writeDouble(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 8);\n\n\t\tif (( this.position & 7 ) == 0) {\n\t\t\tthis._float64Array[this.position >> 3] = b;\n\t\t} else {\n\t\t\tthis._float64Swap[0] = b\n\t\t\tthis._uint8Array[this.position] = this._uint8Swap[0];\n\t\t\tthis._uint8Array[this.position + 1] = this._uint8Swap[1];\n\t\t\tthis._uint8Array[this.position + 2] = this._uint8Swap[2];\n\t\t\tthis._uint8Array[this.position + 3] = this._uint8Swap[3];\n\t\t\tthis._uint8Array[this.position + 4] = this._uint8Swap[4];\n\t\t\tthis._uint8Array[this.position + 5] = this._uint8Swap[5];\n\t\t\tthis._uint8Array[this.position + 6] = this._uint8Swap[6];\n\t\t\tthis._uint8Array[this.position + 7] = this._uint8Swap[7];\n\t\t}\n\n\t\tthis.position += 8;\n\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\t\n\tpublic readDouble():number\n\t{\n\t\tif (this.position + 8 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view:Float32Array;\n\t\tvar pa:number;\n\t\tif ((this.position & 7) == 0) {\n\t\t\tview = this._float64Array;\n\t\t\tpa = this.position >> 3;\n\t\t} else {\n\t\t\tview = this._float64Swap;\n\t\t\tthis._uint8Swap[0] = this._uint8Array[this.position];\n\t\t\tthis._uint8Swap[1] = this._uint8Array[this.position + 1];\n\t\t\tthis._uint8Swap[2] = this._uint8Array[this.position + 2];\n\t\t\tthis._uint8Swap[3] = this._uint8Array[this.position + 3];\n\t\t\tthis._uint8Swap[4] = this._uint8Array[this.position + 4];\n\t\t\tthis._uint8Swap[5] = this._uint8Array[this.position + 5];\n\t\t\tthis._uint8Swap[6] = this._uint8Array[this.position + 6];\n\t\t\tthis._uint8Swap[7] = this._uint8Array[this.position + 7];\n\t\t\tpa = 0;\n\t\t}\n\n\t\tthis.position += 8;\n\n\t\treturn view[pa];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 2);\n\n\t\tif ((this.position & 1) == 0) {\n\t\t\tthis._uint16Array[this.position >> 1] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tthis._uint16Swap[0] = (~~b) & 0xffff;\n\t\t\tthis._uint8Array[this.position] = this._uint8Swap[0];\n\t\t\tthis._uint8Array[this.position + 1] = this._uint8Swap[1];\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\t\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view:Uint16Array;\n\t\tvar pa:number;\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tview = this._uint16Array;\n\t\t\tpa = this.position >> 1;\n\t\t} else {\n\t\t\tview = this._uint16Swap;\n\t\t\tthis._uint8Swap[0] = this._uint8Array[this.position];\n\t\t\tthis._uint8Swap[1] = this._uint8Array[this.position + 1];\n\t\t\tpa = 0;\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\treturn view[pa];\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 4);\n\t\t\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tthis._uint32Array[this.position >> 2] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tthis._uint32Swap[0] = (~~b) & 0xffffffff;\n\t\t\tthis._uint8Array[this.position] = this._uint8Swap[0];\n\t\t\tthis._uint8Array[this.position + 1] = this._uint8Swap[1];\n\t\t\tthis._uint8Array[this.position + 2] = this._uint8Swap[2];\n\t\t\tthis._uint8Array[this.position + 3] = this._uint8Swap[3];\n\t\t}\n\t\t\n\t\tthis.position += 4;\n\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view:Uint32Array;\n\t\tvar pa:number;\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tview = this._uint32Array;\n\t\t\tpa = this.position >> 2;\n\t\t} else {\n\t\t\tview = this._uint32Swap;\n\t\t\tthis._uint8Swap[0] = this._uint8Array[this.position];\n\t\t\tthis._uint8Swap[1] = this._uint8Array[this.position + 1];\n\t\t\tthis._uint8Swap[2] = this._uint8Array[this.position + 2];\n\t\t\tthis._uint8Swap[3] = this._uint8Array[this.position + 3];\n\t\t\tpa = 0;\n\t\t}\n\n\t\tthis.position += 4;\n\n\t\treturn view[pa];\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureSpace(this.position + 4);\n\n\t\tvar view:Float32Array;\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tview = this._float32Array;\n\t\t\tview[this.position >> 2] = b;\n\t\t} else {\n\t\t\tthis._float32Swap[0] = b;\n\t\t\tthis._uint8Array[this.position] = this._uint8Swap[0];\n\t\t\tthis._uint8Array[this.position + 1] = this._uint8Swap[1];\n\t\t\tthis._uint8Array[this.position + 2] = this._uint8Swap[2];\n\t\t\tthis._uint8Array[this.position + 3] = this._uint8Swap[3];\n\t\t}\n\t\t\n\t\tthis.position += 4;\n\n\t\tif (this.length < this.position)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat():number\n\t{\n\t\tif (this.position + 4 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view:Float32Array;\n\t\tvar pa:number;\n\t\tif ((this.position & 3) == 0) {\n\t\t\tview = this._float32Array;\n\t\t\tpa = this.position >> 2;\n\t\t} else {\n\t\t\tview = this._float32Swap;\n\t\t\tthis._uint8Swap[0] = this._uint8Array[this.position];\n\t\t\tthis._uint8Swap[1] = this._uint8Array[this.position + 1];\n\t\t\tthis._uint8Swap[2] = this._uint8Array[this.position + 2];\n\t\t\tthis._uint8Swap[3] = this._uint8Array[this.position + 3];\n\t\t\tpa = 0;\n\t\t}\n\n\t\tthis.position += 4;\n\n\t\treturn view[pa];\n\t}\n\t\n\tprivate _updateViews()\n\t{\n\t\tthis._uint8Array = new Uint8Array(this._arrayBuffer);\n\t\tthis._int8Array = new Int8Array(this._arrayBuffer);\n\t\tthis._uint16Array = new Uint16Array(this._arrayBuffer);\n\t\tthis._int16Array = new Int16Array(this._arrayBuffer);\n\t\tthis._uint32Array = new Uint32Array(this._arrayBuffer);\n\t\tthis._int32Array = new Int32Array(this._arrayBuffer);\n\t\tthis._float32Array = new Float32Array(this._arrayBuffer);\n\t\tthis._float64Array = new Float64Array(this._arrayBuffer);\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = ImageUtils",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapImage2D;\n\n\t/**\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapImage2D;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\t//use (OR) to create non-square texture mipmaps\n\t\twhile (w >= 1 || h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t} else {\n\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport = XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}