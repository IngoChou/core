{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-core/lib/base/BitmapDataChannel.ts","awayjs-core.js","awayjs-core/lib/base/BitmapData.ts","awayjs-core/lib/base/BlendMode.ts","awayjs-core/lib/errors/AbstractMethodError.ts","awayjs-core/lib/errors/ArgumentError.ts","awayjs-core/lib/errors/DocumentError.ts","awayjs-core/lib/errors/Error.ts","awayjs-core/lib/errors/PartialImplementationError.ts","awayjs-core/lib/errors/RangeError.ts","awayjs-core/lib/events/AssetEvent.ts","awayjs-core/lib/events/EventDispatcher.ts","awayjs-core/lib/events/Event.ts","awayjs-core/lib/events/HTTPStatusEvent.ts","awayjs-core/lib/events/IOErrorEvent.ts","awayjs-core/lib/events/LoaderEvent.ts","awayjs-core/lib/events/ParserEvent.ts","awayjs-core/lib/events/ProgressEvent.ts","awayjs-core/lib/events/ProjectionEvent.ts","awayjs-core/lib/events/TimerEvent.ts","awayjs-core/lib/geom/Box.ts","awayjs-core/lib/geom/ColorTransform.ts","awayjs-core/lib/geom/MathConsts.ts","awayjs-core/lib/geom/Matrix3DUtils.ts","awayjs-core/lib/geom/Matrix3D.ts","awayjs-core/lib/geom/Matrix.ts","awayjs-core/lib/geom/Orientation3D.ts","awayjs-core/lib/geom/PerspectiveProjection.ts","awayjs-core/lib/geom/Plane3D.ts","awayjs-core/lib/geom/PlaneClassification.ts","awayjs-core/lib/geom/Point.ts","awayjs-core/lib/geom/PoissonLookup.ts","awayjs-core/lib/geom/Quaternion.ts","awayjs-core/lib/geom/Rectangle.ts","awayjs-core/lib/geom/Sphere.ts","awayjs-core/lib/geom/UVTransform.ts","awayjs-core/lib/geom/Vector3D.ts","awayjs-core/lib/library/AssetLibraryBundle.ts","awayjs-core/lib/library/AssetLibraryIterator.ts","awayjs-core/lib/library/AssetLibrary.ts","awayjs-core/lib/library/AssetLoaderContext.ts","awayjs-core/lib/library/AssetLoaderToken.ts","awayjs-core/lib/library/AssetLoader.ts","awayjs-core/lib/library/AssetType.ts","awayjs-core/lib/library/ConflictPrecedence.ts","awayjs-core/lib/library/ConflictStrategyBase.ts","awayjs-core/lib/library/ConflictStrategy.ts","awayjs-core/lib/library/ErrorConflictStrategy.ts","awayjs-core/lib/library/IDUtil.ts","awayjs-core/lib/library/IgnoreConflictStrategy.ts","awayjs-core/lib/library/NamedAssetBase.ts","awayjs-core/lib/library/NumSuffixConflictStrategy.ts","awayjs-core/lib/net/CrossDomainPolicy.ts","awayjs-core/lib/net/URLLoaderDataFormat.ts","awayjs-core/lib/net/URLLoader.ts","awayjs-core/lib/net/URLRequestMethod.ts","awayjs-core/lib/net/URLRequest.ts","awayjs-core/lib/net/URLVariables.ts","awayjs-core/lib/parsers/CubeTextureParser.ts","awayjs-core/lib/parsers/ParserBase.ts","awayjs-core/lib/parsers/ParserDataFormat.ts","awayjs-core/lib/parsers/ParserUtils.ts","awayjs-core/lib/parsers/ResourceDependency.ts","awayjs-core/lib/parsers/Texture2DParser.ts","awayjs-core/lib/projections/CoordinateSystem.ts","awayjs-core/lib/projections/FreeMatrixProjection.ts","awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts","awayjs-core/lib/projections/OrthographicOffCenterProjection.ts","awayjs-core/lib/projections/OrthographicProjection.ts","awayjs-core/lib/projections/PerspectiveProjection.ts","awayjs-core/lib/projections/ProjectionBase.ts","awayjs-core/lib/textures/BitmapCubeTexture.ts","awayjs-core/lib/textures/BitmapTexture.ts","awayjs-core/lib/textures/CubeTextureBase.ts","awayjs-core/lib/textures/ImageCubeTexture.ts","awayjs-core/lib/textures/ImageTexture.ts","awayjs-core/lib/textures/MipmapGenerator.ts","awayjs-core/lib/textures/RenderTexture.ts","awayjs-core/lib/textures/SpecularBitmapTexture.ts","awayjs-core/lib/textures/Texture2DBase.ts","awayjs-core/lib/textures/TextureProxyBase.ts","awayjs-core/lib/ui/Keyboard.ts","awayjs-core/lib/utils/ByteArrayBase.ts","awayjs-core/lib/utils/ByteArrayBuffer.ts","awayjs-core/lib/utils/ByteArray.ts","awayjs-core/lib/utils/CSS.ts","awayjs-core/lib/utils/ColorUtils.ts","awayjs-core/lib/utils/Debug.ts","awayjs-core/lib/utils/RequestAnimationFrame.ts","awayjs-core/lib/utils/TextureUtils.ts","awayjs-core/lib/utils/Timer.ts","awayjs-core/lib/utils/getTimer.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-core\\lib\\base\\BitmapDataChannel","module","BitmapDataChannel","ALPHA","BLUE","GREEN","RED","awayjs-core\\lib\\base\\BitmapData","Rectangle","ColorUtils","BitmapData","width","height","transparent","fillColor","this","_locked","_transparent","_imageCanvas","document","createElement","_context","getContext","_rect","fillRect","Object","defineProperty","prototype","get","set","value","putImageData","_imageData","getImageData","enumerable","configurable","clone","draw","colorTransform","rect","data","j","index","x","y","redMultiplier","redOffset","greenMultiplier","greenOffset","blueMultiplier","blueOffset","alphaMultiplier","alphaOffset","copyChannel","sourceBitmap","sourceRect","destPoint","sourceChannel","destChannel","imageData","sourceData","destData","sourceOffset","Math","round","log","destOffset","sourceIndex","destIndex","copyPixels","bmpd","destRect","_copyPixels","dispose","source","matrix","blendMode","clipRect","smoothing","_draw","color","_fillRect","getPixel","g","b","pixelData","getPixel32","lock","setArray","inputArray","argb","float32ColorToARGB","setPixel","setPixel32","setPixels","inputByteArray","position","readUnsignedInt","unlock","drawImage","canvas","HTMLImageElement","save","setTransform","c","d","tx","ty","restore","HTMLElement","clearRect","fillStyle","awayjs-core/lib/geom/Rectangle","undefined","awayjs-core/lib/utils/ColorUtils","awayjs-core\\lib\\base\\BlendMode","BlendMode","ADD","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","NORMAL","OVERLAY","SCREEN","SHADER","SUBTRACT","awayjs-core\\lib\\errors\\AbstractMethodError","__extends","p","hasOwnProperty","__","constructor","AbstractMethodError","_super","message","id","awayjs-core/lib/errors/Error","awayjs-core\\lib\\errors\\ArgumentError","ArgumentError","awayjs-core\\lib\\errors\\DocumentError","DocumentError","DOCUMENT_DOES_NOT_EXIST","awayjs-core\\lib\\errors\\Error","_name","_errorID","_messsage","name","awayjs-core\\lib\\errors\\PartialImplementationError","PartialImplementationError","dependency","awayjs-core\\lib\\errors\\RangeError","RangeError","awayjs-core\\lib\\events\\AssetEvent","Event","AssetEvent","type","asset","prevName","_asset","_prevName","assetPrevName","ASSET_COMPLETE","ASSET_RENAME","ASSET_CONFLICT_RESOLVED","TEXTURE_SIZE_ERROR","awayjs-core/lib/events/Event","awayjs-core\\lib\\events\\EventDispatcher","EventDispatcher","target","listeners","Array","addEventListener","listener","getEventListenerIndex","push","removeEventListener","splice","dispatchEvent","event","listenerArray","hasEventListener","awayjs-core\\lib\\events\\Event","COMPLETE","OPEN","ENTER_FRAME","EXIT_FRAME","RESIZE","ERROR","CHANGE","awayjs-core\\lib\\events\\HTTPStatusEvent","HTTPStatusEvent","status","HTTP_STATUS","awayjs-core\\lib\\events\\IEventDispatcher","awayjs-core\\lib\\events\\IOErrorEvent","IOErrorEvent","IO_ERROR","awayjs-core\\lib\\events\\LoaderEvent","LoaderEvent","url","content","assets","_url","_content","_assets","RESOURCE_COMPLETE","awayjs-core\\lib\\events\\ParserEvent","ParserEvent","_message","PARSE_COMPLETE","PARSE_ERROR","READY_FOR_DEPENDENCIES","awayjs-core\\lib\\events\\ProgressEvent","ProgressEvent","PROGRESS","awayjs-core\\lib\\events\\ProjectionEvent","ProjectionEvent","projection","_projection","MATRIX_CHANGED","awayjs-core\\lib\\events\\TimerEvent","TimerEvent","TIMER","TIMER_COMPLETE","awayjs-core\\lib\\geom\\Box","Vector3D","Box","z","depth","val","_bottomRightBack","_size","_topLeftFront","contains","containsPoint","containsBox","box","copyFrom","sourceBox","equals","toCompare","inflate","dx","dy","dz","inflatePoint","delta","intersection","toIntersect","intersects","rayIntersection","direction","targetNormal","halfExtentsX","halfExtentsY","halfExtentsZ","centerX","centerY","centerZ","px","py","pz","vx","vy","vz","ix","iy","iz","rayEntryDistance","closestPointToPoint","point","isEmpty","offset","offsetPosition","setEmpty","setTo","xa","ya","za","widtha","heighta","deptha","toString","union","toUnion","awayjs-core/lib/geom/Vector3D","awayjs-core\\lib\\geom\\ColorTransform","ColorTransform","concat","second","awayjs-core\\lib\\geom\\MathConsts","MathConsts","RADIANS_TO_DEGREES","PI","DEGREES_TO_RADIANS","awayjs-core\\lib\\geom\\Matrix3DUtils","Matrix3D","Matrix3DUtils","quaternion2matrix","quarternion","m","w","xx","xy","xz","xw","yy","yz","yw","zz","zw","raw","RAW_DATA_CONTAINER","copyRawDataFrom","getForward","v","copyColumnTo","normalize","getUp","getRight","compare","m1","m2","r1","r2","rawData","copyRawDataTo","lookAt","pos","dir","up","dirN","upN","lftN","crossProduct","dotProduct","reflection","plane","ab2","ac2","bc2","transformVector","vector","result","k","h","deltaTransformVector","getTranslation","transform","deltaTransformVectors","vin","vout","outIndex","CALCULATION_MATRIX","awayjs-core/lib/geom/Matrix3D","awayjs-core\\lib\\geom\\Matrix3D","Orientation3D","append","lhs","m111","m121","m131","m141","m112","m122","m132","m142","m113","m123","m133","m143","m114","m124","m134","m144","m211","m221","m231","m241","m212","m222","m232","m242","m213","m223","m233","m243","m214","m224","m234","m244","appendRotation","degrees","axis","getAxisRotation","appendScale","xScale","yScale","zScale","appendTranslation","slice","copyColumnFrom","column","vector3D","sourceMatrix3D","len","transpose","copyRowFrom","row","copyRowTo","copyToMatrix3D","dest","decompose","orientationStyle","q","vec","mr","scale","sqrt","rot","AXIS_ANGLE","acos","QUATERNION","tr","EULER_ANGLES","asin","atan2","identity","interpolate","thisMat","toMat","percent","interpolateTo","invert","determinant","invertable","abs","m11","m21","m31","m41","m12","m22","m32","m42","m13","m23","m33","m43","m14","m24","m34","m44","prepend","rhs","prependRotation","prependScale","prependTranslation","recompose","components","angle","cos","sin","transformVectors","oRawData","rad","tmp1","tmp2","toFixed","decimalPlace","magnitude","pow","awayjs-core/lib/errors/ArgumentError","awayjs-core/lib/geom/Orientation3D","awayjs-core\\lib\\geom\\Matrix","Point","Matrix","a1","c1","tx1","sourceMatrix","createBox","scaleX","scaleY","rotation","createGradientBox","deltaTransformPoint","norm","multiply","rotate","sx","sy","transformPoint","translate","awayjs-core/lib/geom/Point","awayjs-core\\lib\\geom\\Orientation3D","awayjs-core\\lib\\geom\\PerspectiveProjection","PerspectiveProjection","toMatrix3D","_matrix3D","awayjs-core\\lib\\geom\\Plane3D","PlaneClassification","Plane3D","_iAlignment","ALIGN_XY_AXIS","ALIGN_YZ_AXIS","ALIGN_XZ_AXIS","ALIGN_ANY","fromPoints","p0","p1","p2","d1x","d1y","d1z","d2x","d2y","d2z","fromNormalAndPoint","normal","distance","classifyPoint","epsilon","FRONT","BACK","INTERSECT","awayjs-core/lib/geom/PlaneClassification","awayjs-core\\lib\\geom\\PlaneClassification","IN","OUT","awayjs-core\\lib\\geom\\Point","add","sourcePoint","thickness","invLength","subtract","pt1","pt2","polar","awayjs-core\\lib\\geom\\PoissonLookup","PoissonLookup","initDistributions","_distributions","getDistribution","awayjs-core\\lib\\geom\\Quaternion","Quaternion","qa","qb","w1","x1","y1","z1","w2","x2","y2","z2","multiplyVector","fromAxisAngle","sin_a","cos_a","slerp","dot","s1","s2","lerp","fromEulerAngles","ax","ay","az","halfX","halfY","halfZ","cosX","sinX","cosY","sinY","cosZ","sinZ","toEulerAngles","mag","xy2","xz2","xw2","yz2","yw2","zw2","ww","fromMatrix","toRawData","exclude4thRow","rotatePoint","awayjs-core/lib/geom/Matrix3DUtils","awayjs-core\\lib\\geom\\Rectangle","_bottomRight","_topLeft","containsRect","offsetPoint","awayjs-core\\lib\\geom\\Sphere","Sphere","radius","det","sqrtDet","awayjs-core\\lib\\geom\\UVTransform","UVTransform","_uvMatrix","_rotation","_scaleU","_scaleV","_offsetU","_offsetV","_uvMatrixDirty","updateUVMatrix","awayjs-core/lib/geom/Matrix","awayjs-core\\lib\\geom\\Vector3D","lengthSquared","angleBetween","src","decrementBy","allFour","incrementBy","nearEquals","tolerance","negate","project","scaleBy","X_AXIS","Y_AXIS","Z_AXIS","awayjs-core\\lib\\library\\AssetLibraryBundle","AssetLibraryIterator","AssetLoader","ConflictPrecedence","ConflictStrategy","NamedAssetBase","AssetLibraryBundle","_this","_loadingSessionsGarbage","_assetDictionary","_loadingSessions","conflictStrategy","IGNORE","create","conflictPrecedence","FAVOR_NEW","_onAssetRenameDelegate","onAssetRename","_onAssetConflictResolvedDelegate","onAssetConflictResolved","_onResourceCompleteDelegate","onResourceComplete","_onTextureSizeErrorDelegate","onTextureSizeError","_onAssetCompleteDelegate","onAssetComplete","_onLoadErrorDelegate","onLoadError","_onParseErrorDelegate","onParseError","getInstance","key","_iInstances","enableParser","parserClass","enableParsers","parserClasses","_strategy","_strategyPreference","createIterator","assetTypeFilter","namespaceFilter","filterFunc","load","req","context","ns","parser","loader","_iAddErrorHandler","_iAddParseErrorHandler","loadData","getAsset","_assetDictDirty","rehashAssetDict","DEFAULT_NAMESPACE","addAsset","old","indexOf","assetNamespace","resolveConflict","removeAsset","idx","removeAssetFromDict","removeAssetByName","removeAllAssets","removeNamespaceAssets","old_assets","autoRemoveEmptyNamespace","empty","stopAllLoadingSessions","killLoadingSession","_gcTimeoutIID","setTimeout","loadingSessionGC","pop","clearTimeout","stop","dict","awayjs-core/lib/events/AssetEvent","awayjs-core/lib/events/EventDispatcher","awayjs-core/lib/events/IOErrorEvent","awayjs-core/lib/events/LoaderEvent","awayjs-core/lib/events/ParserEvent","awayjs-core/lib/library/AssetLibraryIterator","awayjs-core/lib/library/AssetLoader","awayjs-core/lib/library/ConflictPrecedence","awayjs-core/lib/library/ConflictStrategy","awayjs-core/lib/library/NamedAssetBase","awayjs-core\\lib\\library\\AssetLibraryIterator","filter","_idx","_filtered","next","reset","setIndex","assetType","awayjs-core\\lib\\library\\AssetLibrary","AssetLibrary","getBundle","stopLoad","awayjs-core/lib/library/AssetLibraryBundle","awayjs-core\\lib\\library\\AssetLoaderContext","AssetLoaderContext","includeDependencies","dependencyBaseUrl","_includeDependencies","_dependencyBaseUrl","_embeddedDataByUrl","_remappedUrls","_materialMode","UNDEFINED","materialMode","_overrideAbsPath","_overrideFullUrls","mapUrl","originalUrl","newUrl","mapUrlToData","_iHasDataForUrl","_iGetDataForUrl","_iHasMappingForUrl","_iGetRemappedUrl","SINGLEPASS_MATERIALS","MULTIPASS_MATERIALS","awayjs-core\\lib\\library\\AssetLoaderToken","AssetLoaderToken","_iLoader","awayjs-core\\lib\\library\\AssetLoader","URLLoader","URLLoaderDataFormat","CubeTextureParser","ResourceDependency","Texture2DParser","_stack","_errorHandlers","_parseErrorHandlers","_onReadyForDependenciesDelegate","onReadyForDependencies","_onParseCompleteDelegate","onParseComplete","_onLoadCompleteDelegate","onLoadComplete","_parsers","parsers","_baseDependency","_token","_uri","replace","_namespace","retrieveDependency","retrieveNext","_currentDependency","dependencies","parsingPaused","_iResumeParsingAfterDependencies","prev","_iSuccess","resolve","addEventListeners","request","Function","_iSetData","retrieveAsRawData","parseDependency","resolveDependencyUrl","dataFormat","BINARY","_iSetParser","getParserFromSuffix","joinUrl","base","end","charAt","substr","scheme_re","RegExp","overrideAbsolutePaths","test","overrideFullURLs","noscheme_url","substring","lastIndexOf","retrieveParserDependencies","parserDependancies","resolveParserDependencies","handled","isDependency","removeEventListeners","resolveFailure","resetAssetPath","suppresAssetEvents","resolveName","handler","getParserFromData","supportsData","_iFileName","parseAsync","split","fileExtension","toLowerCase","supportsType","awayjs-core/lib/library/AssetLoaderToken","awayjs-core/lib/net/URLLoader","awayjs-core/lib/net/URLLoaderDataFormat","awayjs-core/lib/parsers/CubeTextureParser","awayjs-core/lib/parsers/ResourceDependency","awayjs-core/lib/parsers/Texture2DParser","awayjs-core\\lib\\library\\AssetType","AssetType","ANIMATION_NODE","ANIMATION_SET","ANIMATION_STATE","ANIMATOR","BILLBOARD","CAMERA","CONTAINER","EFFECTS_METHOD","GEOMETRY","LINE_SEGMENT","LIGHT","LIGHT_PICKER","MATERIAL","MESH","TRIANGLE_SUB_MESH","CURVE_SUB_MESH","LINE_SUB_MESH","PRIMITIVE_PREFAB","SHADOW_MAP_METHOD","SKELETON","SKELETON_POSE","SKYBOX","STATE_TRANSITION","TEXTURE","TEXTURE_PROJECTOR","TIMELINE","awayjs-core\\lib\\library\\ConflictPrecedence","FAVOR_OLD","awayjs-core\\lib\\library\\ConflictStrategyBase","ConflictStrategyBase","changedAsset","oldAsset","assetsDictionary","precedence","_pUpdateNames","nonConflictingName","newAsset","loser_prev_name","winner","loser","awayjs-core/lib/errors/AbstractMethodError","awayjs-core\\lib\\library\\ConflictStrategy","ErrorConflictStrategy","IgnoreConflictStrategy","NumSuffixConflictStrategy","include","APPEND_NUM_SUFFIX","THROW_ERROR","awayjs-core/lib/library/ErrorConflictStrategy","awayjs-core/lib/library/IgnoreConflictStrategy","awayjs-core/lib/library/NumSuffixConflictStrategy","awayjs-core\\lib\\library\\ErrorConflictStrategy","assetFullPath","awayjs-core/lib/library/ConflictStrategyBase","awayjs-core\\lib\\library\\IAsset","awayjs-core\\lib\\library\\IDUtil","IDUtil","createUID","uid","ALPHA_CHAR_CODES","floor","random","time","Date","getTime","timeString","toUpperCase","charCodeAt","String","fromCharCode","apply","awayjs-core\\lib\\library\\IgnoreConflictStrategy","awayjs-core\\lib\\library\\NamedAssetBase","_id","ID_COUNT","_originalName","updateFullPath","_full_path","assetPathEquals","overrideOriginal","awayjs-core\\lib\\library\\NumSuffixConflictStrategy","separator","_separator","_next_suffix","orig","new_name","suffix","parseInt","isNaN","awayjs-core\\lib\\net\\CrossDomainPolicy","CrossDomainPolicy","ANONYMOUS","USE_CREDENTIALS","awayjs-core\\lib\\net\\URLLoaderDataFormat","TEXT","VARIABLES","BLOB","ARRAY_BUFFER","awayjs-core\\lib\\net\\URLLoader","URLRequestMethod","URLVariables","AwayEvent","AwayProgressEvent","_bytesLoaded","_bytesTotal","_dataFormat","_loadError","_request","_data","format","initXHR","method","POST","postRequest","getRequest","close","_XHR","abort","disposeXHR","setResponseType","xhr","responseType","open","async","send","handleXmlHttpRequestException","urlVars","formData","error","XMLHttpRequest","onloadstart","onLoadStart","onprogress","onProgress","onabort","onAbort","onerror","onload","ontimeout","onTimeOut","onloadend","onLoadEnd","onreadystatechange","onReadyStateChange","decodeURLVariables","join","tokens","re","exec","decodeURIComponent","readyState","_loadErrorEvent","_progressEvent","bytesTotal","total","bytesLoaded","loaded","_loadStartEvent","responseText","response","_loadCompleteEvent","awayjs-core/lib/events/HTTPStatusEvent","awayjs-core/lib/events/ProgressEvent","awayjs-core/lib/net/URLRequestMethod","awayjs-core/lib/net/URLVariables","awayjs-core\\lib\\net\\URLRequestMethod","GET","awayjs-core\\lib\\net\\URLRequest","URLRequest","awayjs-core\\lib\\net\\URLVariables","_variables","decode","obj","fd","FormData","awayjs-core\\lib\\parsers\\CubeTextureParser","ParserBase","ImageCubeTexture","extension","JSON","parse","_iResolveDependency","resourceDependency","_iResolveDependencyFailure","_pProceedParsing","_imgDependencyDictionary","_getHTMLImageElement","posX","negX","posY","negY","posZ","negZ","_pFinalizeAsset","PARSING_DONE","json","rec","_pDieWithError","_pAddDependency","image","_validateCubeData","_pPauseAndRetrieveDependencies","MORE_TO_PARSE","htmlImageElement","awayjs-core/lib/net/URLRequest","awayjs-core/lib/parsers/ParserBase","awayjs-core/lib/textures/ImageCubeTexture","awayjs-core\\lib\\parsers\\ParserBase","ParserUtils","TextureUtils","Timer","getTimer","_dependencies","_pOnIntervalDelegate","_pOnInterval","_pContent","isBitmapDataValid","bitmapData","isValid","console","_parsingFailure","_parsingPaused","_parsingComplete","newMaterialMode","frameLimit","_pStartParsing","_iResolveDependencyName","_timer","start","type_event","type_name","suppressErrorEvents","_pHasTime","_lastFrameTime","_frameLimit","_pFinishParsing","_pGetTextData","_pGetByteData","toByteArray","awayjs-core/lib/events/TimerEvent","awayjs-core/lib/parsers/ParserUtils","awayjs-core/lib/utils/TextureUtils","awayjs-core/lib/utils/Timer","awayjs-core/lib/utils/getTimer","awayjs-core\\lib\\parsers\\ParserDataFormat","ParserDataFormat","PLAIN_TEXT","IMAGE","awayjs-core\\lib\\parsers\\ParserUtils","ByteArray","arrayBufferToImage","byteStr","bytes","Uint8Array","byteLength","base64Image","window","btoa","str","img","Image","byteArrayToImage","arraybytes","blobToImage","URLObj","createObjectURL","setArrayBuffer","ba","readUTFBytes","min","getBytesAvailable","awayjs-core/lib/utils/ByteArray","awayjs-core\\lib\\parsers\\ResourceDependency","parentParser","suppressAssetEvents","_parser","_parentParser","_retrieveAsRawData","_suppressAssetEvents","awayjs-core\\lib\\parsers\\Texture2DParser","ImageTexture","readUnsignedShort","readShort","readByte","sizeError","_loadingImage","_htmlImageElement","isHTMLImageElementValid","ArrayBuffer","Blob","awayjs-core/lib/textures/ImageTexture","awayjs-core\\lib\\pool\\ITextureData","awayjs-core\\lib\\projections\\CoordinateSystem","CoordinateSystem","LEFT_HANDED","RIGHT_HANDED","awayjs-core\\lib\\projections\\FreeMatrixProjection","ProjectionBase","FreeMatrixProjection","_pMatrix","_pNear","_pFar","_pAspectRatio","pInvalidateMatrix","pUpdateMatrix","_pMatrixInvalid","awayjs-core/lib/projections/PerspectiveProjection","awayjs-core/lib/projections/ProjectionBase","awayjs-core\\lib\\projections\\IProjection","awayjs-core\\lib\\projections\\ObliqueNearPlaneProjection","ObliqueNearPlaneProjection","baseProjection","_onProjectionMatrixChangedDelegate","onProjectionMatrixChanged","_baseProjection","frustumCorners","near","far","_iAspectRatio","_plane","cx","cy","cz","cw","signX","signY","inverse","awayjs-core/lib/events/ProjectionEvent","awayjs-core\\lib\\projections\\OrthographicOffCenterProjection","OrthographicOffCenterProjection","minX","maxX","minY","maxY","_minX","_maxX","_minY","_maxY","unproject","nX","nY","sZ","unprojectionMatrix","_pFrustumCorners","awayjs-core\\lib\\projections\\OrthographicProjection","OrthographicProjection","projectionHeight","_projectionHeight","_yMax","_xMax","left","right","top","bottom","_pScissorRect","_pViewPort","xWidth","yHgt","center","middle","awayjs-core\\lib\\projections\\PerspectiveProjection","fieldOfView","coordinateSystem","_fieldOfView","_focalLength","_hFieldOfView","_hFocalLength","_preserveAspectRatio","_preserveFocalLength","tan","_pCoordinateSystem","atan","tanMinX","_pOriginX","tanMaxX","tanMinY","_pOriginY","tanMaxY","awayjs-core/lib/projections/CoordinateSystem","awayjs-core\\lib\\projections\\ProjectionBase","_unprojectionInvalid","point3d","_unprojection","_iUpdateScissorRect","_iUpdateViewport","awayjs-core\\lib\\textures\\BitmapCubeTexture","CubeTextureBase","BitmapCubeTexture","_bitmapDatas","_testSize","invalidateContent","_pSetSize","_iGetTextureData","side","awayjs-core/lib/textures/CubeTextureBase","awayjs-core\\lib\\textures\\BitmapTexture","Texture2DBase","BitmapTexture","_bitmapData","awayjs-core/lib/textures/Texture2DBase","awayjs-core\\lib\\textures\\CubeTextureBase","MipmapGenerator","TextureProxyBase","_mipmapDataArray","_mipmapDataDirtyArray","size","_pSize","invalidateSize","mipmapData","freeMipMapHolder","_iGetMipmapData","generateMipMaps","awayjs-core/lib/textures/MipmapGenerator","awayjs-core/lib/textures/TextureProxyBase","awayjs-core\\lib\\textures\\ImageCubeTexture","_htmlImageElements","awayjs-core\\lib\\textures\\ImageTexture","awayjs-core\\lib\\textures\\MipmapGenerator","output","alpha","mipmap","_getMipmapHolder","_matrix","mipMapHolder","newW","newH","_mipMaps","_mipMapUses","holderWidth","holderHeight","awayjs-core/lib/base/BitmapData","awayjs-core\\lib\\textures\\RenderTexture","RenderTexture","_pWidth","isDimensionValid","_pHeight","awayjs-core\\lib\\textures\\SpecularBitmapTexture","SpecularBitmapTexture","specularMap","glossMap","bmd","_specularMap","_glossMap","oldBitmap","origin","awayjs-core/lib/base/BitmapDataChannel","awayjs-core/lib/textures/BitmapTexture","awayjs-core\\lib\\textures\\Texture2DBase","_mipmapData","_mipmapDataDirty","awayjs-core\\lib\\textures\\TextureProxyBase","generateMipmaps","_pFormat","_textureData","invalidate","_iAddTextureData","textureData","_iRemoveTextureData","awayjs-core/lib/library/AssetType","awayjs-core\\lib\\ui\\Keyboard","Keyboard","A","ALTERNATE","AUDIO","B","BACKQUOTE","BACKSLASH","BACKSPACE","C","CAPS_LOCK","CHANNEL_DOWN","CHANNEL_UP","COMMA","COMMAND","CONTROL","D","DELETE","DOWN","DVR","E","END","ENTER","EQUAL","ESCAPE","EXIT","F","F1","F10","F11","F12","F13","F14","F15","F2","F3","F4","F5","F6","F7","F8","F9","FAST_FORWARD","G","GUIDE","H","HELP","HOME","I","INFO","INPUT","INSERT","J","K","KEYNAME_BEGIN","KEYNAME_BREAK","KEYNAME_CLEARDISPLAY","KEYNAME_CLEARLINE","KEYNAME_DELETE","KEYNAME_DELETECHAR","KEYNAME_DELETELINE","KEYNAME_DOWNARROW","KEYNAME_END","KEYNAME_EXECUTE","KEYNAME_F1","KEYNAME_F10","KEYNAME_F11","KEYNAME_F12","KEYNAME_F13","KEYNAME_F14","KEYNAME_F15","KEYNAME_F16","KEYNAME_F17","KEYNAME_F18","KEYNAME_F19","KEYNAME_F2","KEYNAME_F20","KEYNAME_F21","KEYNAME_F22","KEYNAME_F23","KEYNAME_F24","KEYNAME_F25","KEYNAME_F26","KEYNAME_F27","KEYNAME_F28","KEYNAME_F29","KEYNAME_F3","KEYNAME_F30","KEYNAME_F31","KEYNAME_F32","KEYNAME_F33","KEYNAME_F34","KEYNAME_F35","KEYNAME_F4","KEYNAME_F5","KEYNAME_F6","KEYNAME_F7","KEYNAME_F8","KEYNAME_F9","KEYNAME_FIND","KEYNAME_HELP","KEYNAME_HOME","KEYNAME_INSERT","KEYNAME_INSERTCHAR","KEYNAME_INSERTLINE","KEYNAME_LEFTARROW","KEYNAME_MENU","KEYNAME_MODESWITCH","KEYNAME_NEXT","KEYNAME_PAGEDOWN","KEYNAME_PAGEUP","KEYNAME_PAUSE","KEYNAME_PREV","KEYNAME_PRINT","KEYNAME_PRINTSCREEN","KEYNAME_REDO","KEYNAME_RESET","KEYNAME_RIGHTARROW","KEYNAME_SCROLLLOCK","KEYNAME_SELECT","KEYNAME_STOP","KEYNAME_SYSREQ","KEYNAME_SYSTEM","KEYNAME_UNDO","KEYNAME_UPARROW","KEYNAME_USER","L","LAST","LEFT","LEFTBRACKET","LIVE","M","MASTER_SHELL","MENU","MINUS","N","NEXT","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","O","P","PAGE_DOWN","PAGE_UP","PAUSE","PERIOD","PLAY","PREVIOUS","Q","QUOTE","R","RECORD","REWIND","RIGHT","RIGHTBRACKET","S","SEARCH","SEMICOLON","SETUP","SHIFT","SKIP_BACKWARD","SKIP_FORWARD","SLASH","SPACE","STOP","SUBTITLE","T","TAB","U","UP","V","VOD","W","X","Y","YELLOW","Z","awayjs-core\\lib\\utils\\ByteArrayBase","ByteArrayBase","_mode","writeByte","writeUnsignedByte","readUnsignedByte","writeUnsignedShort","writeUnsignedInt","writeFloat","toFloatBits","readFloat","fromFloatBits","compareEqual","other","count","co0","c0","writeBase64String","dumpToConsole","oldpos","nstep","asHexString","digits","lut","sh","readBase64String","internalGetBase64String","getUnsignedByteFunc","self","b0","b1","b2","enc1","enc2","enc3","enc4","base64Key","Base64Key","awayjs-core\\lib\\utils\\ByteArrayBuffer","ByteArrayBuffer","_bytes","bi","Number","sign","exponent","mantissa","awayjs-core/lib/utils/ByteArrayBase","awayjs-core\\lib\\utils\\ByteArray","maxlength","unalignedarraybytestemp","ensureWriteableSpace","ensureSpace","aBuffer","inInt8AView","Int8Array","localInt8View","newmaxlength","newarraybuffer","view","newview","readBytes","byteView","localByteView","subarray","Uint16Array","view2","view3","max","DataView","getUint8","c2","c3","readInt","int","getInt32","short","getInt16","readDouble","double","getFloat64","pa","Uint32Array","Float32Array","awayjs-core\\lib\\utils\\CSS","CSS","setElementSize","element","style","setElementWidth","setElementHeight","setElementX","setElementY","getElementVisibility","visibility","setElementVisibility","visible","setElementAlpha","HTMLCanvasElement","globalAlpha","setElementPosition","absolute","awayjs-core\\lib\\utils\\ColorUtils","float32Color","componentToHex","hex","RGBToHexString","ARGBToHexString","awayjs-core\\lib\\utils\\Debug","Debug","breakpoint","throwPIROnKeyWordOnly","enable","keyword","throwPIR","clss","fnc","msg","logPIR","THROW_ERRORS","LOG_PI_ERRORS","args","_i","arguments","ENABLE_LOG","awayjs-core/lib/errors/PartialImplementationError","awayjs-core\\lib\\utils\\RequestAnimationFrame","RequestAnimationFrame","callback","callbackContext","_active","_argsArray","_getTimer","setCallback","_rafUpdateFunction","_tick","_dt","_callback","_callbackContext","_prevTime","requestAnimationFrame","_currentTime","awayjs-core\\lib\\utils\\TextureUtils","MAX_SIZE","isPowerOfTwo","getBestPowerOf2","awayjs-core\\lib\\utils\\Timer","delay","repeatCount","_repeatCount","_currentCount","_running","_delay","clearInterval","_iid","setInterval","tick","awayjs-core\\lib\\utils\\getTimer","now"],"mappings":"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","file":"awayjs-core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class BitmapDataChannel\r\n{\r\n\tpublic static ALPHA:number /*uint*/ = 8;\r\n\tpublic static BLUE:number /*uint*/ = 4;\r\n\tpublic static GREEN:number /*uint*/ = 2;\r\n\tpublic static RED:number /*uint*/ = 1;\r\n}\r\n\r\nexport = BitmapDataChannel;",null,"import BlendMode\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\n/**\r\n * The BitmapData class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapData class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapData for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapData object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapData class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapData object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapData object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapData.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapDataChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapDataChannel.ALPHA</code></li>\r\n *   <li><code>BitmapDataChannel.RED</code></li>\r\n *   <li><code>BitmapDataChannel.GREEN</code></li>\r\n *   <li><code>BitmapDataChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapData objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapData object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapData object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapData object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapData object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nclass BitmapData\r\n{\r\n\tprivate _imageCanvas:HTMLCanvasElement;\r\n\tprivate _context:CanvasRenderingContext2D;\r\n\tprivate _imageData:ImageData;\r\n\tprivate _rect:Rectangle;\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t * The height of the bitmap image in pixels.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._rect.height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._rect.height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rect.height = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis._imageCanvas.height = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * The rectangle that defines the size and location of the bitmap image. The\r\n\t * top and left of the rectangle are 0; the width and height are equal to the\r\n\t * width and height in pixels of the BitmapData object.\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapData object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapData object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the bitmap image in pixels.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._rect.width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._rect.width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rect.width = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis._imageCanvas.width = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapData object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\r\n\t{\r\n\t\tthis._transparent = transparent;\r\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\r\n\t\tthis._rect = new Rectangle(0, 0, width, height);\r\n\r\n\t\tif (fillColor != null)\r\n\t\t\tthis.fillRect(this._rect, fillColor);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapData object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapData object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapData\r\n\t{\r\n\t\tvar t:BitmapData = new BitmapData(this.width, this.height, this.transparent);\r\n\t\tt.draw(this);\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar data:Array<number> = this._imageData.data;\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapData object or the\r\n\t * current BitmapData object into a channel of the current BitmapData object.\r\n\t * All of the data in the other channels in the destination BitmapData object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapDataChannel.RED</code></li>\r\n\t *   <li><code>BitmapDataChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapDataChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapDataChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapData The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapData object or it can\r\n\t *                         refer to the current BitmapData object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapData object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapDataChannel class\r\n\t *                        (<code>BitmapDataChannel.RED</code>,\r\n\t *                         <code>BitmapDataChannel.BLUE</code>,\r\n\t *                         <code>BitmapDataChannel.GREEN</code>,\r\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapDataChannel class\r\n\t *                        (<code>BitmapDataChannel.RED</code>,\r\n\t *                         <code>BitmapDataChannel.BLUE</code>,\r\n\t *                         <code>BitmapDataChannel.GREEN</code>,\r\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapData, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(sourceBitmap:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.imageData;\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar sourceData:Array<number> = sourceBitmap.imageData.data;\r\n\t\tvar destData:Array<number> = this._imageData.data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapData object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapData The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapData\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapData instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapData  A secondary, alpha BitmapData object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapData object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapData, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\t} else {\r\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapData object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapData instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapData.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapData.dispose()</code>, the BitmapData\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapData object. However,\r\n\t * <code>BitmapData.dispose()</code> does not garbage collect the BitmapData\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapData object is released at the time the BitmapData object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._context = null;\r\n\t\tthis._imageCanvas = null;\r\n\t\tthis._imageData = null;\r\n\t\tthis._rect = null;\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapData object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapData object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapData object to draw to\r\n\t *                       the BitmapData object.(The DisplayObject and\r\n\t *                       BitmapData classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapData\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapData object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapData image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapData object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapData or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(source:BitmapData, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\t\tthis._draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tthis._draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\t\tthis._fillRect(rect, color);\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tthis._fillRect(rect, color);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapData\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapData methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapData methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapData object,\r\n\t * such as Bitmap objects, are not updated when this BitmapData object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock()\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapData pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapData\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapData object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapData instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(x:number, y:number, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapData object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapData methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapData instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(x, y, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapData\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapData object,\r\n\t * such as Bitmap objects, are updated when this BitmapData object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapData object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapData object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock()\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\tthis._imageData = null;\r\n\t}\r\n\r\n\tprivate _copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\r\n\tprivate _copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tprivate _copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\r\n\t\tif (bmpd instanceof BitmapData) {\r\n\t\t\tthis._context.drawImage(bmpd.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t\t} else if (bmpd instanceof HTMLImageElement) {\r\n\t\t\tthis._context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _draw(source:BitmapData, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean);\r\n\tprivate _draw(source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean);\r\n\tprivate _draw(source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\r\n\t{\r\n\t\tif (source instanceof BitmapData) {\r\n\t\t\tthis._context.save();\r\n\r\n\t\t\tif (matrix != null)\r\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\t\tif (clipRect != null)\r\n\t\t\t\tthis._context.drawImage(source.canvas, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\t\telse\r\n\t\t\t\tthis._context.drawImage(source.canvas, 0, 0);\r\n\r\n\t\t\tthis._context.restore();\r\n\r\n\t\t} else if (source instanceof HTMLElement) {\r\n\t\t\tthis._context.save();\r\n\r\n\t\t\tif (matrix != null)\r\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\t\tif (clipRect != null)\r\n\t\t\t\tthis._context.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\t\telse\r\n\t\t\t\tthis._context.drawImage(source, 0, 0);\r\n\r\n\t\t\tthis._context.restore();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _fillRect(rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (color == 0x0 && this._transparent) {\r\n\t\t\tthis._context.clearRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t} else {\r\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\t\tif (this._transparent)\r\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\r\n\t\t\telse\r\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\r\n\r\n\t\t\tthis._context.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic get imageData():ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\treturn this._imageData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic get canvas()\r\n\t{\r\n\t\treturn this._imageCanvas;\r\n\t}\r\n}\r\n\r\nexport = BitmapData;","/**\r\n * A class that provides constant values for visual blend mode effects. These\r\n * constants are used in the following:\r\n * <ul>\r\n *   <li> The <code>blendMode</code> property of the\r\n * flash.display.DisplayObject class.</li>\r\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\r\n * method of the flash.display.BitmapData class</li>\r\n * </ul>\r\n */\r\nclass BlendMode\r\n{\r\n\t/**\r\n\t * Adds the values of the constituent colors of the display object to the\r\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\r\n\t * commonly used for animating a lightening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\r\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\t/**\r\n\t * Applies the alpha value of each pixel of the display object to the\r\n\t * background. This requires the <code>blendMode</code> property of the\r\n\t * parent display object be set to\r\n\t * <code>away.base.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ALPHA:string = \"alpha\";\r\n\r\n\t/**\r\n\t * Selects the darker of the constituent colors of the display object and the\r\n\t * colors of the background(the colors with the smaller values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static DARKEN:string = \"darken\";\r\n\r\n\t/**\r\n\t * Compares the constituent colors of the display object with the colors of\r\n\t * its background, and subtracts the darker of the values of the two\r\n\t * constituent colors from the lighter value. This setting is commonly used\r\n\t * for more vibrant colors.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\r\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static DIFFERENCE:string = \"difference\";\r\n\r\n\t/**\r\n\t * Erases the background based on the alpha value of the display object. This\r\n\t * process requires that the <code>blendMode</code> property of the parent\r\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ERASE:string = \"erase\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the display\r\n\t * object. If the display object is lighter than 50% gray, the display object\r\n\t * and background colors are screened, which results in a lighter color. If\r\n\t * the display object is darker than 50% gray, the colors are multiplied,\r\n\t * which results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static HARDLIGHT:string = \"hardlight\";\r\n\r\n\t/**\r\n\t * Inverts the background.\r\n\t */\r\n\tpublic static INVERT:string = \"invert\";\r\n\r\n\t/**\r\n\t * Forces the creation of a transparency group for the display object. This\r\n\t * means that the display object is precomposed in a temporary buffer before\r\n\t * it is processed further. The precomposition is done automatically if the\r\n\t * display object is precached by means of bitmap caching or if the display\r\n\t * object is a display object container that has at least one child object\r\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LAYER:string = \"layer\";\r\n\r\n\t/**\r\n\t * Selects the lighter of the constituent colors of the display object and\r\n\t * the colors of the background(the colors with the larger values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LIGHTEN:string = \"lighten\";\r\n\r\n\t/**\r\n\t * Multiplies the values of the display object constituent colors by the\r\n\t * constituent colors of the background color, and normalizes by dividing by\r\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\r\n\t * shadows and depth effects.\r\n\t *\r\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\r\n\t * display object and the corresponding color of the pixel in the background\r\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\r\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\r\n\t * shade than the color of the display object or the color of the\r\n\t * background.</p>\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * The display object appears in front of the background. Pixel values of the\r\n\t * display object override the pixel values of the background. Where the\r\n\t * display object is transparent, the background is visible.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the background.\r\n\t * If the background is lighter than 50% gray, the display object and\r\n\t * background colors are screened, which results in a lighter color. If the\r\n\t * background is darker than 50% gray, the colors are multiplied, which\r\n\t * results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static OVERLAY:string = \"overlay\";\r\n\r\n\t/**\r\n\t * Multiplies the complement(inverse) of the display object color by the\r\n\t * complement of the background color, resulting in a bleaching effect. This\r\n\t * setting is commonly used for highlights or to remove black areas of the\r\n\t * display object.\r\n\t */\r\n\tpublic static SCREEN:string = \"screen\";\r\n\r\n\t/**\r\n\t * Uses a shader to define the blend between objects.\r\n\t *\r\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\r\n\t * automatically sets the display object's <code>blendMode</code> property to\r\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.SHADER</code> without first setting the\r\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\r\n\t * <code>blendShader</code> property is set(which sets the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\r\n\t * later the value of the <code>blendMode</code> property is changed, the\r\n\t * blend mode can be reset to use the blend shader simply by setting the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\r\n\t * <code>blendShader</code> property does not need to be set again except to\r\n\t * change the shader that's used to define the blend mode.</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static SHADER:string = \"shader\";\r\n\r\n\t/**\r\n\t * Subtracts the values of the constituent colors in the display object from\r\n\t * the values of the background color, applying a floor of 0. This setting is\r\n\t * commonly used for animating a darkening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\r\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\r\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\r\n\t */\r\n\tpublic static SUBTRACT:string = \"subtract\";\r\n}\r\n\r\nexport = BlendMode;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass AbstractMethodError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\r\n\t}\r\n}\r\n\r\nexport = AbstractMethodError;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass ArgumentError extends Error\r\n{\r\n\t/**\r\n\t * Create a new ArgumentError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"ArgumentError\", id);\r\n\t}\r\n}\r\n\r\nexport = ArgumentError;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass DocumentError extends Error\r\n{\r\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\r\n\r\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n\r\nexport = DocumentError;","class Error\r\n{\r\n\r\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\r\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\r\n\tprivate _name:string = '';  // Contains the name of the Error object.\r\n\r\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\r\n\t{\r\n\r\n\t\tthis._messsage = message;\r\n\t\tthis._name = name;\r\n\t\tthis._errorID = id;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\r\n\t\treturn this._messsage;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set message(value:string)\r\n\t{\r\n\r\n\t\tthis._messsage = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get name():string\r\n\t{\r\n\r\n\t\treturn this._name;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set name(value:string)\r\n\t{\r\n\r\n\t\tthis._name = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get errorID():number\r\n\t{\r\n\r\n\t\treturn this._errorID;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = Error;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass PartialImplementationError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(dependency:string = '', id:number = 0)\r\n\t{\r\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\r\n\t}\r\n}\r\n\r\nexport = PartialImplementationError;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * RangeError is thrown when an index is accessed out of range of the number of\r\n * available indices on an Array.\r\n */\r\nclass RangeError extends Error\r\n{\r\n\t/**\r\n\t * Create a new RangeError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"RangeError\", id);\r\n\t}\r\n}\r\n\r\nexport = RangeError;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.AssetEvent\r\n */\r\nclass AssetEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_RENAME:string = 'assetRename';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\r\n\r\n\tprivate _asset:IAsset;\r\n\tprivate _prevName:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._asset = asset;\r\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get asset():IAsset\r\n\t{\r\n\t\treturn this._asset;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetPrevName():string\r\n\t{\r\n\t\treturn this._prevName;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\r\n\t}\r\n}\r\n\r\nexport = AssetEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Base class for dispatching events\r\n*\r\n* @class away.events.EventDispatcher\r\n*\r\n*/\r\nclass EventDispatcher\r\n{\r\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\r\n\tprivate target:any;\r\n\r\n\tconstructor(target:any = null)\r\n\t{\r\n\t\tthis.target = target || this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener\r\n\t * @method addEventListener\r\n\t * @param {String} Name of event to add a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tif (this.listeners[ type ] === undefined)\r\n\t\t\tthis.listeners[ type ] = new Array<Function>();\r\n\r\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\r\n\t\t\tthis.listeners[ type ].push(listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener\r\n\t * @method removeEventListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\r\n\r\n\t\tif (index !== -1)\r\n\t\t\tthis.listeners[ type ].splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatch an event\r\n\t * @method dispatchEvent\r\n\t * @param {Event} Event to dispatch\r\n\t */\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\r\n\r\n\t\tif (listenerArray !== undefined) {\r\n\t\t\tvar l:number = listenerArray.length;\r\n\r\n\t\t\tevent.target = this.target;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tlistenerArray[i](event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get Event Listener Index in array. Returns -1 if no listener is added\r\n\t * @method getEventListenerIndex\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tprivate getEventListenerIndex(type:string, listener:Function):number\r\n\t{\r\n\t\tif (this.listeners[ type ] !== undefined) {\r\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\r\n\t\t\tvar l:number = a.length;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tif (listener == a[i])\r\n\t\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * check if an object has an event listener assigned to it\r\n\t * @method hasListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic hasEventListener(type:string, listener?:Function):boolean\r\n\t{\r\n\t\tif (listener != null) {\r\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\r\n\t\t} else {\r\n\t\t\tif (this.listeners[ type ] !== undefined)\r\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = EventDispatcher;","class Event\r\n{\r\n\r\n\tpublic static COMPLETE:string = 'complete';\r\n\tpublic static OPEN:string = 'open';\r\n\r\n\tpublic static ENTER_FRAME:string = 'enterFrame';\r\n\tpublic static EXIT_FRAME:string = 'exitFrame';\r\n\r\n\r\n\tpublic static RESIZE:string = \"resize\";\r\n\tpublic static ERROR:string = \"error\";\r\n\tpublic static CHANGE:string = \"change\";\r\n\r\n\t/**\r\n\t * Type of event\r\n\t * @property type\r\n\t * @type String\r\n\t */\r\n\tpublic type:string = undefined;\r\n\r\n\t/**\r\n\t * Reference to target object\r\n\t * @property target\r\n\t * @type Object\r\n\t */\r\n\tpublic target:any = undefined;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new Event(this.type);\r\n\t}\r\n}\r\n\r\nexport = Event;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.HTTPStatusEvent\r\n */\r\nclass HTTPStatusEvent extends Event\r\n{\r\n\r\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\r\n\r\n\tpublic status:number;\r\n\r\n\tconstructor(type:string, status:number = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.status = status;\r\n\r\n\t}\r\n}\r\n\r\nexport = HTTPStatusEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass IOErrorEvent extends Event\r\n{\r\n\r\n\tpublic static IO_ERROR:string = \"ioError\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = IOErrorEvent;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LoaderEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a resource and all of its dependencies is retrieved.\r\n\t */\r\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\r\n\r\n\tprivate _url:string;\r\n\tprivate _content:IAsset;\r\n\tprivate _assets:IAsset[];\r\n\r\n\t/**\r\n\t * Create a new LoaderEvent object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param url The url of the loaded resource.\r\n\t * @param assets The assets of the loaded resource.\r\n\t */\r\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._url = url;\r\n\t\tthis._content = content;\r\n\t\tthis._assets = assets;\r\n\t}\r\n\r\n\t/**\r\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\r\n\t */\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The url of the loaded resource.\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t * The error string on loadError.\r\n\t */\r\n\tpublic get assets():IAsset[]\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\r\n\t}\r\n}\r\n\r\nexport = LoaderEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ParserEvent extends Event\r\n{\r\n\tprivate _message:string;\r\n\r\n\t/**\r\n\t * Dispatched when parsing of an asset completed.\r\n\t */\r\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\r\n\r\n\t/**\r\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\r\n\t * incorrectly formatted.)\r\n\t */\r\n\tpublic static PARSE_ERROR:string = 'parseError';\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\r\n\t * This is an internal event that should rarely (if ever) be listened for by\r\n\t * external classes.\r\n\t */\r\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\r\n\r\n\r\n\tconstructor(type:string, message:string = '')\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._message = message;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\t\treturn this._message;\r\n\t}\r\n\r\n\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new ParserEvent(this.type, this.message);\r\n\t}\r\n}\r\n\r\nexport = ParserEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ProgressEvent extends Event\r\n{\r\n\tpublic static PROGRESS:string = \"progress\";\r\n\r\n\tpublic bytesLoaded:number;\r\n\r\n\tpublic bytesTotal:number;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = ProgressEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionEvent extends Event\r\n{\r\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\r\n\r\n\tprivate _projection:IProjection;\r\n\r\n\tconstructor(type:string, projection:IProjection)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._projection = projection;\r\n\t}\r\n\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n}\r\n\r\nexport = ProjectionEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass TimerEvent extends Event\r\n{\r\n\r\n\tpublic static TIMER:string = \"timer\";\r\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = TimerEvent","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Box object is an area defined by its position, as indicated by its\r\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\r\n * height and depth.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n * <code>height</code> <code>depth</code> properties of the Box class are\r\n * independent of each other; changing the value of one property has no effect\r\n * on the others. However, the <code>right</code>, <code>bottom</code> and\r\n * <code>back</code> properties are integrally related to those six\r\n * properties. For example, if you change the value of the <code>right</code>\r\n * property, the value of the <code>width</code> property changes; if you\r\n * change the <code>bottom</code> property, the value of the\r\n * <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Box objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Box()</code> constructor to create a\r\n * Box object.</p>\r\n *\r\n * <p><b>Note:</b> The Box class does not define a cubic Shape\r\n * display object.\r\n */\r\nclass Box\r\n{\r\n\tprivate _size:Vector3D;\r\n\tprivate _bottomRightBack:Vector3D;\r\n\tprivate _topLeftFront:Vector3D;\r\n\r\n\t/**\r\n\t * The height of the box, in pixels. Changing the <code>height</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the box, in pixels. Changing the <code>width</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic depth:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>x</code> property of a Box object has no\r\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>y</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>z</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>z</code> property is equal to the value of the\r\n\t * <code>front</code> property.</p>\r\n\t */\r\n\tpublic z:number\r\n\r\n\t/**\r\n\t * The sum of the <code>z</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get back():number\r\n\t{\r\n\t\treturn this.z + this.depth;\r\n\t}\r\n\r\n\tpublic set back(val:number)\r\n\t{\r\n\t\tthis.depth = val - this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\tpublic set bottom(val:number)\r\n\t{\r\n\t\tthis.height = val - this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's bottom-right corner, determined by the\r\n\t * values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRightBack():Vector3D\r\n\t{\r\n\t\tif (this._bottomRightBack == null)\r\n\t\t\tthis._bottomRightBack = new Vector3D();\r\n\r\n\t\tthis._bottomRightBack.x = this.x + this.width;\r\n\t\tthis._bottomRightBack.y = this.y + this.height;\r\n\t\tthis._bottomRightBack.z = this.z + this.depth;\r\n\r\n\t\treturn this._bottomRightBack;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>front</code> property of a Box object has no effect on the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\r\n\t * properties. However it does affect the <code>depth</code> property,\r\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\r\n\t * <code>depth</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get front():number\r\n\t{\r\n\t\treturn this.z;\r\n\t}\r\n\r\n\tpublic set front(val:number)\r\n\t{\r\n\t\tthis.depth += this.z - val;\r\n\t\tthis.z = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\r\n\t * <code>left</code> property of a Box object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tpublic set left(val:number)\r\n\t{\r\n\t\tthis.width += this.x - val;\r\n\t\tthis.x = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\tpublic set right(val:number)\r\n\t{\r\n\t\tthis.width = val - this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Box object, expressed as a Vector3D object with the\r\n\t * values of the <code>width</code>, <code>height</code> and\r\n\t * <code>depth</code> properties.\r\n\t */\r\n\tpublic get size():Vector3D\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Vector3D();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\t\tthis._size.z = this.depth;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>top</code> property of a Box object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tpublic set top(val:number)\r\n\t{\r\n\t\tthis.height += (this.y - val);\r\n\t\tthis.y = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's top-left-front corner, determined by the\r\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeftFront():Vector3D\r\n\t{\r\n\t\tif (this._topLeftFront == null)\r\n\t\t\tthis._topLeftFront = new Vector3D();\r\n\r\n\t\tthis._topLeftFront.x = this.x;\r\n\t\tthis._topLeftFront.y = this.y;\r\n\t\tthis._topLeftFront.z = this.z;\r\n\r\n\t\treturn this._topLeftFront;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Box object with the top-left-front corner specified by the\r\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\r\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t * parameters. If you call this public without parameters, a box with\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param width  The width of the box, in pixels.\r\n\t * @param height The height of the box, in pixels.\r\n\t * @param depth The depth of the box, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Box object with the same values for the <code>x</code>,\r\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\r\n\t * and <code>depth</code> properties as the original Box object.\r\n\t *\r\n\t * @return A new Box object with the same values for the <code>x</code>,\r\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t *         <code>height</code> and <code>depth</code> properties as the\r\n\t *         original Box object.\r\n\t */\r\n\tpublic clone():Box\r\n\t{\r\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\r\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\r\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object. This method is similar to the\r\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\r\n\t *                 <i>z</i> coordinates.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Box object specified by the <code>box</code>\r\n\t * parameter is contained within this Box object. A Box object is said to\r\n\t * contain another if the second Box object falls entirely within the\r\n\t * boundaries of the first.\r\n\t *\r\n\t * @param box The Box object being checked.\r\n\t * @return A value of <code>true</code> if the Box object that you specify\r\n\t *         is contained by this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsBox(box:Box):boolean\r\n\t{\r\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of box data from the source Box object into the calling\r\n\t * Box object.\r\n\t *\r\n\t * @param sourceBox The Box object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceBox:Box)\r\n\t{\r\n\t\tthis.x = sourceBox.x;\r\n\t\tthis.y = sourceBox.y;\r\n\t\tthis.z = sourceBox.z;\r\n\t\tthis.width = sourceBox.width;\r\n\t\tthis.height = sourceBox.height;\r\n\t\tthis.depth = sourceBox.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Box object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties of an object against\r\n\t * the same properties of this Box object.\r\n\t *\r\n\t * @param toCompare The box to compare to this Box object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t *         properties as this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Box):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object by the specified amounts, in\r\n\t * pixels. The center point of the Box object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, to\r\n\t * the top and the bottom by the <code>dy</code> value, and to\r\n\t * the front and the back by the <code>dz</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the box:\r\n\t * @param dy The value to be added to the top and the bottom of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           height and position of the box:\r\n\t * @param dz The value to be added to the front and the back of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           depth and position of the box:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.z -= dz/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t\tthis.depth += dz/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object. This method is similar to the\r\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\r\n\t *              increase the horizontal dimension of the Box object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Box object.\r\n\t *              The <code>z</code> property is used to increase the\r\n\t *              longitudinal dimension of the Box object.\r\n\t */\r\n\tpublic inflatePoint(delta:Vector3D)\r\n\t{\r\n\t\tthis.x -= delta.x/2;\r\n\t\tthis.y -= delta.y/2;\r\n\t\tthis.z -= delta.z/2;\r\n\t\tthis.width += delta.x/2;\r\n\t\tthis.height += delta.y/2;\r\n\t\tthis.depth += delta.z/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Box object specified in the <code>toIntersect</code> parameter\r\n\t * intersects with this Box object, returns the area of intersection\r\n\t * as a Box object. If the boxes do not intersect, this method returns an\r\n\t * empty Box object with its properties set to 0.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against to see if it\r\n\t *                    intersects with this Box object.\r\n\t * @return A Box object that equals the area of intersection. If the\r\n\t *         boxes do not intersect, this method returns an empty Box\r\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\r\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\r\n\t *         <code>depth</code> properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Box):Box\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Box = new Box();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.z > toIntersect.z) {\r\n\t\t\t\ti.z = this.z;\r\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\r\n\r\n\t\t\t\tif (i.depth > this.depth)\r\n\t\t\t\t\ti.depth = this.depth;\r\n\t\t\t} else {\r\n\t\t\t\ti.z = toIntersect.z;\r\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\r\n\r\n\t\t\t\tif (i.depth > toIntersect.depth)\r\n\t\t\t\t\ti.depth = toIntersect.depth;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Box();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Box object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code>, and <code>depth</code> properties of the specified\r\n\t * Box object to see if it intersects with this Box object.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against this Box object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Box):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar halfExtentsX:number = this.width/2;\r\n\t\tvar halfExtentsY:number = this.height/2;\r\n\t\tvar halfExtentsZ:number = this.depth/2;\r\n\r\n\t\tvar centerX:number = this.x + halfExtentsX;\r\n\t\tvar centerY:number = this.y + halfExtentsY;\r\n\t\tvar centerZ:number = this.z + halfExtentsZ;\r\n\r\n\t\tvar px:number = position.x - centerX;\r\n\t\tvar py:number = position.y - centerY;\r\n\t\tvar pz:number = position.z - centerZ;\r\n\r\n\t\tvar vx:number = direction.x\r\n\t\tvar vy:number = direction.y\r\n\t\tvar vz:number = direction.z;\r\n\r\n\t\tvar ix:number;\r\n\t\tvar iy:number;\r\n\t\tvar iz:number;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\t// ray-plane tests\r\n\t\tvar intersects:boolean;\r\n\t\tif (vx < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vx > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = -1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = -1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = -1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn intersects? rayEntryDistance : -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\r\n\t *\r\n\t * @param point The point for which to find the closest point on the Box\r\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\r\n\t * @return\r\n\t */\r\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar p:number;\r\n\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\tp = point.x;\r\n\t\tif (p < this.x)\r\n\t\t\tp = this.x;\r\n\t\tif (p > this.x + this.width)\r\n\t\t\tp = this.x + this.width;\r\n\t\ttarget.x = p;\r\n\r\n\t\tp = point.y;\r\n\t\tif (p < this.y + this.height)\r\n\t\t\tp = this.y + this.height;\r\n\t\tif (p > this.y)\r\n\t\t\tp = this.y;\r\n\t\ttarget.y = p;\r\n\r\n\t\tp = point.z;\r\n\t\tif (p < this.z)\r\n\t\t\tp = this.z;\r\n\t\tif (p > this.z + this.depth)\r\n\t\t\tp = this.z + this.depth;\r\n\t\ttarget.z = p;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Box object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Box object's width, height or\r\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object, as determined by its\r\n\t * top-left-front corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\r\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t\tthis.z += dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object using a Vector3D object as a\r\n\t * parameter. This method is similar to the <code>Box.offset()</code>\r\n\t * method, except that it takes a Vector3D object as a parameter.\r\n\t *\r\n\t * @param position A Vector3D object to use to offset this Box object.\r\n\t */\r\n\tpublic offsetPosition(position:Vector3D)\r\n\t{\r\n\t\tthis.x += position.x;\r\n\t\tthis.y += position.y;\r\n\t\tthis.z += position.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\r\n\t * width, height or depth is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\r\n\t * <code>depth</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.depth = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Box to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param widtha  The width of the box, in pixels.\r\n\t * @param heighta The height of the box, in pixels.\r\n\t * @param deptha  The depth of the box, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t\tthis.depth = deptha;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal, vertical and\r\n\t * longitudinal positions and the width, height and depth of the Box object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two boxes together to create a new Box object, by filling\r\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\r\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\r\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Box object to add to this Box object.\r\n\t * @return A new Box object that is the union of the two boxes.\r\n\t */\r\n\tpublic union(toUnion:Box):Box\r\n\t{\r\n\t\tvar u:Box = new Box();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\tif (this.z < toUnion.z) {\r\n\t\t\tu.z = this.z;\r\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\r\n\r\n\t\t\tif (u.depth < this.depth)\r\n\t\t\t\tu.depth = this.depth;\r\n\t\t} else {\r\n\t\t\tu.z = toUnion.z;\r\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\r\n\r\n\t\t\tif (u.depth < toUnion.depth)\r\n\t\t\t\tu.depth = toUnion.depth;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Box;","import ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\n/**\r\n * The ColorTransform class lets you adjust the color values in a display\r\n * object. The color adjustment or <i>color transformation</i> can be applied\r\n * to all four channels: red, green, blue, and alpha transparency.\r\n *\r\n * <p>When a ColorTransform object is applied to a display object, a new value\r\n * for each color channel is calculated like this:</p>\r\n *\r\n * <ul>\r\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\r\n * <code>redOffset</code></li>\r\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\r\n * <code>greenOffset</code></li>\r\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\r\n * <code>blueOffset</code></li>\r\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\r\n * <code>alphaOffset</code></li>\r\n * </ul>\r\n *\r\n * <p>If any of the color channel values is greater than 255 after the\r\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\r\n *\r\n * <p>You can use ColorTransform objects in the following ways:</p>\r\n *\r\n * <ul>\r\n *   <li>In the <code>colorTransform</code> parameter of the\r\n * <code>colorTransform()</code> method of the BitmapData class</li>\r\n *   <li>As the <code>colorTransform</code> property of a Transform object\r\n * (which can be used as the <code>transform</code> property of a display\r\n * object)</li>\r\n * </ul>\r\n *\r\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\r\n * a ColorTransform object before you can call the methods of the\r\n * ColorTransform object.</p>\r\n *\r\n * <p>Color transformations do not apply to the background color of a movie\r\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\r\n * that are attached to the movie clip.</p>\r\n */\r\nclass ColorTransform\r\n{\r\n\t/**\r\n\t * A decimal value that is multiplied with the alpha transparency channel\r\n\t * value.\r\n\t *\r\n\t * <p>If you set the alpha transparency value of a display object directly by\r\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\r\n\t * affects the value of the <code>alphaMultiplier</code> property of that\r\n\t * display object's <code>transform.colorTransform</code> property.</p>\r\n\t */\r\n\tpublic alphaMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the alpha transparency channel\r\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\r\n\t * value.\r\n\t */\r\n\tpublic alphaOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the blue channel value.\r\n\t */\r\n\tpublic blueMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the blue channel value after it\r\n\t * has been multiplied by the <code>blueMultiplier</code> value.\r\n\t */\r\n\tpublic blueOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the green channel value.\r\n\t */\r\n\tpublic greenMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the green channel value after\r\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\r\n\t */\r\n\tpublic greenOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the red channel value.\r\n\t */\r\n\tpublic redMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the red channel value after it\r\n\t * has been multiplied by the <code>redMultiplier</code> value.\r\n\t */\r\n\tpublic redOffset:number;\r\n\r\n\t/**\r\n\t * The RGB color value for a ColorTransform object.\r\n\t *\r\n\t * <p>When you set this property, it changes the three color offset values\r\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\r\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\r\n\t * multiplier values(<code>redMultiplier</code>,\r\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\r\n\t * alpha transparency multiplier and offset values do not change.</p>\r\n\t *\r\n\t * <p>When you pass a value for this property, use the format\r\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\r\n\t * hexadecimal digits that specify the offset of each color component. The 0x\r\n\t * tells the ActionScript compiler that the number is a hexadecimal\r\n\t * value.</p>\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\r\n\r\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\r\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\r\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\r\n\r\n\t\tthis.redMultiplier = 0;\r\n\t\tthis.greenMultiplier = 0;\r\n\t\tthis.blueMultiplier = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a ColorTransform object for a display object with the specified\r\n\t * color channel values and alpha values.\r\n\t *\r\n\t * @param redMultiplier   The value for the red multiplier, in the range from\r\n\t *                        0 to 1.\r\n\t * @param greenMultiplier The value for the green multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\r\n\t *                        the range from 0 to 1.\r\n\t * @param redOffset       The offset value for the red color channel, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param greenOffset     The offset value for the green color channel, in\r\n\t *                        the range from -255 to 255.\r\n\t * @param blueOffset      The offset for the blue color channel value, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\r\n\t *                        the range from -255 to 255.\r\n\t */\r\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\r\n\t{\r\n\t\tthis.redMultiplier = redMultiplier;\r\n\t\tthis.greenMultiplier = greenMultiplier;\r\n\t\tthis.blueMultiplier = blueMultiplier;\r\n\t\tthis.alphaMultiplier = alphaMultiplier;\r\n\t\tthis.redOffset = redOffset;\r\n\t\tthis.greenOffset = greenOffset;\r\n\t\tthis.blueOffset = blueOffset;\r\n\t\tthis.alphaOffset = alphaOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates the ColorTranform object specified by the <code>second</code>\r\n\t * parameter with the current ColorTransform object and sets the current\r\n\t * object as the result, which is an additive combination of the two color\r\n\t * transformations. When you apply the concatenated ColorTransform object,\r\n\t * the effect is the same as applying the <code>second</code> color\r\n\t * transformation after the <i>original</i> color transformation.\r\n\t *\r\n\t * @param second The ColorTransform object to be combined with the current\r\n\t *               ColorTransform object.\r\n\t */\r\n\tpublic concat(second:ColorTransform):void\r\n\t{\r\n\t\tthis.redMultiplier += second.redMultiplier;\r\n\t\tthis.greenMultiplier += second.greenMultiplier;\r\n\t\tthis.blueMultiplier += second.blueMultiplier;\r\n\t\tthis.alphaMultiplier += second.alphaMultiplier;\r\n\t}\r\n}\r\n\r\nexport = ColorTransform;","/**\r\n* MathConsts provides some commonly used mathematical constants\r\n*/\r\nclass MathConsts\r\n{\r\n\t/**\r\n\t * The amount to multiply with when converting radians to degrees.\r\n\t */\r\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\r\n\r\n\t/**\r\n\t * The amount to multiply with when converting degrees to radians.\r\n\t */\r\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\r\n}\r\n\r\nexport = MathConsts;","import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\n/**\r\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\r\n */\r\nclass Matrix3DUtils\r\n{\r\n\t/**\r\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\r\n\t */\r\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\r\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\r\n\t *\r\n\t * @param    quarternion    The quarterion object to convert.\r\n\t */\r\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar x:number = quarternion.x;\r\n\t\tvar y:number = quarternion.y;\r\n\t\tvar z:number = quarternion.z;\r\n\t\tvar w:number = quarternion.w;\r\n\r\n\t\tvar xx:number = x*x;\r\n\t\tvar xy:number = x*y;\r\n\t\tvar xz:number = x*z;\r\n\t\tvar xw:number = x*w;\r\n\r\n\t\tvar yy:number = y*y;\r\n\t\tvar yz:number = y*z;\r\n\t\tvar yw:number = y*w;\r\n\r\n\t\tvar zz:number = z*z;\r\n\t\tvar zw:number = z*w;\r\n\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\traw[0] = 1 - 2*(yy + zz);\r\n\t\traw[1] = 2*(xy + zw);\r\n\t\traw[2] = 2*(xz - yw);\r\n\t\traw[4] = 2*(xy - zw);\r\n\t\traw[5] = 1 - 2*(xx + zz);\r\n\t\traw[6] = 2*(yz + xw);\r\n\t\traw[8] = 2*(xz + yw);\r\n\t\traw[9] = 2*(yz - xw);\r\n\t\traw[10] = 1 - 2*(xx + yy);\r\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (m) {\r\n\t\t\tm.copyRawDataFrom(raw);\r\n\t\t\treturn m;\r\n\t\t} else\r\n\t\t\treturn new Matrix3D(raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the forward vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The forward vector\r\n\t */\r\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(2, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the up vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The up vector\r\n\t */\r\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(1, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the right vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The right vector\r\n\t */\r\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(0, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\r\n\t */\r\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\r\n\t{\r\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar r2:number[] = m2.rawData;\r\n\t\tm1.copyRawDataTo(r1);\r\n\r\n\t\tfor (var i:number = 0; i < 16; ++i) {\r\n\t\t\tif (r1[i] != r2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\r\n\t{\r\n\t\tvar dirN:Vector3D;\r\n\t\tvar upN:Vector3D;\r\n\t\tvar lftN:Vector3D;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tlftN = dir.crossProduct(up);\r\n\t\tlftN.normalize();\r\n\r\n\t\tupN = lftN.crossProduct(dir);\r\n\t\tupN.normalize();\r\n\t\tdirN = dir.clone();\r\n\t\tdirN.normalize();\r\n\r\n\t\traw[0] = lftN.x;\r\n\t\traw[1] = upN.x;\r\n\t\traw[2] = -dirN.x;\r\n\t\traw[3] = 0.0;\r\n\r\n\t\traw[4] = lftN.y;\r\n\t\traw[5] = upN.y;\r\n\t\traw[6] = -dirN.y;\r\n\t\traw[7] = 0.0;\r\n\r\n\t\traw[8] = lftN.z;\r\n\t\traw[9] = upN.z;\r\n\t\traw[10] = -dirN.z;\r\n\t\traw[11] = 0.0;\r\n\r\n\t\traw[12] = -lftN.dotProduct(pos);\r\n\t\traw[13] = -upN.dotProduct(pos);\r\n\t\traw[14] = dirN.dotProduct(pos);\r\n\t\traw[15] = 1.0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n\r\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target === null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\r\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar ab2:number = -2*a*b;\r\n\t\tvar ac2:number = -2*a*c;\r\n\t\tvar bc2:number = -2*b*c;\r\n\t\t// reflection matrix\r\n\t\trawData[0] = 1 - 2*a*a;\r\n\t\trawData[4] = ab2;\r\n\t\trawData[8] = ac2;\r\n\t\trawData[12] = -2*a*d;\r\n\t\trawData[1] = ab2;\r\n\t\trawData[5] = 1 - 2*b*b;\r\n\t\trawData[9] = bc2;\r\n\t\trawData[13] = -2*b*d;\r\n\t\trawData[2] = ac2;\r\n\t\trawData[6] = bc2;\r\n\t\trawData[10] = 1 - 2*c*c;\r\n\t\trawData[14] = -2*c*d;\r\n\t\trawData[3] = 0;\r\n\t\trawData[7] = 0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar d:number = raw[12];\r\n\t\tvar h:number = raw[13];\r\n\t\tvar l:number = raw[14];\r\n\t\tvar p:number = raw[15];\r\n\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z + d;\r\n\t\tresult.y = e * x + f * y + g * z + h;\r\n\t\tresult.z = i * x + j * y + k * z + l;\r\n\t\tresult.w = m * x + n * y + o * z + p;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z;\r\n\t\tresult.y = e * x + f * y + g * z;\r\n\t\tresult.z = i * x + j * y + k * z;\r\n\t\tresult.w = m * x + n * y + o * z;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif(!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\ttransform.copyColumnTo(3, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar outIndex:number = 0;\r\n\t\tvar length:number = vin.length;\r\n\t\tfor(var index:number = 0; index<length; index+=3) {\r\n\t\t\tvar x:number = vin[index];\r\n\t\t\tvar y:number = vin[index+1];\r\n\t\t\tvar z:number = vin[index+2];\r\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\r\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\r\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Matrix3DUtils;","import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\nclass Matrix3D\r\n{\r\n\t/**\r\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\r\n\t *\r\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\r\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\r\n\t */\r\n\tpublic rawData:number[];\r\n\r\n\t/**\r\n\t * Creates a Matrix3D object.\r\n\t */\r\n\tconstructor(v:number[] = null)\r\n\t{\r\n\t\tif (v != null && v.length == 16)\r\n\t\t\tthis.rawData = v.concat();\r\n\t\telse\r\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\r\n\t */\r\n\tpublic append(lhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\tthis.append(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic appendTranslation(x:number, y:number, z:number)\r\n\t{\r\n\t\tthis.rawData[12] += x;\r\n\t\tthis.rawData[13] += y;\r\n\t\tthis.rawData[14] += z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\r\n\t */\r\n\tpublic clone():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.rawData.slice(0));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\r\n\t{\r\n\t\tvar len:number = sourceMatrix3D.rawData.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\r\n\t}\r\n\r\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = vector.length - index;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = this.rawData.length\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tvector[c + index ] = this.rawData[c];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies this Matrix3D object into a destination Matrix3D object.\r\n\t */\r\n\tpublic copyToMatrix3D(dest:Matrix3D)\r\n\t{\r\n\t\tdest.rawData = this.rawData.slice(0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\r\n\t */\r\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\r\n\t{\r\n\t\tvar q:Quaternion;\r\n\r\n\t\t// Initial Tests - Not OK\r\n\r\n\t\tvar vec:Vector3D[] = [];\r\n\t\tvar m = this.clone();\r\n\t\tvar mr = m.rawData;\r\n\r\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\r\n\t\tmr[12] = 0;\r\n\t\tmr[13] = 0;\r\n\t\tmr[14] = 0;\r\n\r\n\t\tvar scale:Vector3D = new Vector3D();\r\n\r\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\r\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\r\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\r\n\r\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\r\n\t\t\tscale.z = -scale.z;\r\n\r\n\t\tmr[0] /= scale.x;\r\n\t\tmr[1] /= scale.x;\r\n\t\tmr[2] /= scale.x;\r\n\t\tmr[4] /= scale.y;\r\n\t\tmr[5] /= scale.y;\r\n\t\tmr[6] /= scale.y;\r\n\t\tmr[8] /= scale.z;\r\n\t\tmr[9] /= scale.z;\r\n\t\tmr[10] /= scale.z;\r\n\r\n\t\tvar rot = new Vector3D();\r\n\r\n\t\tswitch (orientationStyle) {\r\n\t\t\tcase Orientation3D.AXIS_ANGLE:\r\n\r\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\r\n\r\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\r\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\r\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\r\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.QUATERNION:\r\n\r\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\r\n\r\n\t\t\t\tif (tr > 0) {\r\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\r\n\r\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\r\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\r\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\r\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\r\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\r\n\r\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\r\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\r\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\r\n\t\t\t\t} else if (mr[5] > mr[10]) {\r\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\r\n\r\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\r\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\r\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\r\n\r\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\r\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\r\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\r\n\t\t\t\trot.y = Math.asin(-mr[2]);\r\n\r\n\t\t\t\t//var cos:number = Math.cos(rot.y);\r\n\r\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\r\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\r\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = 0;\r\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvec.push(pos);\r\n\t\tvec.push(rot);\r\n\t\tvec.push(scale);\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\r\n\t * coordinate to another.\r\n\t */\r\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current matrix to an identity or unit matrix.\r\n\t */\r\n\tpublic identity()\r\n\t{\r\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\r\n\t */\r\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\r\n\t */\r\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the current matrix.\r\n\t */\r\n\tpublic invert():boolean\r\n\t{\r\n\t\tvar d = this.determinant;\r\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\r\n\r\n\t\tif (invertable) {\r\n\t\t\td = 1/d;\r\n\t\t\tvar m11:number = this.rawData[0];\r\n\t\t\tvar m21:number = this.rawData[4];\r\n\t\t\tvar m31:number = this.rawData[8];\r\n\t\t\tvar m41:number = this.rawData[12];\r\n\t\t\tvar m12:number = this.rawData[1];\r\n\t\t\tvar m22:number = this.rawData[5];\r\n\t\t\tvar m32:number = this.rawData[9];\r\n\t\t\tvar m42:number = this.rawData[13];\r\n\t\t\tvar m13:number = this.rawData[2];\r\n\t\t\tvar m23:number = this.rawData[6];\r\n\t\t\tvar m33:number = this.rawData[10];\r\n\t\t\tvar m43:number = this.rawData[14];\r\n\t\t\tvar m14:number = this.rawData[3];\r\n\t\t\tvar m24:number = this.rawData[7];\r\n\t\t\tvar m34:number = this.rawData[11];\r\n\t\t\tvar m44:number = this.rawData[15];\r\n\r\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\r\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\r\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\r\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\r\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\r\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\r\n\t\t}\r\n\t\treturn invertable;\r\n\t}\r\n\r\n\t/* TODO implement pointAt\r\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\r\n\t {\r\n\t }\r\n\t */\r\n\r\n\t/**\r\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\r\n\t */\r\n\tpublic prepend(rhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\t/*\r\n\t\t if ( pivot != null )\r\n\t\t {\r\n\t\t var p:Vector3D = pivot;\r\n\t\t m.appendTranslation( p.x, p.y, p.z );\r\n\t\t }\r\n\t\t */\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic prependTranslation(x:number, y:number, z:number)\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar m = new Matrix3D();\r\n\t\tm.position = new Vector3D(x, y, z);\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t// TODO orientationStyle\r\n\t/**\r\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\r\n\t */\r\n\tpublic recompose(components:Vector3D[]):boolean\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tif (components.length < 3) return false\r\n\r\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\r\n\r\n\t\tthis.identity();\r\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\r\n\r\n\t\tvar angle:number;\r\n\t\tangle = -components[1].x;\r\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\r\n\t\tangle = -components[1].y;\r\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\r\n\t\tangle = -components[1].z;\r\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\r\n\r\n\t\tthis.position = components[0];\r\n\t\tthis.rawData[15] = 1;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic transformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tif (v == null)\r\n\t\t\treturn new Vector3D();\r\n\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\r\n\t */\r\n\tpublic transformVectors(vin:number[], vout:number[])\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\r\n\r\n\t\twhile (i + 3 <= vin.length) {\r\n\t\t\tx = vin[i];\r\n\t\t\ty = vin[i + 1];\r\n\t\t\tz = vin[i + 2];\r\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\t\ti += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\r\n\t */\r\n\tpublic transpose()\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar oRawData:number[] = this.rawData.slice(0);\r\n\r\n\t\tthis.rawData[1] = oRawData[4];\r\n\t\tthis.rawData[2] = oRawData[8];\r\n\t\tthis.rawData[3] = oRawData[12];\r\n\t\tthis.rawData[4] = oRawData[1];\r\n\t\tthis.rawData[6] = oRawData[9];\r\n\t\tthis.rawData[7] = oRawData[13];\r\n\t\tthis.rawData[8] = oRawData[2];\r\n\t\tthis.rawData[9] = oRawData[6];\r\n\t\tthis.rawData[11] = oRawData[14];\r\n\t\tthis.rawData[12] = oRawData[3];\r\n\t\tthis.rawData[13] = oRawData[7];\r\n\t\tthis.rawData[14] = oRawData[11];\r\n\t}\r\n\r\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\r\n\t{\r\n\r\n\t\t// internal class use by rotations which have been tested\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tvar rad = degrees*( Math.PI/180 );\r\n\t\tvar c:number = Math.cos(rad);\r\n\t\tvar s:number = Math.sin(rad);\r\n\t\tvar t:number = 1 - c;\r\n\t\tvar tmp1:number, tmp2:number;\r\n\r\n\t\tm.rawData[0] = c + x*x*t;\r\n\t\tm.rawData[5] = c + y*y*t;\r\n\t\tm.rawData[10] = c + z*z*t;\r\n\r\n\t\ttmp1 = x*y*t;\r\n\t\ttmp2 = z*s;\r\n\t\tm.rawData[1] = tmp1 + tmp2;\r\n\t\tm.rawData[4] = tmp1 - tmp2;\r\n\t\ttmp1 = x*z*t;\r\n\t\ttmp2 = y*s;\r\n\t\tm.rawData[8] = tmp1 + tmp2;\r\n\t\tm.rawData[2] = tmp1 - tmp2;\r\n\t\ttmp1 = y*z*t;\r\n\t\ttmp2 = x*s;\r\n\t\tm.rawData[9] = tmp1 - tmp2;\r\n\t\tm.rawData[6] = tmp1 + tmp2;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * [read-only] A Number that determines whether a matrix is invertible.\r\n\t */\r\n\tpublic get determinant():number\r\n\t{\r\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\r\n\t}\r\n\r\n\t/**\r\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\r\n\t * transformation's frame of reference.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis.rawData[12] = value.x;\r\n\t\tthis.rawData[13] = value.y;\r\n\t\tthis.rawData[14] = value.z;\r\n\t}\r\n\r\n\tpublic toFixed(decimalPlace:number):string\r\n\t{\r\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\r\n\t}\r\n}\r\n\r\nexport = Matrix3D;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\n/**\r\n * The Matrix class represents a transformation matrix that determines how to\r\n * map points from one coordinate space to another. You can perform various\r\n * graphical transformations on a display object by setting the properties of\r\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\r\n * property of a Transform object, and then applying that Transform object as\r\n * the <code>transform</code> property of the display object. These\r\n * transformation functions include translation(<i>x</i> and <i>y</i>\r\n * repositioning), rotation, scaling, and skewing.\r\n *\r\n * <p>Together these types of transformations are known as <i>affine\r\n * transformations</i>. Affine transformations preserve the straightness of\r\n * lines while transforming, so that parallel lines stay parallel.</p>\r\n *\r\n * <p>To apply a transformation matrix to a display object, you create a\r\n * Transform object, set its <code>matrix</code> property to the\r\n * transformation matrix, and then set the <code>transform</code> property of\r\n * the display object to the Transform object. Matrix objects are also used as\r\n * parameters of some methods, such as the following:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\r\n *   <li>The <code>beginBitmapFill()</code> method,\r\n * <code>beginGradientFill()</code> method, or\r\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\r\n * </ul>\r\n *\r\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\r\n * contents:</p>\r\n *\r\n * <p>In traditional transformation matrixes, the <code>u</code>,\r\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\r\n * The Matrix class can only operate in two-dimensional space, so it always\r\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\r\n * and that the property value <code>w</code> is 1.0. The effective values of\r\n * the matrix are as follows:</p>\r\n *\r\n * <p>You can get and set the values of all six of the other properties in a\r\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\r\n *\r\n * <p>The Matrix class supports the four major types of transformations:\r\n * translation, scaling, rotation, and skewing. You can set three of these\r\n * transformations by using specialized methods, as described in the following\r\n * table: </p>\r\n *\r\n * <p>Each transformation function alters the current matrix properties so\r\n * that you can effectively combine multiple transformations. To do this, you\r\n * call more than one transformation function before applying the matrix to\r\n * its display object target(by using the <code>transform</code> property of\r\n * that display object).</p>\r\n *\r\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\r\n * before you can call the methods of the Matrix object.</p>\r\n */\r\nclass Matrix\r\n{\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic d:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>x</i> axis.\r\n\t */\r\n\tpublic tx:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>y</i> axis.\r\n\t */\r\n\tpublic ty:number;\r\n\r\n\t/**\r\n\t * Creates a new Matrix object with the specified parameters. In matrix\r\n\t * notation, the properties are organized like this:\r\n\t *\r\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\r\n\t * constructor, it creates an <i>identity matrix</i> with the following\r\n\t * values:</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic clone():Matrix\r\n\t{\r\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates a matrix with the current matrix, effectively combining the\r\n\t * geometric effects of the two. In mathematical terms, concatenating two\r\n\t * matrixes is the same as combining them using matrix multiplication.\r\n\t *\r\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\r\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\r\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\r\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\r\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\r\n\t *\r\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\r\n\t * you want to concatenate two matrixes without altering either of the two\r\n\t * source matrixes, first copy the source matrix by using the\r\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\r\n\t *\r\n\t * @param matrix The matrix to be concatenated to the source matrix.\r\n\t */\r\n\tpublic concat(matrix:Matrix):void\r\n\t{\r\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\r\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\r\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\r\n\t * object.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t} else if (column == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (column == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix object into the Vector3D\r\n\t * object. The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (column == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.c;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else if (column == 1) {\r\n\t\t\tvector3D.x = this.b;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else {\r\n\t\t\tvector3D.x = this.tx;\r\n\t\t\tvector3D.y = this.ty;\r\n\t\t\tvector3D.z = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Point object into the\r\n\t * calling Matrix object.\r\n\t *\r\n\t * @param sourceMatrix The Matrix object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix:Matrix):void\r\n\t{\r\n\t\tthis.a = sourceMatrix.a;\r\n\t\tthis.b = sourceMatrix.b;\r\n\t\tthis.c = sourceMatrix.c;\r\n\t\tthis.d = sourceMatrix.d;\r\n\t\tthis.tx = sourceMatrix.tx;\r\n\t\tthis.ty = sourceMatrix.ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (row == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\r\n\t * The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.b;\r\n\t\t\tvector3D.z = this.tx;\r\n\t\t} else if (row == 1) {\r\n\t\t\tvector3D.x = this.c;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = this.ty;\r\n\t\t} else {\r\n\t\t\tvector3D.setTo(0, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Includes parameters for scaling, rotation, and translation. When applied\r\n\t * to a matrix it sets the matrix's values based on those parameters.\r\n\t *\r\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\r\n\t * matrix as you would if you applied the <code>identity()</code>,\r\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\r\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\r\n\t * 100, 100)</code> has the same effect as the following:</p>\r\n\t *\r\n\t * @param scaleX   The factor by which to scale horizontally.\r\n\t * @param scaleY   The factor by which scale vertically.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The number of pixels to translate(move) to the right\r\n\t *                 along the <i>x</i> axis.\r\n\t * @param ty       The number of pixels to translate(move) down along the\r\n\t *                 <i>y</i> axis.\r\n\t */\r\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = scaleX;\r\n\t\tthis.d = scaleY;\r\n\t\tthis.b = rotation;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the specific style of matrix expected by the\r\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\r\n\t * methods of the Graphics class. Width and height are scaled to a\r\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\r\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\r\n\t * height.\r\n\t *\r\n\t * <p>For example, consider a gradient with the following\r\n\t * characteristics:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>GradientType.LINEAR</code></li>\r\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\r\n\t * 255]</code></li>\r\n\t *   <li><code>SpreadMethod.PAD</code></li>\r\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The following illustrations show gradients in which the matrix was\r\n\t * defined using the <code>createGradientBox()</code> method with different\r\n\t * parameter settings:</p>\r\n\t *\r\n\t * @param width    The width of the gradient box.\r\n\t * @param height   The height of the gradient box.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The distance, in pixels, to translate to the right along\r\n\t *                 the <i>x</i> axis. This value is offset by half of the\r\n\t *                 <code>width</code> parameter.\r\n\t * @param ty       The distance, in pixels, to translate down along the\r\n\t *                 <i>y</i> axis. This value is offset by half of the\r\n\t *                 <code>height</code> parameter.\r\n\t */\r\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = width/1638.4;\r\n\t\tthis.d = height/1638.4;\r\n\r\n\t\tif (rotation != 0.0) {\r\n\t\t\tvar cos = Math.cos(rotation);\r\n\t\t\tvar sin = Math.sin(rotation);\r\n\r\n\t\t\tthis.b = sin*this.d;\r\n\t\t\tthis.c = -sin*this.a;\r\n\t\t\tthis.a *= cos;\r\n\t\t\tthis.d *= cos;\r\n\t\t} else {\r\n\t\t\tthis.b = this.c = 0;\r\n\t\t}\r\n\r\n\t\tthis.tx = tx + width/2;\r\n\t\tthis.ty = ty + height/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a point in the pretransform coordinate space, returns the\r\n\t * coordinates of that point after the transformation occurs. Unlike the\r\n\t * standard transformation applied using the <code>transformPoint()</code>\r\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\r\n\t * does not consider the translation parameters <code>tx</code> and\r\n\t * <code>ty</code>.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the matrix transformation.\r\n\t */\r\n\tpublic deltaTransformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each matrix property to a value that causes a null transformation. An\r\n\t * object transformed by applying an identity matrix will be identical to the\r\n\t * original.\r\n\t *\r\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\r\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\r\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\r\n\t * <code>ty</code>=0.</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t */\r\n\tpublic identity():void\r\n\t{\r\n\t\tthis.a = 1;\r\n\t\tthis.b = 0;\r\n\t\tthis.c = 0;\r\n\t\tthis.d = 1;\r\n\t\tthis.tx = 0;\r\n\t\tthis.ty = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the opposite transformation of the original matrix. You can apply\r\n\t * an inverted matrix to an object to undo the transformation performed when\r\n\t * applying the original matrix.\r\n\t */\r\n\tpublic invert():void\r\n\t{\r\n\t\tvar norm = this.a*this.d - this.b*this.c;\r\n\r\n\t\tif (norm == 0) {\r\n\t\t\tthis.a = this.b = this.c = this.d = 0;\r\n\t\t\tthis.tx = -this.tx;\r\n\t\t\tthis.ty = -this.ty;\r\n\t\t} else {\r\n\t\t\tnorm = 1.0/norm;\r\n\t\t\tvar a1 = this.d*norm;\r\n\t\t\tthis.d = this.a*norm;\r\n\t\t\tthis.a = a1;\r\n\t\t\tthis.b *= -norm;\r\n\t\t\tthis.c *= -norm;\r\n\r\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\r\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\r\n\t\t\tthis.tx = tx1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @param matrix The matrix for which you want to get the result of the matrix\r\n\t *               transformation.\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic multiply(matrix:Matrix):Matrix\r\n\t{\r\n\t\tvar result = new Matrix();\r\n\r\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\r\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\r\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation transformation to the Matrix object.\r\n\t *\r\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\r\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\r\n\t * Matrix object. In matrix notation, this is the same as concatenating the\r\n\t * current matrix with the following:</p>\r\n\t *\r\n\t * @param angle The rotation angle in radians.\r\n\t */\r\n\tpublic rotate(angle:number):void\r\n\t{\r\n\t\tvar cos = Math.cos(angle);\r\n\t\tvar sin = Math.sin(angle);\r\n\r\n\t\tvar a1 = this.a*cos - this.b*sin;\r\n\t\tthis.b = this.a*sin + this.b*cos;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*cos - this.d*sin;\r\n\t\tthis.d = this.c*sin + this.d*cos;\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\r\n\t\tthis.ty = this.tx*sin + this.ty*cos;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\r\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\r\n\t * <code>sy</code>.\r\n\t *\r\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\r\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\r\n\t * is the same as concatenating the current matrix with the following\r\n\t * matrix:</p>\r\n\t *\r\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\r\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\r\n\t */\r\n\tpublic scale(sx:number, sy:number):void\r\n\t{\r\n\t\tthis.a *= sx;\r\n\t\tthis.b *= sy;\r\n\r\n\t\tthis.c *= sx;\r\n\t\tthis.d *= sy;\r\n\r\n\t\tthis.tx *= sx;\r\n\t\tthis.ty *= sy;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Matrix to the specified values.\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a text value listing the properties of the Matrix object.\r\n\t *\r\n\t * @return A string containing the values of the properties of the Matrix\r\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the result of applying the geometric transformation represented by\r\n\t * the Matrix object to the specified point.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the Matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the Matrix transformation.\r\n\t */\r\n\tpublic transformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\r\n\t * by the <code>dx</code> and <code>dy</code> parameters.\r\n\t *\r\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\r\n\t *           pixels.\r\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\r\n\t */\r\n\tpublic translate(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.tx += dx;\r\n\t\tthis.ty += dy;\r\n\t}\r\n}\r\n\r\nexport = Matrix;","/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Orientation3D\r\n{\r\n\t/**\r\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\r\n\r\n\t/**\r\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\r\n\r\n\t/**\r\n\t * The quaternion orientation uses complex numbers.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static QUATERNION:string = \"quaternion\";\r\n}\r\n\r\nexport = Orientation3D;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\r\n * the perspective transformations of a display object and all of its\r\n * children. For more complex or custom perspective transformations, use the\r\n * Matrix3D class. While the PerspectiveProjection class provides basic\r\n * three-dimensional presentation properties, the Matrix3D class provides more\r\n * detailed control over the three-dimensional presentation of display objects.\r\n * </p>\r\n *\r\n * <p>Projection is a way of representing a three-dimensional object in a\r\n * two-dimensional space, like a cube projected onto a computer screen.\r\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\r\n * model and project a three-dimensional world and its objects on the screen.\r\n * The viewing frustum becomes increasingly wider as it moves further from the\r\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\r\n * the eyes of an observer facing the screen. The projected perspective\r\n * produces the illusion of three dimensions with depth and distance, where\r\n * the objects closer to the screen appear larger than the objects farther\r\n * from the screen.</p>\r\n *\r\n * <p>A default PerspectiveProjection object is a framework defined for\r\n * perspective transformation of the root object, based on the field of view\r\n * and aspect ratio (dimensions) of the stage. The projection center, the\r\n * vanishing point, is set to the center of the stage, which means the\r\n * three-dimensional display objects disappear toward the center of the stage\r\n * as they move back in the z axis. The default viewpoint is at point (0,0)\r\n * looking down the positive z axis. The y-axis points down toward the bottom\r\n * of the screen. You can gain access to the root display object's perspective\r\n * projection settings and change the field of view and projection center\r\n * properties of the perspectiveProjection property through the root object's\r\n * <code>DisplayObject.transform</code> property.</p>\r\n *\r\n * <p>You can also set a different perspective projection setting for a\r\n * display object through the parent's perspective projection. First, create a\r\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\r\n * <code>projectionCenter</code> properties. Next, assign the\r\n * PerspectiveProjection object to the parent display object using the\r\n * <code>DisplayObject.transform</code> property. The specified projection\r\n * matrix and transformation will then apply to all the display object's\r\n * three-dimensional children.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass PerspectiveProjection\r\n{\r\n\tprivate _matrix3D:Matrix3D;\r\n\r\n\t/**\r\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\r\n\t * view in three dimensions. This value determines how strong the\r\n\t * perspective transformation and distortion apply to a\r\n\t * three-dimensional display object with a non-zero z-coordinate.\r\n\t *\r\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\r\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\r\n\t * y-, and z-coordinates with little or no distortion. In other words,\r\n\t * for a small angle, a display object moving down the z axis appears\r\n\t * to stay near the same size and moves little.</p>\r\n\t *\r\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\r\n\t * positions with a z value smaller than 0 are magnified, while\r\n\t * positions with a z value larger than 0 are minimized. With a large\r\n\t * angle, a display object moving down the z axis appears to change\r\n\t * size quickly and moves a great distance. If the field of view is\r\n\t * set to 0 or 180, nothing is seen on the screen.</p>\r\n\t */\r\n\tpublic fieldOfView:number;\r\n\r\n\t/**\r\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\r\n\t * the display object located in the z axis. During the perspective\r\n\t * transformation, the <code>focalLength</code> is calculated\r\n\t * dynamically using the angle of the field of view and the stage's\r\n\t * aspect ratio (stage width divided by stage height).\r\n\t *\r\n\t * @see away.geom.PerspectiveProjection#fieldOfView\r\n\t */\r\n\tpublic focalLength:number;\r\n\r\n\t/**\r\n\t * A two-dimensional point representing the center of the projection,\r\n\t * the vanishing point for the display object.\r\n\t *\r\n\t * <p>The <code>projectionCenter</code> property is an offset to the\r\n\t * default registration point that is the upper left of the stage,\r\n\t * point (0,0). The default projection transformation center is in the\r\n\t * middle of the stage, which means the three-dimensional display\r\n\t * objects disappear toward the center of the stage as they move\r\n\t * backwards in the z axis.</p>\r\n\t */\r\n\tpublic projectionCenter:Point;\r\n\r\n\t/**\r\n\t * Creates an instance of a PerspectiveProjection object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t * Returns the underlying Matrix3D object of the display object.\r\n\t *\r\n\t * <p>A display object, like the root object, can have a\r\n\t * PerspectiveProjection object without needing a Matrix3D property\r\n\t * defined for its transformations. In fact, use either a\r\n\t * PerspectiveProjection or a Matrix3D object to specify the\r\n\t * perspective transformation. If when using the PerspectiveProjection\r\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\r\n\t * method can retrieve the underlying Matrix3D object of the display\r\n\t * object. For example, the <code>toMatrix3D()</code> method can be\r\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\r\n\t *\r\n\t * @see away.geom.Matrix3D\r\n\t */\r\n\tpublic toMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._matrix3D;\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;","import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Plane3D\r\n{\r\n\t/**\r\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\r\n\t */\r\n\tpublic d:number;\r\n\r\n\tpublic _iAlignment:number;\r\n\r\n\t// indicates the alignment of the plane\r\n\tpublic static ALIGN_ANY:number = 0;\r\n\tpublic static ALIGN_XY_AXIS:number = 1;\r\n\tpublic static ALIGN_YZ_AXIS:number = 2;\r\n\tpublic static ALIGN_XZ_AXIS:number = 3;\r\n\r\n\t/**\r\n\t * Create a Plane3D with ABCD coefficients\r\n\t */\r\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\r\n\t\tif (a == 0 && b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (b == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (a == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\r\n\t * @param p0 Vector3D\r\n\t * @param p1 Vector3D\r\n\t * @param p2 Vector3D\r\n\t */\r\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\r\n\t{\r\n\t\tvar d1x:number = p1.x - p0.x;\r\n\t\tvar d1y:number = p1.y - p0.y;\r\n\t\tvar d1z:number = p1.z - p0.z;\r\n\r\n\t\tvar d2x:number = p2.x - p0.x;\r\n\t\tvar d2y:number = p2.y - p0.y;\r\n\t\tvar d2z:number = p2.z - p0.z;\r\n\r\n\t\tthis.a = d1y*d2z - d1z*d2y;\r\n\t\tthis.b = d1z*d2x - d1x*d2z;\r\n\t\tthis.c = d1x*d2y - d1y*d2x;\r\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\r\n\r\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\r\n\t * @param normal Vector3D\r\n\t * @param point  Vector3D\r\n\t */\r\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\r\n\t{\r\n\t\tthis.a = normal.x;\r\n\t\tthis.b = normal.y;\r\n\t\tthis.c = normal.z;\r\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize this Plane3D\r\n\t * @return Plane3D This Plane3D.\r\n\t */\r\n\tpublic normalize():Plane3D\r\n\t{\r\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\r\n\t\tthis.a *= len;\r\n\t\tthis.b *= len;\r\n\t\tthis.c *= len;\r\n\t\tthis.d *= len;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance between this Plane3D and the point p.\r\n\t * @param p Vector3D\r\n\t * @returns Number\r\n\t */\r\n\tpublic distance(p:Vector3D):number\r\n\t{\r\n\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\r\n\r\n\t\t\treturn this.a*p.x - this.d;\r\n\r\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\r\n\t\t\treturn this.b*p.y - this.d;\r\n\t\t}\r\n\r\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\r\n\r\n\t\t\treturn this.c*p.z - this.d;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\r\n\t * @param p Vector3D\r\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\r\n\t */\r\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\r\n\t{\r\n\t\t// check NaN\r\n\t\tif (this.d != this.d)\r\n\t\t\treturn PlaneClassification.FRONT;\r\n\r\n\t\tvar len:number;\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\r\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\r\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\r\n\t\t\tlen = this.c*p.z - this.d; else\r\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\tif (len < -epsilon)\r\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\r\n\t\t\treturn PlaneClassification.FRONT; else\r\n\t\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Plane3D;","class PlaneClassification\r\n{\r\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\r\n\tpublic static BACK:number = 0;\r\n\tpublic static FRONT:number = 1;\r\n\r\n\tpublic static IN:number = 0;\r\n\tpublic static OUT:number = 1;\r\n\tpublic static INTERSECT:number = 2;\r\n\r\n}\r\n\r\nexport = PlaneClassification;","/**\r\n * The Point object represents a location in a two-dimensional coordinate\r\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\r\n * represents the vertical axis.\r\n *\r\n * <p>The following code creates a point at(0,0):</p>\r\n *\r\n * <p>Methods and properties of the following classes use Point objects:</p>\r\n *\r\n * <ul>\r\n *   <li>BitmapData</li>\r\n *   <li>DisplayObject</li>\r\n *   <li>DisplayObjectContainer</li>\r\n *   <li>DisplacementMapFilter</li>\r\n *   <li>NativeWindow</li>\r\n *   <li>Matrix</li>\r\n *   <li>Rectangle</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Point()</code> constructor to create a Point\r\n * object.</p>\r\n */\r\nclass Point\r\n{\r\n\t/**\r\n\t * The horizontal coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The length of the line segment from(0,0) to this point.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new point. If you pass no parameters to this method, a point is\r\n\t * created at(0,0).\r\n\t *\r\n\t * @param x The horizontal coordinate.\r\n\t * @param y The vertical coordinate.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the coordinates of another point to the coordinates of this point to\r\n\t * create a new point.\r\n\t *\r\n\t * @param v The point to be added.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic add(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x + v.x, this.y + v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this Point object.\r\n\t *\r\n\t * @return The new Point object.\r\n\t */\r\n\tpublic clone():Point\r\n\t{\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\tpublic copyFrom(sourcePoint:Point)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two points are equal. Two points are equal if they have\r\n\t * the same <i>x</i> and <i>y</i> values.\r\n\t *\r\n\t * @param toCompare The point to be compared.\r\n\t * @return A value of <code>true</code> if the object is equal to this Point\r\n\t *         object; <code>false</code> if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Point):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current point is\r\n\t *                 (0,5), and you normalize it to 1, the point returned is\r\n\t *                  at(0,1).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthrow \"Cannot divide by zero length.\";\r\n\t}\r\n\r\n\t/**\r\n\t * Offsets the Point object by the specified amount. The value of\r\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\r\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\r\n\t * value of <i>y</i> to create the new <i>y</i> value.\r\n\t *\r\n\t * @param dx The amount by which to offset the horizontal coordinate,\r\n\t *           <i>x</i>.\r\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\tpublic setTo(xa:number, ya:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the coordinates of another point from the coordinates of this\r\n\t * point to create a new point.\r\n\t *\r\n\t * @param v The point to be subtracted.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic subtract(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\r\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\r\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\r\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\r\n\t *\r\n\t * @return The string representation of the coordinates.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @return The distance between the first and second points.\r\n\t */\r\n\tpublic static distance(pt1:Point, pt2:Point):number\r\n\t{\r\n\t\tvar dx:number = pt2.x - pt1.x;\r\n\t\tvar dy:number = pt2.y - pt1.y;\r\n\r\n\t\treturn Math.sqrt(dx*dx + dy*dy);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines a point between two specified points. The parameter\r\n\t * <code>f</code> determines where the new interpolated point is located\r\n\t * relative to the two end points specified by parameters <code>pt1</code>\r\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\r\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\r\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\r\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\r\n\t * point(parameter <code>pt2</code>).\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @param f   The level of interpolation between the two points. Indicates\r\n\t *            where the new point will be, along the line between\r\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\r\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\r\n\t *            <code>pt2</code> is returned.\r\n\t * @return The new, interpolated point.\r\n\t */\r\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\r\n\t{\r\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\r\n\t *\r\n\t * @param len   The length coordinate of the polar pair.\r\n\t * @param angle The angle, in radians, of the polar pair.\r\n\t * @return The Cartesian point.\r\n\t */\r\n\tpublic static polar(len:number, angle:number):Point\r\n\t{\r\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\r\n\t}\r\n}\r\n\r\nexport = Point;\r\n","class PoissonLookup\r\n{\r\n\tpublic static _distributions:Array<Array<number>>;\r\n\r\n\tpublic static initDistributions():void\r\n\t{\r\n\t\t// precalculated for best control\r\n\t\tthis._distributions = new Array<Array<number>>();\r\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\r\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\r\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\r\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\r\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\r\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\r\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\r\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\r\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\r\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\r\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\r\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\r\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\r\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\r\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\r\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\r\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\r\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\r\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\r\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\r\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\r\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\r\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\r\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\r\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\r\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\r\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\r\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\r\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\r\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\r\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\r\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\r\n\t}\r\n\r\n\tpublic static getDistribution(n:number /*int*/):Array<number>\r\n\t{\r\n\t\tif (!this._distributions)\r\n\t\t\tthis.initDistributions();\r\n\r\n\t\tif (n < 2 || n > 32)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._distributions[n - 1];\r\n\t}\r\n}\r\n\r\nexport = PoissonLookup;","import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Quaternion\r\n{\r\n\t/**\r\n\t * The x value of the quaternion.\r\n\t */\r\n\tpublic x:number = 0;\r\n\r\n\t/**\r\n\t * The y value of the quaternion.\r\n\t */\r\n\tpublic y:number = 0;\r\n\r\n\t/**\r\n\t * The z value of the quaternion.\r\n\t */\r\n\tpublic z:number = 0;\r\n\r\n\t/**\r\n\t * The w value of the quaternion.\r\n\t */\r\n\tpublic w:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new Quaternion object.\r\n\t * @param x The x value of the quaternion.\r\n\t * @param y The y value of the quaternion.\r\n\t * @param z The z value of the quaternion.\r\n\t * @param w The w value of the quaternion.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the magnitude of the quaternion object.\r\n\t */\r\n\tpublic get magnitude():number\r\n\t{\r\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\r\n\t *\r\n\t * @param    qa    The first quaternion in the multiplication.\r\n\t * @param    qb    The second quaternion in the multiplication.\r\n\t */\r\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\r\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t}\r\n\r\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\r\n\t{\r\n\t\t//target ||= new Quaternion();\r\n\t\tif (target === null) {\r\n\t\t\ttarget = new Quaternion();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar x2:number = vector.x;\r\n\t\tvar y2:number = vector.y;\r\n\t\tvar z2:number = vector.z;\r\n\r\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given rotation around a vector.\r\n\t *\r\n\t * @param    axis    The axis around which to rotate\r\n\t * @param    angle    The angle in radians of the rotation.\r\n\t */\r\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar sin_a:number = Math.sin(angle/2);\r\n\t\tvar cos_a:number = Math.cos(angle/2);\r\n\r\n\t\tthis.x = axis.x*sin_a;\r\n\t\tthis.y = axis.y*sin_a;\r\n\t\tthis.z = axis.z*sin_a;\r\n\t\tthis.w = cos_a;\r\n\r\n\t\tthis.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\r\n\r\n\t\t// shortest direction\r\n\t\tif (dot < 0) {\r\n\t\t\tdot = -dot;\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tif (dot < 0.95) {\r\n\t\t\t// interpolate angle linearly\r\n\t\t\tvar angle:number = Math.acos(dot);\r\n\t\t\tvar s:number = 1/Math.sin(angle);\r\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\r\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\r\n\t\t\tthis.w = w1*s1 + w2*s2;\r\n\t\t\tthis.x = x1*s1 + x2*s2;\r\n\t\t\tthis.y = y1*s1 + y2*s2;\r\n\t\t\tthis.z = z1*s1 + z2*s2;\r\n\t\t} else {\r\n\t\t\t// nearly identical angle, interpolate linearly\r\n\t\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\t\tthis.z = z1 + t*(z2 - z1);\r\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\t\tthis.w *= len;\r\n\t\t\tthis.x *= len;\r\n\t\t\tthis.y *= len;\r\n\t\t\tthis.z *= len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between two quaternions.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar len:number;\r\n\r\n\t\t// shortest direction\r\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\tthis.z = z1 + t*(z2 - z1);\r\n\r\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tthis.w *= len;\r\n\t\tthis.x *= len;\r\n\t\tthis.y *= len;\r\n\t\tthis.z *= len;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given euler rotation.\r\n\t *\r\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\r\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\r\n\t * @param    az        The angle in radians of the rotation around the az axis.\r\n\t */\r\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\r\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\r\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\r\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\r\n\r\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\r\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\r\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\r\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\r\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\r\n\t * @return The Vector3D containing the Euler angles.\r\n\t */\r\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\r\n\t{\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\r\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\r\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalises the quaternion object.\r\n\t */\r\n\tpublic normalize(val:number = 1)\r\n\t{\r\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n\r\n\t\tthis.x *= mag;\r\n\t\tthis.y *= mag;\r\n\t\tthis.z *= mag;\r\n\t\tthis.w *= mag;\r\n\t}\r\n\r\n\t/**\r\n\t * Used to trace the values of a quaternion.\r\n\t *\r\n\t * @return A string representation of the quaternion object.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\r\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\r\n\t * @return A Matrix3D object representing an equivalent rotation.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\trawData[0] = xx - yy - zz + ww;\r\n\t\trawData[4] = xy2 - zw2;\r\n\t\trawData[8] = xz2 + yw2;\r\n\t\trawData[12] = 0;\r\n\t\trawData[1] = xy2 + zw2;\r\n\t\trawData[5] = -xx + yy - zz + ww;\r\n\t\trawData[9] = yz2 - xw2;\r\n\t\trawData[13] = 0;\r\n\t\trawData[2] = xz2 - yw2;\r\n\t\trawData[6] = yz2 + xw2;\r\n\t\trawData[10] = -xx - yy + zz + ww;\r\n\t\trawData[14] = 0;\r\n\t\trawData[3] = 0.0;\r\n\t\trawData[7] = 0.0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\treturn new Matrix3D(rawData);\r\n\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\r\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\r\n\t */\r\n\tpublic fromMatrix(matrix:Matrix3D)\r\n\t{\r\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = v.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\r\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\r\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\r\n\t */\r\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\r\n\t{\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\ttarget[0] = xx - yy - zz + ww;\r\n\t\ttarget[1] = xy2 - zw2;\r\n\t\ttarget[2] = xz2 + yw2;\r\n\t\ttarget[4] = xy2 + zw2;\r\n\t\ttarget[5] = -xx + yy - zz + ww;\r\n\t\ttarget[6] = yz2 - xw2;\r\n\t\ttarget[8] = xz2 - yw2;\r\n\t\ttarget[9] = yz2 + xw2;\r\n\t\ttarget[10] = -xx - yy + zz + ww;\r\n\t\ttarget[3] = target[7] = target[11] = 0;\r\n\r\n\t\tif (!exclude4thRow) {\r\n\t\t\ttarget[12] = target[13] = target[14] = 0;\r\n\t\t\ttarget[15] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the quaternion.\r\n\t * @return An exact duplicate of the current Quaternion.\r\n\t */\r\n\tpublic clone():Quaternion\r\n\t{\r\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates a point.\r\n\t * @param vector The Vector3D object to be rotated.\r\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\r\n\t * @return A Vector3D object containing the rotated point.\r\n\t */\r\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\t// p*q'\r\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\r\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\r\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the data from a quaternion into this instance.\r\n\t * @param q The quaternion to copy from.\r\n\t */\r\n\tpublic copyFrom(q:Quaternion)\r\n\t{\r\n\t\tthis.x = q.x;\r\n\t\tthis.y = q.y;\r\n\t\tthis.z = q.z;\r\n\t\tthis.w = q.w;\r\n\t}\r\n}\r\n\r\nexport = Quaternion;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * A Rectangle object is an area defined by its position, as indicated by its\r\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\r\n * <code>height</code> properties of the Rectangle class are independent of\r\n * each other; changing the value of one property has no effect on the others.\r\n * However, the <code>right</code> and <code>bottom</code> properties are\r\n * integrally related to those four properties. For example, if you change the\r\n * value of the <code>right</code> property, the value of the\r\n * <code>width</code> property changes; if you change the <code>bottom</code>\r\n * property, the value of the <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Rectangle objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\r\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\r\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\r\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\r\n * <code>merge()</code>, <code>paletteMap()</code>,\r\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\r\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\r\n * BitmapData class</li>\r\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\r\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\r\n * DisplayObject class</li>\r\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\r\n * class</li>\r\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\r\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\r\n * method of the Sprite class</li>\r\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\r\n * method of the PrintJob class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\r\n * Rectangle object.</p>\r\n *\r\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\r\n * display object. To draw a rectangular Shape object onscreen, use the\r\n * <code>drawRect()</code> method of the Graphics class.</p>\r\n */\r\nclass Rectangle\r\n{\r\n\tprivate _size:Point;\r\n\tprivate _bottomRight:Point;\r\n\tprivate _topLeft:Point;\r\n\r\n\t/**\r\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>x</code> property of a Rectangle object has no\r\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>y</code> property of a Rectangle object has no\r\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's bottom-right corner, determined by\r\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRight():Point\r\n\t{\r\n\t\tif (this._bottomRight == null)\r\n\t\t\tthis._bottomRight = new Point();\r\n\r\n\t\tthis._bottomRight.x = this.x + this.width;\r\n\t\tthis._bottomRight.y = this.y + this.height;\r\n\r\n\t\treturn this._bottomRight;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>left</code> property of a Rectangle object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Rectangle object, expressed as a Point object with the\r\n\t * values of the <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get size():Point\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Point();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>top</code> property of a Rectangle object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's top-left corner, determined by the\r\n\t * <i>x</i> and <i>y</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeft():Point\r\n\t{\r\n\t\tif (this._topLeft == null)\r\n\t\t\tthis._topLeft = new Point();\r\n\r\n\t\tthis._topLeft.x = this.x;\r\n\t\tthis._topLeft.y = this.y;\r\n\r\n\t\treturn this._topLeft;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Rectangle object with the top-left corner specified by the\r\n\t * <code>x</code> and <code>y</code> parameters and with the specified\r\n\t * <code>width</code> and <code>height</code> parameters. If you call this\r\n\t * public without parameters, a rectangle with <code>x</code>,\r\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\r\n\t * to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param width  The width of the rectangle, in pixels.\r\n\t * @param height The height of the rectangle, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Rectangle object with the same values for the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties as the original Rectangle object.\r\n\t *\r\n\t * @return A new Rectangle object with the same values for the\r\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t *         <code>height</code> properties as the original Rectangle object.\r\n\t */\r\n\tpublic clone():Rectangle\r\n\t{\r\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\r\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\r\n\t *              coordinates.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(point:Point):boolean\r\n\t{\r\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\r\n\t * parameter is contained within this Rectangle object. A Rectangle object is\r\n\t * said to contain another if the second Rectangle object falls entirely\r\n\t * within the boundaries of the first.\r\n\t *\r\n\t * @param rect The Rectangle object being checked.\r\n\t * @return A value of <code>true</code> if the Rectangle object that you\r\n\t *         specify is contained by this Rectangle object; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic containsRect(rect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of rectangle data from the source Rectangle object into the\r\n\t * calling Rectangle object.\r\n\t *\r\n\t * @param sourceRect The Rectangle object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceRect:Rectangle)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Rectangle object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of an object against the same properties of\r\n\t * this Rectangle object.\r\n\t *\r\n\t * @param toCompare The rectangle to compare to this Rectangle object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t *         and <code>height</code> properties as this Rectangle object;\r\n\t *         otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object by the specified amounts, in\r\n\t * pixels. The center point of the Rectangle object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, and to\r\n\t * the top and the bottom by the <code>dy</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Rectangle\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the rectangle:\r\n\t * @param dy The value to be added to the top and the bottom of the\r\n\t *           Rectangle. The following equation is used to calculate the new\r\n\t *           height and position of the rectangle:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param point The <code>x</code> property of this Point object is used to\r\n\t *              increase the horizontal dimension of the Rectangle object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Rectangle object.\r\n\t */\r\n\tpublic inflatePoint(point:Point)\r\n\t{\r\n\t\tthis.x -= point.x/2;\r\n\t\tthis.y -= point.y/2;\r\n\t\tthis.width += point.x/2;\r\n\t\tthis.height += point.y/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Rectangle object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object, returns the area of\r\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\r\n\t * this method returns an empty Rectangle object with its properties set to\r\n\t * 0.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against to see if it\r\n\t *                    intersects with this Rectangle object.\r\n\t * @return A Rectangle object that equals the area of intersection. If the\r\n\t *         rectangles do not intersect, this method returns an empty\r\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\r\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t *         properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Rectangle):Rectangle\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Rectangle = new Rectangle();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of the specified Rectangle object to see if\r\n\t * it intersects with this Rectangle object.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\r\n\t *                    object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Rectangle object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Rectangle object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Rectangle object's width or\r\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object, as determined by its\r\n\t * top-left corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object using a Point object as a\r\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\r\n\t * method, except that it takes a Point object as a parameter.\r\n\t *\r\n\t * @param point A Point object to use to offset this Rectangle object.\r\n\t */\r\n\tpublic offsetPoint(point:Point)\r\n\t{\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\r\n\t * empty if its width or height is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Rectangle to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param widtha  The width of the rectangle, in pixels.\r\n\t * @param heighta The height of the rectangle, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal and vertical\r\n\t * positions and the width and height of the Rectangle object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\r\n\t *         <code>width</code>, and <code>height</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two rectangles together to create a new Rectangle object, by filling\r\n\t * in the horizontal and vertical space between the two rectangles.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\r\n\t * <code>0</code> as the height or width value, such as: <code>var\r\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\r\n\t * @return A new Rectangle object that is the union of the two rectangles.\r\n\t */\r\n\tpublic union(toUnion:Rectangle):Rectangle\r\n\t{\r\n\t\tvar u:Rectangle = new Rectangle();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Rectangle;","import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Sphere\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic radius:number;\r\n\r\n\t/**\r\n\t * Create a Sphere with ABCD coefficients\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\r\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\r\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\r\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\r\n\t\tvar det:number = b*b - 4*a*c;\r\n\r\n\t\tif (det >= 0) { // ray goes through sphere\r\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\r\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\r\n\t\t\tif (rayEntryDistance >= 0) {\r\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\r\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\r\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\r\n\t\t\t\ttargetNormal.normalize();\r\n\r\n\t\t\t\treturn rayEntryDistance;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ray misses sphere\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\tvar px:number = position.x - this.x;\r\n\t\tvar py:number = position.y - this.y;\r\n\t\tvar pz:number = position.z - this.z;\r\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\r\n\t\treturn distance <= this.radius;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Sphere;","import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nclass UVTransform\r\n{\r\n\tprivate _uvMatrix:Matrix = new Matrix();\r\n\tprivate _uvMatrixDirty:boolean;\r\n\r\n\tprivate _rotation:number = 0;\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\tprivate _offsetU:number = 0;\r\n\tprivate _offsetV:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetU():number\r\n\t{\r\n\t\treturn this._offsetU;\r\n\t}\r\n\r\n\tpublic set offsetU(value:number)\r\n\t{\r\n\t\tif (value == this._offsetU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetU = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetV():number\r\n\t{\r\n\t\treturn this._offsetV;\r\n\t}\r\n\r\n\tpublic set offsetV(value:number)\r\n\t{\r\n\t\tif (value == this._offsetV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetV = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rotation():number\r\n\t{\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\tpublic set rotation(value:number)\r\n\t{\r\n\t\tif (value == this._rotation)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotation = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (value == this._scaleU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (value == this._scaleV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get matrix():Matrix\r\n\t{\r\n\t\tif (this._uvMatrixDirty)\r\n\t\t\tthis.updateUVMatrix();\r\n\r\n\t\treturn this._uvMatrix;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate updateUVMatrix()\r\n\t{\r\n\t\tthis._uvMatrix.identity();\r\n\r\n\t\tif (this._rotation != 0)\r\n\t\t\tthis._uvMatrix.rotate(this._rotation);\r\n\r\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\r\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\r\n\r\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\r\n\r\n\t\tthis._uvMatrixDirty = false;\r\n\t}\r\n}\r\n\r\nexport = UVTransform;","/**\r\n * The Vector3D class represents a point or a location in the three-dimensional\r\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\r\n * space, the x property represents the horizontal axis and the y property\r\n * represents the vertical axis. In three-dimensional space, the z property\r\n * represents depth. The value of the x property increases as the object moves\r\n * to the right. The value of the y property increases as the object moves\r\n * down. The z property increases as the object moves farther from the point\r\n * of view. Using perspective projection and scaling, the object is seen to be\r\n * bigger when near and smaller when farther away from the screen. As in a\r\n * right-handed three-dimensional coordinate system, the positive z-axis points\r\n * away from the viewer and the value of the z property increases as the object\r\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\r\n * space is the upper-left corner of the stage.\r\n *\r\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\r\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\r\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\r\n *\r\n * <p>Quaternion notation introduces a fourth element, the w property, which\r\n * provides additional orientation information. For example, the w property can\r\n * define an angle of rotation of a Vector3D object. The combination of the\r\n * angle of rotation and the coordinates x, y, and z can determine the display\r\n * object's orientation. Here is a representation of Vector3D elements in\r\n * matrix notation:</p>\r\n */\r\nclass Vector3D\r\n{\r\n\t/**\r\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\r\n\t */\r\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\r\n\r\n\t/**\r\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\r\n\t */\r\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\r\n\r\n\t/**\r\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\r\n\t */\r\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\r\n\r\n\t/**\r\n\t * The first element of a Vector3D object, such as the x coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/*\r\n\t *The second element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The third element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\r\n\t * and z properties) can hold data such as the angle of rotation. The\r\n\t * default value is 0.\r\n\t *\r\n\t * <p>Quaternion notation employs an angle as the fourth element in\r\n\t * its calculation of three-dimensional rotation. The w property can\r\n\t * be used to define the angle of rotation about the Vector3D object.\r\n\t * The combination of the rotation angle and the coordinates (x,y,z)\r\n\t * determines the display object's orientation.</p>\r\n\t *\r\n\t * <p>In addition, the w property can be used as a perspective warp\r\n\t * factor for a projected three-dimensional position or as a projection\r\n\t * transform value in representing a three-dimensional coordinate\r\n\t * projected into the two-dimensional space. For example, you can\r\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\r\n\t * property, that, when applied to a Vector3D object, produces a\r\n\t * transform value in the Vector3D object's fourth element (the w\r\n\t * property). Dividing the Vector3D object's other elements by the\r\n\t * transform value then produces a projected Vector3D object. You can\r\n\t * use the <code>Vector3D.project()</code> method to divide the first\r\n\t * three elements of a Vector3D object by its fourth element.</p>\r\n\t */\r\n\tpublic w:number;\r\n\r\n\t/**\r\n\t * The length, magnitude, of the current Vector3D object from the\r\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\r\n\t * property is ignored. A unit vector has a length or magnitude of\r\n\t * one.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.lengthSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * The square of the length of the current Vector3D object, calculated\r\n\t * using the x, y, and z properties. The w property is ignored. Use the\r\n\t * <code>lengthSquared()</code> method whenever possible instead of the\r\n\t * slower <code>Math.sqrt()</code> method call of the\r\n\t * <code>Vector3D.length()</code> method.\r\n\t */\r\n\tpublic get lengthSquared():number\r\n\t{\r\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of a Vector3D object. If you do not specify a\r\n\t * parameter for the constructor, a Vector3D object is created with\r\n\t * the elements (0,0,0,0).\r\n\t *\r\n\t * @param x The first element, such as the x coordinate.\r\n\t * @param y The second element, such as the y coordinate.\r\n\t * @param z The third element, such as the z coordinate.\r\n\t * @param w An optional element for additional data such as the angle\r\n\t *          of rotation.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the value of the x, y, and z elements of the current Vector3D\r\n\t * object to the values of the x, y, and z elements of another Vector3D\r\n\t * object. The <code>add()</code> method does not change the current\r\n\t * Vector3D object. Instead, it returns a new Vector3D object with\r\n\t * the new values.\r\n\t *\r\n\t * <p>The result of adding two vectors together is a resultant vector.\r\n\t * One way to visualize the result is by drawing a vector from the\r\n\t * origin or tail of the first vector to the end or head of the second\r\n\t * vector. The resultant vector is the distance between the origin\r\n\t * point of the first vector and the end point of the second vector.\r\n\t * </p>\r\n\t */\r\n\tpublic add(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle in radians between two vectors. The returned angle\r\n\t * is the smallest radian the first Vector3D object rotates until it\r\n\t * aligns with the second Vector3D object.\r\n\t *\r\n\t * <p>The <code>angleBetween()</code> method is a static method. You\r\n\t * can use it directly as a method of the Vector3D class.</p>\r\n\t *\r\n\t * <p>To convert a degree to a radian, you can use the following\r\n\t * formula:</p>\r\n\t *\r\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\r\n\t *\r\n\t * @param a The first Vector3D object.\r\n\t * @param b The second Vector3D object.\r\n\t * @returns The angle between two Vector3D objects.\r\n\t */\r\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\r\n\t{\r\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is an exact copy of the current\r\n\t * Vector3D object.\r\n\t *\r\n\t * @returns A new Vector3D object that is a copy of the current\r\n\t * Vector3D object.\r\n\t */\r\n\tpublic clone():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of vector data from the source Vector3D object into the\r\n\t * calling Vector3D object.\r\n\t *\r\n\t * @param src The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(src:Vector3D):void\r\n\t{\r\n\t\tthis.x = src.x;\r\n\t\tthis.y = src.y;\r\n\t\tthis.z = src.z;\r\n\t\tthis.w = src.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is perpendicular (at a right\r\n\t * angle) to the current Vector3D and another Vector3D object. If the\r\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\r\n\t * Vector3D objects are parallel to each other.\r\n\t *\r\n\t * <p>You can use the normalized cross product of two vertices of a\r\n\t * polygon surface with the normalized vector of the camera or eye\r\n\t * viewpoint to get a dot product. The value of the dot product can\r\n\t * identify whether a surface of a three-dimensional object is hidden\r\n\t * from the viewpoint.</p>\r\n\t *\r\n\t * @param a A second Vector3D object.\r\n\t * @returns A new Vector3D object that is perpendicular to the current\r\n\t *          Vector3D object and the Vector3D object specified as the\r\n\t *          parameter.\r\n\t */\r\n\tpublic crossProduct(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Decrements the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of\r\n\t * specified Vector3D object. Unlike the\r\n\t * <code>Vector3D.subtract()</code> method, the\r\n\t * <code>decrementBy()</code> method changes the current Vector3D\r\n\t * object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object containing the values to subtract from\r\n\t *          the current Vector3D object.\r\n\t */\r\n\tpublic decrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x -= a.x;\r\n\t\tthis.y -= a.y;\r\n\t\tthis.z -= a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between two Vector3D objects. The\r\n\t * <code>distance()</code> method is a static method. You can use it\r\n\t * directly as a method of the Vector3D class to get the Euclidean\r\n\t * distance between two three-dimensional points.\r\n\t *\r\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\r\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\r\n\t * @returns The distance between two Vector3D objects.\r\n\t */\r\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\r\n\t{\r\n\t\tvar x:number = (pt1.x - pt2.x);\r\n\t\tvar y:number = (pt1.y - pt2.y);\r\n\t\tvar z:number = (pt1.z - pt2.z);\r\n\t\treturn Math.sqrt(x*x + y*y + z*z);\r\n\t}\r\n\r\n\t/**\r\n\t * If the current Vector3D object and the one specified as the\r\n\t * parameter are unit vertices, this method returns the cosine of the\r\n\t * angle between the two vertices. Unit vertices are vertices that\r\n\t * point to the same direction but their length is one. They remove the\r\n\t * length of the vector as a factor in the result. You can use the\r\n\t * <code>normalize()</code> method to convert a vector to a unit\r\n\t * vector.\r\n\t *\r\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\r\n\t * vertices. It is also used in backface culling or lighting\r\n\t * calculations. Backface culling is a procedure for determining which\r\n\t * surfaces are hidden from the viewpoint. You can use the normalized\r\n\t * vertices from the camera, or eye, viewpoint and the cross product of\r\n\t * the vertices of a polygon surface to get the dot product. If the dot\r\n\t * product is less than zero, then the surface is facing the camera or\r\n\t * the viewer. If the two unit vertices are perpendicular to each\r\n\t * other, they are orthogonal and the dot product is zero. If the two\r\n\t * vertices are parallel to each other, the dot product is one.</p>\r\n\t *\r\n\t * @param a The second Vector3D object.\r\n\t * @returns A scalar which is the dot product of the current Vector3D\r\n\t *          object and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#crossProduct()\r\n\t * @see away.geom.Vector3D#normalize()\r\n\t */\r\n\tpublic dotProduct(a:Vector3D):number\r\n\t{\r\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two Vector3D objects are equal by comparing the\r\n\t * x, y, and z elements of the current Vector3D object with a\r\n\t * specified Vector3D object. If the values of these elements are the\r\n\t * same, the two Vector3D objects are equal. If the second optional\r\n\t * parameter is set to true, all four elements of the Vector3D objects,\r\n\t * including the w property, are compared.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is equal\r\n\t *          to the current Vector3D object; false if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of a\r\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\r\n\t * method, the <code>incrementBy()</code> method changes the current\r\n\t * Vector3D object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object to be added to the current Vector3D\r\n\t *          object.\r\n\t */\r\n\tpublic incrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x += a.x;\r\n\t\tthis.y += a.y;\r\n\t\tthis.z += a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the elements of the current Vector3D object with the\r\n\t * elements of a specified Vector3D object to determine whether they\r\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\r\n\t * value of all the elements of the two vertices are equal, or the\r\n\t * result of the comparison is within the tolerance range. The\r\n\t * difference between two elements must be less than the number\r\n\t * specified as the tolerance parameter. If the third optional\r\n\t * parameter is set to <code>true</code>, all four elements of the\r\n\t * Vector3D objects, including the <code>w</code> property, are\r\n\t * compared. Otherwise, only the x, y, and z elements are included in\r\n\t * the comparison.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param tolerance A number determining the tolerance factor. If the\r\n\t *                  difference between the values of the Vector3D\r\n\t *                  element specified in the toCompare parameter and\r\n\t *                  the current Vector3D element is less than the\r\n\t *                  tolerance number, the two values are considered\r\n\t *                  nearly equal.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is nearly\r\n\t *          equal to the current Vector3D object; false if it is not\r\n\t *          equal.\r\n\t *\r\n\t * @see away.geom.Vector3D#equals()\r\n\t */\r\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\r\n\t{\r\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current Vector3D object to its inverse. The inverse object\r\n\t * is also considered the opposite of the original object. The value of\r\n\t * the x, y, and z properties of the current Vector3D object is changed\r\n\t * to -x, -y, and -z.\r\n\t */\r\n\tpublic negate():void\r\n\t{\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.z = -this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Vector3D object to a unit vector by dividing the first\r\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\r\n\t * are vertices that have a direction but their length is one. They\r\n\t * simplify vector calculations by removing length as a factor.\r\n\t */\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current\r\n\t *                  Vector3D object is (0,3,4), and you normalize it to\r\n\t *                  1, the point returned is at(0,0.6,0.8).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\tthis.z *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\r\n\t * <code>z</code> properties of the current Vector3D object by the\r\n\t * value of its <code>w</code> property.\r\n\t *\r\n\t * <p>If the current Vector3D object is the result of multiplying a\r\n\t * Vector3D object by a projection Matrix3D object, the w property can\r\n\t * hold the transform value. The <code>project()</code> method then can\r\n\t * complete the projection by dividing the elements by the\r\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\r\n\t * property to create a projection Matrix3D object.</p>\r\n\t */\r\n\tpublic project():void\r\n\t{\r\n\t\tthis.x /= this.w;\r\n\t\tthis.y /= this.w;\r\n\t\tthis.z /= this.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\r\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\r\n\t * number specified in the parameter. For example, if the vector is\r\n\t * scaled by ten, the result is a vector that is ten times longer. The\r\n\t * scalar can also change the direction of the vector. Multiplying the\r\n\t * vector by a negative number reverses its direction.\r\n\t *\r\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\r\n\r\n\t */\r\n\tpublic scaleBy(s:number):void\r\n\t{\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\t\tthis.z *= s;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Vector3D to the specified values\r\n\t *\r\n\t * @param xa The first element, such as the x coordinate.\r\n\t * @param ya The second element, such as the y coordinate.\r\n\t * @param za The third element, such as the z coordinate.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the value of the x, y, and z elements of the current\r\n\t * Vector3D object from the values of the x, y, and z elements of\r\n\t * another Vector3D object. The <code>subtract()</code> method does not\r\n\t * change the current Vector3D object. Instead, this method returns a\r\n\t * new Vector3D object with the new values.\r\n\t *\r\n\t * @param a The Vector3D object to be subtracted from the current\r\n\t *          Vector3D object.\r\n\t * @returns A new Vector3D object that is the difference between the\r\n\t *          current Vector3D and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#decrementBy()\r\n\t */\r\n\tpublic subtract(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of the current Vector3D object. The\r\n\t * string contains the values of the x, y, and z properties.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\r\n\t}\r\n}\r\n\r\nexport = Vector3D;","import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\r\n * Its purpose is to create a container for 3D data management, both before and after parsing.\r\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\r\n */\r\nclass AssetLibraryBundle extends EventDispatcher\r\n{\r\n\tpublic static _iInstances:Object = new Object();\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _strategy:ConflictStrategyBase;\r\n\tprivate _strategyPreference:string;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _assetDictionary:Object;\r\n\tprivate _assetDictDirty:boolean;\r\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\r\n\tprivate _gcTimeoutIID:number;\r\n\r\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\r\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>AssetLibraryBundle</code> object.\r\n\t *\r\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\r\n\t\tthis._assetDictionary = new Object();\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\r\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\r\n\r\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\r\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibrary as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\tif (!key)\r\n\t\t\tkey = 'default';\r\n\r\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\r\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\r\n\r\n\t\treturn AssetLibraryBundle._iInstances[key];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParsers(parserClasses:Object[])\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\r\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\r\n\t * is used which means that a numeric suffix is appended to one of the assets. The\r\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\r\n\t * be renamed.\r\n\t *\r\n\t * @see naming.ConflictStrategy\r\n\t * @see AssetLibrary.conflictPrecedence\r\n\t */\r\n\tpublic get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn this._strategy;\r\n\t}\r\n\r\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\r\n\t\tif (!val)\r\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\r\n\r\n\t\tthis._strategy = val.create();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which asset should have precedence when resolving a naming conflict between\r\n\t * two assets of which one has just been renamed by the user or by a parser. By default\r\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\r\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\r\n\t *\r\n\t * This property is ignored for conflict strategies that do not actually rename an\r\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\r\n\t *\r\n\t * @see away.library.ConflictPrecedence\r\n\t * @see away.library.ConflictStrategy\r\n\t */\r\n\tpublic get conflictPrecedence():string\r\n\t{\r\n\t\treturn this._strategyPreference;\r\n\t}\r\n\r\n\tpublic set conflictPrecedence(val:string)\r\n\t{\r\n\t\tthis._strategyPreference = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\r\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\r\n\t * namespace. A \"null\" filter value means no filter of that type is used.\r\n\t *\r\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\r\n\t * null to not filter on asset type.\r\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\r\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\r\n\t * included in the iteration or not. This needs to be a function that takes a single\r\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\r\n\t *\r\n\t * @see away.library.AssetType\r\n\t */\r\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar loader:AssetLoader = new AssetLoader();\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis._loadingSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader.load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from existing data in memory.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar loader:AssetLoader = new AssetLoader();\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis._loadingSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader.loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\t//var asset : IAsset;\r\n\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._assetDictionary[ns][name];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an asset to the asset library, first making sure that it's name is unique\r\n\t * using the method defined by the <code>conflictStrategy</code> and\r\n\t * <code>conflictPrecedence</code> properties.\r\n\t */\r\n\tpublic addAsset(asset:IAsset)\r\n\t{\r\n\t\tvar ns:string;\r\n\t\tvar old:IAsset;\r\n\r\n\t\t// Bail if asset has already been added.\r\n\t\tif (this._assets.indexOf(asset) >= 0)\r\n\t\t\treturn;\r\n\r\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\r\n\t\tns = asset.assetNamespace || NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (old != null)\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\r\n\r\n\t\t//create unique-id (for now this is used in AwayBuilder only\r\n\t\t//asset.id = IDUtil.createUID();\r\n\r\n\t\t// Add it\r\n\t\tthis._assets.push(asset);\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tthis._assetDictionary[ns] = new Object();\r\n\r\n\t\tthis._assetDictionary[ns][asset.name] = asset;\r\n\r\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset from the library, and optionally disposes that asset by calling\r\n\t * it's disposeAsset() method (which for most assets is implemented as a default\r\n\t * version of that type's dispose() method.\r\n\t *\r\n\t * @param asset The asset which should be removed from this library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number;\r\n\r\n\t\tthis.removeAssetFromDict(asset);\r\n\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\r\n\t\tidx = this._assets.indexOf(asset);\r\n\r\n\t\tif (idx >= 0)\r\n\t\t\tthis._assets.splice(idx, 1);\r\n\r\n\t\tif (dispose)\r\n\t\t\tasset.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset which is specified using name and namespace.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\r\n\t\tvar asset:IAsset = this.getAsset(name, ns);\r\n\r\n\t\tif (asset)\r\n\t\t\tthis.removeAsset(asset, dispose);\r\n\r\n\t\treturn asset;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets from the asset library, optionally disposing them as they\r\n\t * are removed.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tif (dispose) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\r\n\t\t\t\tasset = this._assets[ c ];\r\n\t\t\t\tasset.dispose();\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets)\r\n\t\t\t asset.dispose();\r\n\t\t\t */\r\n\t\t}\r\n\r\n\t\tthis._assets.length = 0;\r\n\t\tthis.rehashAssetDict();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets belonging to a particular namespace (null for default)\r\n\t * from the asset library, and optionall disposes them by calling their\r\n\t * disposeAsset() method.\r\n\t *\r\n\t * @param ns The namespace from which all assets should be removed.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number = 0;\r\n\t\tvar asset:IAsset;\r\n\t\tvar old_assets:IAsset[];\r\n\r\n\t\t// Empty the assets vector after having stored a copy of it.\r\n\t\t// The copy will be filled with all assets which weren't removed.\r\n\t\told_assets = this._assets.concat();\r\n\t\tthis._assets.length = 0;\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\r\n\t\t\tasset = old_assets[d];\r\n\r\n\t\t\t// Remove from dict if in the supplied namespace. If not,\r\n\t\t\t// transfer over to the new vector.\r\n\t\t\tif (asset.assetNamespace == ns) {\r\n\t\t\t\tif (dispose)\r\n\t\t\t\t\tasset.dispose();\r\n\r\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\r\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\r\n\t\t\t\t// test that is not needed since we know that the namespace\r\n\t\t\t\t// will be empty when loop finishes.\r\n\t\t\t\tthis.removeAssetFromDict(asset, false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._assets[idx++] = asset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t for each (asset in old_assets) {\r\n\t\t // Remove from dict if in the supplied namespace. If not,\r\n\t\t // transfer over to the new vector.\r\n\t\t if (asset.assetNamespace == ns) {\r\n\t\t if (dispose)\r\n\t\t asset.dispose();\r\n\r\n\t\t // Remove asset from dictionary, but don't try to auto-remove\r\n\t\t // the namespace, which will trigger an unnecessarily expensive\r\n\t\t // test that is not needed since we know that the namespace\r\n\t\t // will be empty when loop finishes.\r\n\t\t removeAssetFromDict(asset, false);\r\n\t\t } else\r\n\t\t _assets[idx++] = asset;\r\n\r\n\t\t }\r\n\t\t */\r\n\r\n\t\t// Remove empty namespace\r\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tdelete this._assetDictionary[ns];\r\n\t}\r\n\r\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\r\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\r\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\r\n\r\n\t\t\tif (autoRemoveEmptyNamespace) {\r\n\r\n\t\t\t\tvar key:string;\r\n\t\t\t\tvar empty:boolean = true;\r\n\r\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (empty)\r\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic stopAllLoadingSessions()\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tvar length:number = this._loadingSessions.length;\r\n\r\n\t\tfor (i = 0; i < length; i++)\r\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\r\n\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\tprivate rehashAssetDict()\r\n\t{\r\n\t\tvar asset:IAsset;\r\n\r\n\t\tthis._assetDictionary = {};\r\n\r\n\t\tvar l:number = this._assets.length;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tasset = this._assets[c];\r\n\r\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\r\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\r\n\r\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\r\n\r\n\t\t}\r\n\r\n\t\tthis._assetDictDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during loading.\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing.\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Only add asset to library the first time.\r\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\r\n\t\t\tthis.addAsset(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\r\n\t\tthis._loadingSessions.splice(index, 1);\r\n\r\n\t\t// Add loader to a garbage array - for a collection sweep and kill\r\n\t\tthis._loadingSessionsGarbage.push(loader);\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\r\n\t}\r\n\r\n\tprivate loadingSessionGC():void\r\n\t{\r\n\t\tvar loader:AssetLoader;\r\n\r\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\r\n\t\t\tloader = this._loadingSessionsGarbage.pop();\r\n\t\t\tthis.killLoadingSession(loader);\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\r\n\t}\r\n\r\n\tprivate killLoadingSession(loader:AssetLoader)\r\n\t{\r\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t\tloader.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when unespected error occurs\r\n\t */\r\n\t/*\r\n\t private onResourceError() : void\r\n\t {\r\n\t var msg:string = \"Unexpected parser error\";\r\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\r\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\r\n\t dispatchEvent(re);\r\n\t } else{\r\n\t throw new Error(msg);\r\n\t }\r\n\t }\r\n\t */\r\n\r\n\tprivate onAssetRename(event:AssetEvent)\r\n\t{\r\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\r\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\r\n\r\n\t\tif (old != null) {\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\r\n\t\t} else {\r\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\r\n\r\n\t\t\tif (dict == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tdict[event.assetPrevName] = null;\r\n\t\t\tdict[event.asset.name] = event.asset;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetConflictResolved(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event.clone());\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryBundle;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass AssetLibraryIterator\r\n{\r\n\r\n\tprivate  _assets:Array<IAsset>;\r\n\tprivate _filtered:Array<IAsset>;\r\n\r\n\tprivate _idx:number;\r\n\r\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tthis._assets = assets;\r\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\tpublic get currentAsset():IAsset\r\n\t{\r\n\t\t// Return current, or null if no current\r\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\r\n\t}\r\n\r\n\tpublic get numAssets():number\r\n\t{\r\n\t\treturn this._filtered.length;\r\n\t}\r\n\r\n\tpublic next():IAsset\r\n\t{\r\n\t\tvar next:IAsset = null;\r\n\r\n\t\tif (this._idx < this._filtered.length)\r\n\t\t\tnext = this._filtered[this._idx];\r\n\r\n\t\tthis._idx++;\r\n\r\n\t\treturn next;\r\n\t}\r\n\r\n\tpublic reset()\r\n\t{\r\n\t\tthis._idx = 0;\r\n\t}\r\n\r\n\tpublic setIndex(index:number)\r\n\t{\r\n\t\tthis._idx = index;\r\n\t}\r\n\r\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tif (assetTypeFilter || namespaceFilter) {\r\n\r\n\t\t\tvar idx:number;\r\n\t\t\tvar asset:IAsset;\r\n\r\n\r\n\t\t\tidx = 0;\r\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\r\n\r\n\t\t\tvar l:number = this._assets.length;\r\n\r\n\t\t\tfor (var c:number = 0; c < l; c++) {\r\n\r\n\t\t\t\tasset = <IAsset> this._assets[c];\r\n\r\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\r\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tthis._filtered[idx++] = asset;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets) {\r\n\t\t\t // Skip this assets if filtering on type and this is wrong type\r\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t if (filterFunc != null && !filterFunc(asset))\r\n\t\t\t continue;\r\n\r\n\t\t\t _filtered[idx++] = asset;\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._filtered = this._assets;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryIterator;","import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\r\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\r\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\r\n */\r\nclass AssetLibrary\r\n{\r\n\t/**\r\n\t * Creates a new <code>AssetLibrary</code> object.\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibraryBundle as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\treturn AssetLibraryBundle.getInstance(key);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParser(parserClass)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictStrategy property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictStrategy\r\n\t */\r\n\tpublic static get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\r\n\t}\r\n\r\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictPrecedence\r\n\t */\r\n\tpublic static get conflictPrecedence():string\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\r\n\t}\r\n\r\n\tpublic static set conflictPrecedence(val:string)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for createIterator() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.createIterator()\r\n\t */\r\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for load() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.load()\r\n\t */\r\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for loadData() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.loadData()\r\n\t */\r\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\r\n\t}\r\n\r\n\tpublic static stopLoad()\r\n\t{\r\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for addEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for hasEventListener() method on default asset library bundle.\r\n\r\n\t public static hasEventListener(type:string):boolean\r\n\t {\r\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\r\n\t}\r\n\r\n\t public static willTrigger(type:string):boolean\r\n\t {\r\n\t\treturn getBundle().willTrigger(type);\r\n\t}\r\n\t */\r\n\r\n\t/**\r\n\t * Short-hand for addAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.addAsset()\r\n\t */\r\n\tpublic static addAsset(asset:IAsset)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addAsset(asset);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAsset() method on default asset library bundle.\r\n\t *\r\n\t * @param asset The asset which should be removed from the library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAsset()\r\n\t */\r\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAssetByName()\r\n\t */\r\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAllAssets()\r\n\t */\r\n\tpublic static removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\r\n\t */\r\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\r\n\t}\r\n}\r\n\r\nexport = AssetLibrary;","class AssetLoaderContext\r\n{\r\n\tpublic static UNDEFINED:number = 0;\r\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\r\n\tpublic static MULTIPASS_MATERIALS:number = 2;\r\n\r\n\tprivate _includeDependencies:boolean;\r\n\tprivate _dependencyBaseUrl:string;\r\n\tprivate _embeddedDataByUrl:Object;\r\n\tprivate _remappedUrls:Object;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _overrideAbsPath:boolean;\r\n\tprivate _overrideFullUrls:boolean;\r\n\r\n\t/**\r\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\r\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\r\n\t * embedded data.\r\n\t *\r\n\t * @see away.loading.AssetLoader\r\n\t */\r\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\r\n\t{\r\n\t\tthis._includeDependencies = includeDependencies;\r\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\r\n\t\tthis._embeddedDataByUrl = {};\r\n\t\tthis._remappedUrls = {};\r\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\r\n\t * parseData() operations) should be automatically loaded. Defaults to true.\r\n\t */\r\n\tpublic get includeDependencies():boolean\r\n\t{\r\n\t\treturn this._includeDependencies;\r\n\t}\r\n\r\n\tpublic set includeDependencies(val:boolean)\r\n\t{\r\n\t\tthis._includeDependencies = val;\r\n\t}\r\n\r\n\t/**\r\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\r\n\t * Options:\r\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\r\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\r\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\r\n\t *\r\n\t */\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic set materialMode(materialMode:number)\r\n\t{\r\n\t\tthis._materialMode = materialMode;\r\n\t}\r\n\r\n\t/**\r\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\r\n\t * Absolute paths will not be affected by the value of this property.\r\n\t */\r\n\tpublic get dependencyBaseUrl():string\r\n\t{\r\n\t\treturn this._dependencyBaseUrl;\r\n\t}\r\n\r\n\tpublic set dependencyBaseUrl(val:string)\r\n\t{\r\n\t\tthis._dependencyBaseUrl = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\r\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\r\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideAbsolutePaths():boolean\r\n\t{\r\n\t\treturn this._overrideAbsPath;\r\n\t}\r\n\r\n\tpublic set overrideAbsolutePaths(val:boolean)\r\n\t{\r\n\t\tthis._overrideAbsPath = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\r\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\r\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideFullURLs():boolean\r\n\t{\r\n\t\treturn this._overrideFullUrls;\r\n\t}\r\n\r\n\tpublic set overrideFullURLs(val:boolean)\r\n\t{\r\n\t\tthis._overrideFullUrls = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\r\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\r\n\t * expected by the loaded file.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param newUrl The URL from which away.should load the resource instead.\r\n\t *\r\n\t * @see mapUrlToData()\r\n\t */\r\n\tpublic mapUrl(originalUrl:string, newUrl:string)\r\n\t{\r\n\t\tthis._remappedUrls[originalUrl] = newUrl;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\r\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\r\n\t */\r\n\tpublic mapUrlToData(originalUrl:string, data:any)\r\n\t{\r\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether embedded data has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasDataForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns embedded data for a particular URL.\r\n\t */\r\n\tpublic _iGetDataForUrl(url:string):any\r\n\t{\r\n\t\treturn this._embeddedDataByUrl[url];\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether a replacement URL has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasMappingForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._remappedUrls.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns new (replacement) URL for a particular original URL.\r\n\t */\r\n\tpublic _iGetRemappedUrl(originalUrl:string):string\r\n\t{\r\n\t\treturn this._remappedUrls[originalUrl];\r\n\t}\r\n}\r\n\r\nexport = AssetLoaderContext;","import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a skybox asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a camera3d asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a mesh asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a geometry asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a skeleton asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a skeleton pose asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a container asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a texture asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a texture projector asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a material asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a animator asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation set has been constructed from a group of animation state resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation state has been constructed from a group of animation node resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation node has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an light asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an light picker asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an effect method asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an shadow map method asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Instances of this class are returned as tokens by loading operations\r\n * to provide an object on which events can be listened for in cases where\r\n * the actual asset loader is not directly available (e.g. when using the\r\n * AssetLibrary to perform the load.)\r\n *\r\n * By listening for events on this class instead of directly on the\r\n * AssetLibrary, one can distinguish different loads from each other.\r\n *\r\n * The token will dispatch all events that the original AssetLoader dispatches,\r\n * while not providing an interface to obstruct the load and is as such a\r\n * safer return value for loader wrappers than the loader itself.\r\n */\r\nclass AssetLoaderToken extends EventDispatcher\r\n{\r\n\tpublic _iLoader:AssetLoader;\r\n\r\n\tconstructor(loader:AssetLoader)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iLoader = loader;\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._iLoader.addEventListener(type, listener);\r\n\t}\r\n\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._iLoader.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\r\n\t{\r\n\t\treturn this._iLoader.hasEventListener(type, listener);\r\n\t}\r\n\r\n\t/*\r\n\t public willTrigger(type:string):boolean\r\n\t {\r\n\t return this._iLoader.willTrigger(type);\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = AssetLoaderToken;","import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport CubeTextureParser\t\t= require(\"awayjs-core/lib/parsers/CubeTextureParser\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Texture2DParser\");\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n/**\r\n * Dispatched when an image asset dimensions are not a power of 2\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\r\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\r\n * and for when the resource (or it's dependencies) have been loaded.\r\n *\r\n * The AssetLoader will not make assets available in any other way than through the dispatched\r\n * events. To store assets and make them available at any point from any module in an application,\r\n * use the AssetLibrary to load and manage assets.\r\n *\r\n * @see away.library.AssetLibrary\r\n */\r\nclass AssetLoader extends EventDispatcher\r\n{\r\n\tprivate _context:AssetLoaderContext;\r\n\tprivate _token:AssetLoaderToken;\r\n\tprivate _uri:string;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _errorHandlers:Array<Function>;\r\n\tprivate _parseErrorHandlers:Array<Function>;\r\n\r\n\tprivate _stack:Array<ResourceDependency>;\r\n\tprivate _baseDependency:ResourceDependency;\r\n\tprivate _currentDependency:ResourceDependency;\r\n\tprivate _namespace:string;\r\n\r\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\r\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\r\n\t// Image parser only parser that is added by default, to save file size.\r\n\tprivate static _parsers:Array<any> = new Array<any>(Texture2DParser, CubeTextureParser);\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parser The parser class to enable.\r\n\t *\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parser)\r\n\t{\r\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\r\n\t\t\tAssetLoader._parsers.push(parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * AssetLoader can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parsers A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parsers:Array<Object>)\r\n\t{\r\n\t\tfor (var c:number = 0; c < parsers.length; c++)\r\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the base dependency of the loader\r\n\t */\r\n\tpublic get baseDependency():ResourceDependency\r\n\t{\r\n\t\treturn this._baseDependency;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new ResourceLoadSession object.\r\n\t */\r\n\tconstructor(materialMode:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = materialMode;\r\n\r\n\t\tthis._stack = new Array<ResourceDependency>();\r\n\t\tthis._errorHandlers = new Array<Function>();\r\n\t\tthis._parseErrorHandlers = new Array<Function>();\r\n\r\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\r\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tif (!this._token) {\r\n\t\t\tthis._token = new AssetLoaderToken(this);\r\n\r\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\r\n\t\t\tthis._context = context;\r\n\t\t\tthis._namespace = ns;\r\n\r\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\r\n\t\t\tthis.retrieveDependency(this._baseDependency);\r\n\r\n\t\t\treturn this._token;\r\n\t\t}\r\n\r\n\t\t// TODO: Throw error (already loading)\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from already loaded data.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tif (!this._token) {\r\n\t\t\tthis._token = new AssetLoaderToken(this);\r\n\r\n\t\t\tthis._uri = id;\r\n\t\t\tthis._context = context;\r\n\t\t\tthis._namespace = ns;\r\n\r\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\r\n\t\t\tthis.retrieveDependency(this._baseDependency);\r\n\r\n\t\t\treturn this._token;\r\n\t\t}\r\n\r\n\t\t// TODO: Throw error (already loading)\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\r\n\t * stack when complete and continues on the top set.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveNext(parser:ParserBase = null)\r\n\t{\r\n\t\tif (this._currentDependency.dependencies.length) {\r\n\r\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\r\n\r\n\t\t\tthis._stack.push(this._currentDependency);\r\n\t\t\tthis.retrieveDependency(next);\r\n\r\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\r\n\r\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\r\n\t\t\tthis._stack.pop();\r\n\r\n\t\t} else if (this._stack.length) {\r\n\r\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\r\n\r\n\t\t\tthis._currentDependency = this._stack.pop();\r\n\r\n\t\t\tif (prev._iSuccess)\r\n\t\t\t\tprev.resolve();\r\n\r\n\t\t\tthis.retrieveNext(parser);\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a single dependency.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveDependency(dependency:ResourceDependency)\r\n\t{\r\n\t\tvar data:any;\r\n\r\n\t\tif (this._context && this._context.materialMode != 0)\r\n\t\t\tthis._materialMode = this._context.materialMode;\r\n\r\n\t\tthis._currentDependency = dependency;\r\n\r\n\t\tdependency._iLoader = new URLLoader();\r\n\r\n\t\tthis.addEventListeners(dependency._iLoader);\r\n\r\n\t\t// Get already loaded (or mapped) data if available\r\n\t\tdata = dependency.data;\r\n\r\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\r\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\r\n\r\n\t\tif (data) {\r\n\t\t\tif (data.constructor === Function)\r\n\t\t\t\tdata = new data();\r\n\r\n\t\t\tdependency._iSetData(data);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// No need to parse. The parent parser is expecting this\r\n\t\t\t\t// to be raw data so it can be passed directly.\r\n\t\t\t\tdependency.resolve();\r\n\r\n\t\t\t\t// Move on to next dependency\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseDependency(dependency);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// Resolve URL and start loading\r\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// Always use binary for raw data loading\r\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!dependency.parser)\r\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\r\n\r\n\t\t\t\tif (dependency.parser) {\r\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\r\n\t\t\t\t\t// file type check will determine format after load, and if\r\n\t\t\t\t\t// binary, a text load will have broken the file data.\r\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdependency._iLoader.load(dependency.request);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate joinUrl(base:string, end:string):string\r\n\t{\r\n\t\tif (end.charAt(0) == '/')\r\n\t\t\tend = end.substr(1);\r\n\r\n\t\tif (base.length == 0)\r\n\t\t\treturn end;\r\n\r\n\t\tif (base.charAt(base.length - 1) == '/')\r\n\t\t\tbase = base.substr(0, base.length - 1);\r\n\r\n\t\treturn base.concat('/', end);\r\n\r\n\t}\r\n\r\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\r\n\t{\r\n\t\tvar scheme_re:RegExp;\r\n\t\tvar base:string;\r\n\t\tvar url:string = dependency.request.url;\r\n\r\n\t\t// Has the user re-mapped this URL?\r\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\r\n\t\t\treturn this._context._iGetRemappedUrl(url);\r\n\r\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\r\n\t\t// We will not try to resolve this since the user can probably be\r\n\t\t// thrusted to know this URL better than our automatic resolver. :)\r\n\t\tif (url == this._uri)\r\n\t\t\treturn url;\r\n\r\n\r\n\t\t// Absolute URL? Check if starts with slash or a URL\r\n\t\t// scheme definition (e.g. ftp://, http://, file://)\r\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\r\n\r\n\t\tif (url.charAt(0) == '/') {\r\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\r\n\t\t\t\treturn url;\r\n\t\t} else if (scheme_re.test(url)) {\r\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\r\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\r\n\t\t\tif (this._context && this._context.overrideFullURLs) {\r\n\r\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Since not absolute, just get rid of base file name to find it's\r\n\t\t// folder and then concatenate dynamic URL\r\n\t\tif (this._context && this._context.dependencyBaseUrl) {\r\n\t\t\tbase = this._context.dependencyBaseUrl;\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t} else {\r\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate retrieveParserDependencies()\r\n\t{\r\n\t\tif (!this._currentDependency)\r\n\t\t\treturn;\r\n\r\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\r\n\t\tvar i:number, len:number = parserDependancies.length;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\r\n\r\n\r\n\t\t// Since more dependencies might be added eventually, empty this\r\n\t\t// list so that the same dependency isn't retrieved more than once.\r\n\t\tparserDependancies.length = 0;\r\n\r\n\t\tthis._stack.push(this._currentDependency);\r\n\r\n\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\tprivate resolveParserDependencies()\r\n\t{\r\n\t\tthis._currentDependency._iSuccess = true;\r\n\r\n\t\t// Retrieve any last dependencies remaining on this parser, or\r\n\t\t// if none exists, just move on.\r\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\r\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\r\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\r\n\r\n\t\t\t\tthis._currentDependency.resolveFailure();\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// Either this was the base file (last left in the stack) or\r\n\t\t\t\t// default behavior was prevented by the handlers, and hence\r\n\t\t\t\t// there is nothing more to do than clean up and bail.\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\r\n\t * @param event\r\n\t */\r\n\tprivate onParseError(event:ParserEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\r\n\t\tvar loader:URLLoader = <URLLoader>event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\r\n\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\t\t\tthis.dispose();\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error(event.message);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Add loaded asset to list of assets retrieved as part\r\n\t\t// of the current dependency. This list will be inspected\r\n\t\t// by the parent parser when dependency is resolved\r\n\t\tif (this._currentDependency)\r\n\t\t\tthis._currentDependency.assets.push(event.asset);\r\n\r\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\r\n\r\n\t\tif (!this._currentDependency.suppresAssetEvents)\r\n\t\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate onReadyForDependencies(event:ParserEvent)\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tif (this._context && !this._context.includeDependencies)\r\n\t\t\tparser._iResumeParsingAfterDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\t// Resolve this dependency\r\n\t\tthis._currentDependency._iSetData(loader.data);\r\n\r\n\t\tif (this._currentDependency.retrieveAsRawData) {\r\n\t\t\t// No need to parse this data, which should be returned as is\r\n\t\t\tthis.resolveParserDependencies();\r\n\t\t} else {\r\n\t\t\tthis.parseDependency(this._currentDependency);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when parsing is complete.\r\n\t */\r\n\tprivate onParseComplete(event:ParserEvent):void\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\r\n\r\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an image is too large or it's dimensions are not a power of 2\r\n\t * @param event\r\n\t */\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate addEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tprivate removeEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tpublic stop()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\tprivate dispose()\r\n\t{\r\n\t\tthis._errorHandlers = null;\r\n\t\tthis._parseErrorHandlers = null;\r\n\t\tthis._context = null;\r\n\t\tthis._token = null;\r\n\t\tthis._stack = null;\r\n\r\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\r\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\r\n\r\n\t\tthis._currentDependency = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\r\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\r\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\r\n\t * that if hasEventListener() returns true, it's client code that's listening for the\r\n\t * event. Secondly, functions added as error handler through this custom method are\r\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\r\n\t * whether they in turn had any client code listening for the event.) If no handlers\r\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\r\n\t */\r\n\r\n\tpublic _iAddParseErrorHandler(handler)\r\n\t{\r\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._parseErrorHandlers.push(handler);\r\n\t}\r\n\r\n\tpublic _iAddErrorHandler(handler)\r\n\t{\r\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._errorHandlers.push(handler);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file contents.\r\n\t * @param data The data to be parsed.\r\n\t * @param uri The url or id of the object to be parsed.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromData(data:any):ParserBase\r\n\t{\r\n\t\tvar len:number = AssetLoader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--)\r\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\r\n\t\t\t\treturn new AssetLoader._parsers[i]();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initiates parsing of the loaded dependency.\r\n\t *\r\n\t * @param The dependency to be parsed.\r\n\t */\r\n\tprivate parseDependency(dependency:ResourceDependency):void\r\n\t{\r\n\t\tvar parser:ParserBase = dependency.parser;\r\n\r\n\t\t// If no parser has been defined, try to find one by letting\r\n\t\t// all plugged in parsers inspect the actual data.\r\n\t\tif (!parser)\r\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\r\n\r\n\t\tif (parser) {\r\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t\tif (dependency.request && dependency.request.url)\r\n\t\t\t\tparser._iFileName = dependency.request.url;\r\n\r\n\t\t\tparser.materialMode = this._materialMode;\r\n\r\n\t\t\tparser.parseAsync(dependency.data);\r\n\r\n\t\t} else {\r\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\r\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\r\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file extension.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromSuffix(url:string):ParserBase\r\n\t{\r\n\t\t// Get rid of query string if any and extract extension\r\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\r\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\r\n\r\n\t\tvar len:number = AssetLoader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\r\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\r\n\t\t\tif (parserClass.supportsType(fileExtension))\r\n\t\t\t\treturn new parserClass();\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport = AssetLoader;","class AssetType\r\n{\r\n\tpublic static ANIMATION_NODE:string = 'animationNode';\r\n\tpublic static ANIMATION_SET:string = 'animationSet';\r\n\tpublic static ANIMATION_STATE:string = 'animationState';\r\n\tpublic static ANIMATOR:string = 'animator';\r\n\tpublic static BILLBOARD:string = 'billboard';\r\n\tpublic static CAMERA:string = 'camera';\r\n\tpublic static CONTAINER:string = 'container';\r\n\tpublic static EFFECTS_METHOD:string = 'effectsMethod';\r\n\tpublic static GEOMETRY:string = 'geometry';\r\n\tpublic static LINE_SEGMENT:string = 'lineSegment';\r\n\tpublic static LIGHT:string = 'light';\r\n\tpublic static LIGHT_PICKER:string = 'lightPicker';\r\n\tpublic static MATERIAL:string = 'material';\r\n\tpublic static MESH:string = 'mesh';\r\n\tpublic static TRIANGLE_SUB_MESH:string = 'triangleSubMesh';\r\n    public static CURVE_SUB_MESH:string = 'curveSubMesh';\r\n\tpublic static LINE_SUB_MESH:string = 'lineSubMesh';\r\n\tpublic static PRIMITIVE_PREFAB:string = 'primitivePrefab';\r\n\tpublic static SHADOW_MAP_METHOD:string = 'shadowMapMethod';\r\n\tpublic static SKELETON:string = 'skeleton';\r\n\tpublic static SKELETON_POSE:string = 'skeletonPose';\r\n\tpublic static SKYBOX:string = 'skybox';\r\n\tpublic static STATE_TRANSITION:string = 'stateTransition';\r\n\tpublic static TEXTURE:string = 'texture';\r\n\tpublic static TEXTURE_PROJECTOR:string = 'textureProjector';\r\n\tpublic static TIMELINE:string = 'timeline';\r\n}\r\n\r\nexport = AssetType;","/**\r\n * Enumaration class for precedence when resolving naming conflicts in the library.\r\n *\r\n * @see away.library.AssetLibrary.conflictPrecedence\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategy\r\n */\r\nclass ConflictPrecedence\r\n{\r\n\t/**\r\n\t * Signals that in a conflict, the previous owner of the conflicting name\r\n\t * should be favored (and keep it's name) and that the newly renamed asset\r\n\t * is reverted to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_OLD:string = 'favorOld';\r\n\r\n\t/**\r\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\r\n\t * it's newly defined name) and that the previous owner of that name gets\r\n\t * renamed to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_NEW:string = 'favorNew';\r\n}\r\n\r\nexport = ConflictPrecedence;","import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\n\r\n/**\r\n * Abstract base class for naming conflict resolution classes. Extend this to create a\r\n * strategy class which the asset library can use to resolve asset naming conflicts, or\r\n * use one of the bundled concrete strategy classes:\r\n *\r\n * <ul>\r\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\r\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\r\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\r\n * </ul>\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.ConflictStrategy\r\n * @see away.library.IgnoreConflictStrategy\r\n * @see away.library.ErrorConflictStrategy\r\n * @see away.library.NumSuffixConflictStrategy\r\n */\r\nclass ConflictStrategyBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\r\n\t * classes.\r\n\t */\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\r\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\r\n\t * would break any state caching that happens inside the strategy class.\r\n\t */\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\r\n\t * the conflict resolution by applying the new names and dispatching the correct events.\r\n\t */\r\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar loser_prev_name:string;\r\n\t\tvar winner:IAsset;\r\n\t\tvar loser:IAsset;\r\n\r\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\r\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\r\n\r\n\t\tloser_prev_name = loser.name;\r\n\r\n\t\tassetsDictionary[winner.name] = winner;\r\n\t\tassetsDictionary[nonConflictingName] = loser;\r\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\r\n\r\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategyBase;","import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\r\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\r\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\r\n\r\n/**\r\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\r\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\r\n * property on an AssetLibrary to define how that library resolves naming conflicts.\r\n *\r\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\r\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategyBase\r\n */\r\nclass ConflictStrategy\r\n{\r\n\t/**\r\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\r\n\t * a numeric suffix appended to the base name.\r\n\t */\r\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\r\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\r\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\r\n\t */\r\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\r\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\r\n\t * to have the library automatically rename assets to avoid such conflicts.\r\n\t */\r\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\r\n\r\n\tconstructor(include?:ConflictStrategyBase)\r\n\t{\r\n\t\t//TODO: find out why typescript d.ts files do not include this class\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategy;","import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass ErrorConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new ErrorConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = ErrorConflictStrategy;","class IDUtil\r\n{\r\n\t/**\r\n\t *  @private\r\n\t *  Char codes for 0123456789ABCDEF\r\n\t */\r\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\r\n\r\n\t/**\r\n\t *  Generates a UID (unique identifier) based on ActionScript's\r\n\t *  pseudo-random number generator and the current time.\r\n\t *\r\n\t *  <p>The UID has the form\r\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\r\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\r\n\t *\r\n\t *  <p>This UID will not be truly globally unique; but it is the best\r\n\t *  we can do without player support for UID generation.</p>\r\n\t *\r\n\t *  @return The newly-generated UID.\r\n\t *\r\n\t *  @langversion 3.0\r\n\t *  @playerversion Flash 9\r\n\t *  @playerversion AIR 1.1\r\n\t *  @productversion Flex 3\r\n\t */\r\n\tpublic static createUID():string\r\n\t{\r\n\t\tvar uid = new Array(36);\r\n\t\tvar index:number = 0;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\t\tfor (j = 0; j < 4; j++)\r\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\t\t}\r\n\r\n\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\tvar time:number = new Date().getTime();\r\n\t\t// Note: time is the number of milliseconds since 1970,\r\n\t\t// which is currently more than one trillion.\r\n\t\t// We use the low 8 hex digits of this number in the UID.\r\n\t\t// Just in case the system clock has been reset to\r\n\t\t// Jan 1-4, 1970 (in which case this number could have only\r\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\r\n\t\t// before taking the low digits.\r\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = timeString.charCodeAt(i);\r\n\r\n\t\tfor (i = 0; i < 4; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\treturn String.fromCharCode.apply(null, uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the decimal representation of a hex digit.\r\n\t * @private\r\n\r\n\t private static getDigit(hex:string):number\r\n\t {\r\n\t\tswitch (hex) {\r\n\t\t\tcase \"A\":\r\n\t\t\tcase \"a\":\r\n\t\t\t\treturn 10;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"b\":\r\n\t\t\t\treturn 11;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"c\":\r\n\t\t\t\treturn 12;\r\n\t\t\tcase \"D\":\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn 13;\r\n\t\t\tcase \"E\":\r\n\t\t\tcase \"e\":\r\n\t\t\t\treturn 14;\r\n\t\t\tcase \"F\":\r\n\t\t\tcase \"f\":\r\n\t\t\t\treturn 15;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new uint(hex);\r\n\t\t}\r\n\t}\r\n\t */\r\n\r\n}\r\n\r\nexport = IDUtil;","import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass IgnoreConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\t// Do nothing, ignore the fact that there is a conflict.\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new IgnoreConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = IgnoreConflictStrategy;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nclass NamedAssetBase extends EventDispatcher\r\n{\r\n\tpublic static ID_COUNT:number = 0;\r\n\r\n\tprivate _originalName:string;\r\n\tprivate _namespace:string;\r\n\tprivate _name:string;\r\n\tprivate _id:number;\r\n\tprivate _full_path:Array<string>;\r\n\r\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\r\n\r\n\tconstructor(name:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._id = NamedAssetBase.ID_COUNT++;\r\n\r\n\t\tif (name == null)\r\n\t\t\tname = 'null';\r\n\r\n\t\tthis._name = name;\r\n\t\tthis._originalName = name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * The original name used for this asset in the resource (e.g. file) in which\r\n\t * it was found. This may not be the same as <code>name</code>, which may\r\n\t * have changed due to of a name conflict.\r\n\t */\r\n\tpublic get originalName():string\r\n\t{\r\n\t\treturn this._originalName;\r\n\t}\r\n\r\n\t/**\r\n\t * A unique id for the asset, used to identify assets in an associative array\r\n\t */\r\n\tpublic get id():number\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic get name():string\r\n\t{\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set name(val:string)\r\n\t{\r\n\t\tvar prev:string;\r\n\r\n\t\tprev = this._name;\r\n\t\tthis._name = val;\r\n\r\n\t\tif (this._name == null)\r\n\t\t\tthis._name = 'null';\r\n\r\n\t\tthis.updateFullPath();\r\n\r\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get assetNamespace():string\r\n\t{\r\n\t\treturn this._namespace;\r\n\t}\r\n\r\n\tpublic get assetFullPath():Array<string>\r\n\t{\r\n\t\treturn this._full_path;\r\n\t}\r\n\r\n\tpublic assetPathEquals(name:string, ns:string):boolean\r\n\t{\r\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\r\n\t}\r\n\r\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\r\n\t{\r\n\r\n\t\tthis._name = name? name : 'null';\r\n\t\tthis._namespace = ns? ns : NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (overrideOriginal)\r\n\t\t\tthis._originalName = this._name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\tprivate updateFullPath():void\r\n\t{\r\n\t\tthis._full_path = [ this._namespace, this._name ];\r\n\t}\r\n}\r\n\r\nexport = NamedAssetBase;","import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tprivate _separator:string;\r\n\tprivate _next_suffix:Object;\r\n\r\n\tconstructor(separator:string = '.')\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._separator = separator;\r\n\t\tthis._next_suffix = {};\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar orig:string;\r\n\t\tvar new_name:string;\r\n\t\tvar base:string;\r\n\t\tvar suffix:number;\r\n\r\n\t\torig = changedAsset.name;\r\n\r\n\t\tif (orig.indexOf(this._separator) >= 0) {\r\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\r\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\r\n\t\t\t// use entire name as base\r\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\r\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\r\n\r\n\t\t\tif (isNaN(suffix)) {\r\n\t\t\t\tbase = orig;\r\n\t\t\t\tsuffix = 0;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tbase = orig;\r\n\t\t\tsuffix = 0;\r\n\t\t}\r\n\r\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\r\n\r\n\t\t\tsuffix = this._next_suffix[base];\r\n\r\n\t\t}\r\n\r\n\t\t// Find the first suffixed name that does\r\n\t\t// not collide with other names.\r\n\t\tdo {\r\n\r\n\t\t\tsuffix++;\r\n\r\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\r\n\r\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\r\n\r\n\t\tthis._next_suffix[ base ] = suffix;\r\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\r\n\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new NumSuffixConflictStrategy(this._separator);\r\n\t}\r\n}\r\n\r\nexport = NumSuffixConflictStrategy;","class CrossDomainPolicy\r\n{\r\n\tpublic static ANONYMOUS:string = 'anonymous';\r\n\r\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\r\n}\r\n\r\nexport = CrossDomainPolicy;\r\n","class URLLoaderDataFormat\r\n{\r\n\t/**\r\n\t * TEXT\r\n\t * @type {string}\r\n\t */\r\n\tpublic static TEXT:string = \"text\";\r\n\r\n\t/**\r\n\t * Variables / Value Pairs\r\n\t * @type {string}\r\n\t */\r\n\tpublic static VARIABLES:string = \"variables\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BLOB:string = \"blob\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n}\r\n\r\nexport = URLLoaderDataFormat;","import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\r\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\r\n\r\n/**\r\n * The URLLoader is used to load a single file, as part of a resource.\r\n *\r\n * While URLLoader can be used directly, e.g. to create a third-party asset\r\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\r\n * and AssetLibrary instead in most cases.\r\n *\r\n * @see AssetLoader\r\n * @see away.library.AssetLibrary\r\n */\r\nclass URLLoader extends EventDispatcher\r\n{\r\n\tprivate _XHR:XMLHttpRequest;\r\n\tprivate _bytesLoaded:number = 0;\r\n\tprivate _bytesTotal:number = 0;\r\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\r\n\tprivate _loadError:boolean = false;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _data:any;\r\n\r\n\tprivate _loadStartEvent:AwayEvent;\r\n\tprivate _loadErrorEvent:IOErrorEvent;\r\n\tprivate _loadCompleteEvent:AwayEvent;\r\n\tprivate _progressEvent:AwayProgressEvent;\r\n\r\n\t/**\r\n\t * Creates a new URLLoader object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\r\n\t\treturn this._request? this._request.url : '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * URLLoaderDataFormat.BINARY\r\n\t * URLLoaderDataFormat.TEXT\r\n\t * URLLoaderDataFormat.VARIABLES\r\n\t *\r\n\t * @param format\r\n\t */\r\n\tpublic set dataFormat(format:string)\r\n\t{\r\n\t\tthis._dataFormat = format;\r\n\t}\r\n\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesLoaded():number\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesTotal():number\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * Load a resource from a file.\r\n\t *\r\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\r\n\t */\r\n\tpublic load(request:URLRequest):void\r\n\t{\r\n\t\tthis._request = request;\r\n\r\n\t\tthis.initXHR();\r\n\r\n\t\tif (request.method === URLRequestMethod.POST)\r\n\t\t\tthis.postRequest(request);\r\n\t\telse\r\n\t\t\tthis.getRequest(request);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic close():void\r\n\t{\r\n\t\tthis._XHR.abort();\r\n\t\tthis.disposeXHR();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (this._XHR)\r\n\t\t\tthis._XHR.abort();\r\n\r\n\t\tthis.disposeXHR();\r\n\r\n\t\tthis._data = null;\r\n\t\tthis._dataFormat = null;\r\n\t\tthis._bytesLoaded = null;\r\n\t\tthis._bytesTotal = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param xhr\r\n\t * @param responseType\r\n\t */\r\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\r\n\t{\r\n\t\tswitch (responseType) {\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\txhr.responseType = responseType;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\txhr.responseType = '';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate getRequest(request:URLRequest):void\r\n\t{\r\n\t\ttry {\r\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate postRequest(request:URLRequest):void\r\n\t{\r\n\t\tthis._loadError = false;\r\n\r\n\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\r\n\t\tif (request.data != null) {\r\n\t\t\tif (request.data instanceof URLVariables) {\r\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._XHR.responseType = 'text';\r\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\r\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\r\n\t\t\t\tif (request.data)\r\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._XHR.send(); // no data to send\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param error {XMLHttpRequestException}\r\n\t */\r\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\r\n\t{\r\n\t\tswitch (error.code) {\r\n\r\n\t\t/******************************************************************************************************************************************************************************************************\r\n\t\t *\r\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\r\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\r\n\t\t *\r\n\t\t ******************************************************************************************************************************************************************************************************/\r\n\r\n\t\t\tcase 101:\r\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initXHR()\r\n\t{\r\n\t\tif (!this._XHR) {\r\n\t\t\tthis._XHR = new XMLHttpRequest();\r\n\r\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\r\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\r\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\r\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\r\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\r\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\r\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate disposeXHR()\r\n\t{\r\n\t\tif (this._XHR !== null) {\r\n\t\t\tthis._XHR.onloadstart = null;\r\n\t\t\tthis._XHR.onprogress = null;\r\n\t\t\tthis._XHR.onabort = null;\r\n\t\t\tthis._XHR.onerror = null;\r\n\t\t\tthis._XHR.onload = null;\r\n\t\t\tthis._XHR.ontimeout = null;\r\n\t\t\tthis._XHR.onloadend = null;\r\n\t\t\tthis._XHR = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decodeURLVariables(source:string):Object\r\n\t{\r\n\t\tvar result:Object = new Object();\r\n\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// XMLHttpRequest - Event Handlers\r\n\r\n\t/**\r\n\t * When XHR state changes\r\n\t * @param event\r\n\t */\r\n\tprivate onReadyStateChange(event:Event)\r\n\t{\r\n\t\tif (this._XHR.readyState == 4) {\r\n\t\t\tif (this._XHR.status == 404) {\r\n\t\t\t\tthis._loadError = true;\r\n\r\n\t\t\t\tif (!this._loadErrorEvent)\r\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has completed, regardless of whether or not it was successful.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadEnd(event:ProgressEvent)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * When the author specified timeout has passed before the request could complete.\r\n\t * @param event\r\n\t */\r\n\tprivate onTimeOut(event:Event)\r\n\t{\r\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t * @param event\r\n\t */\r\n\tprivate onAbort(event:UIEvent)\r\n\t{\r\n\t\t// TODO: investigate whether this needs to be an IOError\r\n\t}\r\n\r\n\t/**\r\n\t * While loading and sending data.\r\n\t * @param event\r\n\t */\r\n\tprivate onProgress(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._progressEvent)\r\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\r\n\r\n\t\tthis._progressEvent.bytesTotal = event.total;\r\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\r\n\r\n\t\tthis.dispatchEvent(this._progressEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request starts.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadStart(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._loadStartEvent)\r\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\r\n\r\n\t\tthis.dispatchEvent(this._loadStartEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has successfully completed.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (this._dataFormat) {\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\tthis._data = this._XHR.response;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!this._loadCompleteEvent)\r\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\r\n\r\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has failed. ( due to network issues ).\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:Event)\r\n\t{\r\n\t\tthis._loadError = true;\r\n\r\n\t\tif (!this._loadErrorEvent)\r\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t}\r\n}\r\n\r\nexport = URLLoader;","class URLRequestMethod\r\n{\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static POST:string = 'POST';\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static GET:string = 'GET';\r\n}\r\n\r\nexport = URLRequestMethod;","import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\n\r\nclass URLRequest\r\n{\r\n\t/*\r\n\t * The MIME content type of the content in the the data property.\r\n\t * @type {string}\r\n\t */\r\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\r\n\r\n\t/**\r\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\r\n\t *\r\n\t */\r\n\tpublic data:any;\r\n\r\n\t/**\r\n\t *\r\n\t * away.net.URLRequestMethod.GET\r\n\t * away.net.URLRequestMethod.POST\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic method:string = URLRequestMethod.GET;\r\n\r\n\t/**\r\n\t * Use asynchronous XMLHttpRequest\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic async:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _url:string;\r\n\r\n\t/**\r\n\r\n\t * @param url\r\n\t */\r\n\tconstructor(url:string = null)\r\n\t{\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set url(value:string)\r\n\t{\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * dispose\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.data = null;\r\n\t\tthis._url = null;\r\n\t}\r\n}\r\n\r\nexport = URLRequest;","class URLVariables\r\n{\r\n\tprivate _variables:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tconstructor(source:string = null)\r\n\t{\r\n\t\tif (source !== null)\r\n\t\t\tthis.decode(source);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decode(source:string):void\r\n\t{\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get variables():Object\r\n\t{\r\n\t\treturn this._variables;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get formData():FormData\r\n\t{\r\n\t\tvar fd:FormData = new FormData();\r\n\r\n\t\tfor (var s in this._variables)\r\n\t\t\tfd.append(s, this._variables[s]);\r\n\r\n\t\treturn fd;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic set variables(obj:Object)\r\n\t{\r\n\t\tthis._variables = obj;\r\n\t}\r\n}\r\n\r\nexport = URLVariables;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ImageCubeTexture\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\n\r\n/**\r\n * CubeTextureParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass CubeTextureParser extends ParserBase\r\n{\r\n\tprivate static posX:string = 'posX';\r\n\tprivate static negX:string = 'negX';\r\n\tprivate static posY:string = 'posY';\r\n\tprivate static negY:string = 'negY';\r\n\tprivate static posZ:string = 'posZ';\r\n\tprivate static negZ:string = 'negZ';\r\n\r\n\tprivate _imgDependencyDictionary:Object;\r\n\r\n\t/**\r\n\t * Creates a new CubeTextureParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"cube\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar obj = JSON.parse(data);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\r\n\t\t\tvar asset:ImageCubeTexture = new ImageCubeTexture(\r\n\r\n\t\t\t\tthis._getHTMLImageElement(CubeTextureParser.posX), this._getHTMLImageElement(CubeTextureParser.negX), this._getHTMLImageElement(CubeTextureParser.posY), this._getHTMLImageElement(CubeTextureParser.negY), this._getHTMLImageElement(CubeTextureParser.posZ), this._getHTMLImageElement(CubeTextureParser.negZ));\r\n\r\n\t\t\t//clear dictionary\r\n\t\t\tthis._imgDependencyDictionary = null;\r\n\r\n\t\t\tasset.name = this._iFileName;\r\n\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar json:any = JSON.parse(this.data);\r\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\r\n\t\t\tvar rec:any;\r\n\r\n\t\t\tif (data.length != 6)\r\n\t\t\t\tthis._pDieWithError('CubeTextureParser: Error - cube texture should have exactly 6 images');\r\n\r\n\t\t\tif (json) {\r\n\t\t\t\tthis._imgDependencyDictionary = new Object();\r\n\r\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\r\n\t\t\t\t\trec = data[c];\r\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._validateCubeData()) {\r\n\r\n\t\t\t\t\tthis._pDieWithError(\"CubeTextureParser: JSON data error - cubes require id of:   \\n\" + CubeTextureParser.posX + ', ' + CubeTextureParser.negX + ',  \\n' + CubeTextureParser.posY + ', ' + CubeTextureParser.negY + ',  \\n' + CubeTextureParser.posZ + ', ' + CubeTextureParser.negZ);\r\n\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tprivate _validateCubeData():boolean\r\n\t{\r\n\t\treturn  ( this._imgDependencyDictionary[ CubeTextureParser.posX ] != null && this._imgDependencyDictionary[ CubeTextureParser.negX ] != null && this._imgDependencyDictionary[ CubeTextureParser.posY ] != null && this._imgDependencyDictionary[ CubeTextureParser.negY ] != null && this._imgDependencyDictionary[ CubeTextureParser.posZ ] != null && this._imgDependencyDictionary[ CubeTextureParser.negZ ] != null );\r\n\t}\r\n\r\n\tprivate _getHTMLImageElement(name:string):HTMLImageElement\r\n\t{\r\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\r\n\r\n\t\tif (dependency) {\r\n\t\t\treturn <HTMLImageElement> (<ImageTexture> dependency.assets[0]).htmlImageElement;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\nexport = CubeTextureParser;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\r\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\n/**\r\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\r\n * supported by away.\r\n *\r\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\r\n * be implemented, with the following signatures:\r\n *\r\n * <code>public static supportsType(extension : string) : boolean</code>\r\n * Indicates whether or not a given file extension is supported by the parser.\r\n *\r\n * <code>public static supportsData(data : *) : boolean</code>\r\n * Tests whether a data block can be parsed by the parser.\r\n *\r\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\r\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\r\n * handle regardless of whether the object was loaded or not.\r\n *\r\n * @see AssetLoader\r\n */\r\nclass ParserBase extends EventDispatcher\r\n{\r\n\tpublic _iFileName:string;\r\n\tprivate _dataFormat:string;\r\n\tprivate _data:any;\r\n\tprivate _frameLimit:number;\r\n\tprivate _lastFrameTime:number;\r\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\r\n\tpublic _pContent:IAsset;\r\n\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Needs to be implemented in all Parsers (\r\n\t//<code>public static supportsType(extension : string) : boolean</code>\r\n\t//* Indicates whether or not a given file extension is supported by the parser.\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/* TODO: Implement ParserUtils;\r\n\t public _pGetTextData():string\r\n\t {\r\n\t return ParserUtils.toString(_data);\r\n\t }\r\n\r\n\t public _pGetByteData():ByteArray\r\n\t {\r\n\t return ParserUtils.toByteArray(_data);\r\n\t }\r\n\t */\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\tprivate _parsingPaused:boolean;\r\n\tprivate _parsingComplete:boolean;\r\n\tprivate _parsingFailure:boolean;\r\n\tprivate _timer:Timer;\r\n\tprivate _materialMode:number;\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\r\n\t */\r\n\tpublic static PARSING_DONE:boolean = true;\r\n\t/* Protected */\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\r\n\t */\r\n\tpublic static MORE_TO_PARSE:boolean = false;\r\n\t/* Protected */\r\n\r\n\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._pContent;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new ParserBase object\r\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\r\n\t *\r\n\t * @see away.loading.parsers.ParserDataFormat\r\n\t */\r\n\tconstructor(format:string)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = 0;\r\n\t\tthis._dataFormat = format;\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\r\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\r\n\t */\r\n\r\n\tpublic isBitmapDataValid(bitmapData:BitmapData):boolean\r\n\t{\r\n\t\tvar isValid:boolean = TextureUtils.isBitmapDataValid(bitmapData);\r\n\r\n\t\tif (!isValid) {\r\n\r\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tpublic set parsingFailure(b:boolean)\r\n\t{\r\n\t\tthis._parsingFailure = b;\r\n\t}\r\n\r\n\tpublic get parsingFailure():boolean\r\n\t{\r\n\t\treturn this._parsingFailure;\r\n\t}\r\n\r\n\tpublic get parsingPaused():boolean\r\n\t{\r\n\t\treturn this._parsingPaused;\r\n\t}\r\n\r\n\tpublic get parsingComplete():boolean\r\n\t{\r\n\t\treturn this._parsingComplete;\r\n\t}\r\n\r\n\tpublic set materialMode(newMaterialMode:number)\r\n\t{\r\n\t\tthis._materialMode = newMaterialMode;\r\n\t}\r\n\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\r\n\t */\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\r\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\r\n\t * next frame.\r\n\t *\r\n\t * @param data The untyped data object in which the loaded data resides.\r\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\r\n\t * actual time spent on a frame can exceed this number since time-checks can\r\n\t * only be performed between logical sections of the parsing procedure.\r\n\t */\r\n\tpublic parseAsync(data:any, frameLimit:number = 30)\r\n\t{\r\n\t\tthis._data = data;\r\n\t\tthis._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\r\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\r\n\t * dependency should be a member of the dependencies property.\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\treturn asset.name;\r\n\t}\r\n\r\n\tpublic _iResumeParsingAfterDependencies()\r\n\t{\r\n\t\tthis._parsingPaused = false;\r\n\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.start();\r\n\t}\r\n\r\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\r\n\t{\r\n\t\tvar type_event:string;\r\n\t\tvar type_name:string;\r\n\r\n\t\tif (name != null)\r\n\t\t\tasset.name = name;\r\n\r\n\t\t// If the asset has no name, give it\r\n\t\t// a per-type default name.\r\n\t\tif (!asset.name)\r\n\t\t\tasset.name = asset.assetType;\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the next block of data.\r\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\r\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t\tthis._timer = null;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t}\r\n\r\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false):ResourceDependency\r\n\t{\r\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents);\r\n\t\tthis._dependencies.push(dependency);\r\n\r\n\t\treturn dependency;\r\n\t}\r\n\r\n\tpublic _pPauseAndRetrieveDependencies()\r\n\t{\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.stop();\r\n\r\n\t\tthis._parsingPaused = true;\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\r\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\r\n\t */\r\n\tpublic _pHasTime():boolean\r\n\t{\r\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the parsing pause interval has passed and parsing can proceed.\r\n\t */\r\n\tpublic _pOnInterval(event:TimerEvent = null)\r\n\t{\r\n\t\tthis._lastFrameTime = getTimer();\r\n\r\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\r\n\t\t\tthis._pFinishParsing();\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the parsing of data.\r\n\t * @param frameLimit The maximum duration of a parsing session.\r\n\t */\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tthis._frameLimit = frameLimit;\r\n\t\tthis._timer = new Timer(this._frameLimit, 0);\r\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\tthis._timer.start();\r\n\t}\r\n\r\n\t/**\r\n\t * Finish parsing the data.\r\n\t */\r\n\tpublic _pFinishParsing()\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t}\r\n\r\n\t\tthis._timer = null;\r\n\t\tthis._parsingComplete = true;\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetTextData():string\r\n\t{\r\n\t\treturn ParserUtils.toString(this._data);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetByteData():ByteArray\r\n\t{\r\n\t\treturn ParserUtils.toByteArray(this._data);\r\n\t}\r\n}\r\n\r\nexport = ParserBase;","/**\r\n * An enumeration providing values to describe the data format of parsed data.\r\n */\r\nclass ParserDataFormat\r\n{\r\n\t/**\r\n\t * Describes the format of a binary file.\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n\r\n\t/**\r\n\t * Describes the format of a plain text file.\r\n\t */\r\n\tpublic static PLAIN_TEXT:string = \"plainText\";\r\n\r\n\t/**\r\n\t * Describes the format of an image file\r\n\t */\r\n\tpublic static IMAGE:string = \"image\";\r\n\r\n}\r\n\r\nexport = ParserDataFormat;","import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nclass ParserUtils\r\n{\r\n\r\n\t/**\r\n\t * Converts an ArrayBuffer to a base64 string\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data.arraybytes);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a Blob\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static blobToImage(data:Blob):HTMLImageElement\r\n\t{\r\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = src;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as ByteArray, if possible.\r\n\t *\r\n\t * @param data The object to return as ByteArray\r\n\t *\r\n\t * @return The ByteArray or null\r\n\t *\r\n\t */\r\n\tpublic static toByteArray(data:any):ByteArray\r\n\t{\r\n\t\tvar b:ByteArray = new ByteArray();\r\n\t\tb.setArrayBuffer(data);\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as String, if possible.\r\n\t *\r\n\t * @param data The object to return as String\r\n\t * @param length The length of the returned String\r\n\t *\r\n\t * @return The String or null\r\n\t *\r\n\t */\r\n\tpublic static toString(data:any, length:number = 0):string\r\n\t{\r\n\r\n\t\tif (typeof data === 'string') {\r\n\t\t\tvar s:string = <string> data;\r\n\r\n\t\t\tif (s['substr'] != null)\r\n\t\t\t\treturn s.substr(0, s.length);\r\n\t\t}\r\n\r\n\t\tif (data instanceof ByteArray) {\r\n\t\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\t\tba.position = 0;\r\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\t var ba:ByteArray;\r\n\r\n\t\t length ||= uint.MAX_VALUE;\r\n\r\n\t\t if (data is String)\r\n\t\t return String(data).substr(0, length);\r\n\r\n\t\t ba = toByteArray(data);\r\n\t\t if (ba) {\r\n\t\t ba.position = 0;\r\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\r\n\t\t }\r\n\r\n\t\t return null;\r\n\r\n\t\t */\r\n\r\n\t}\r\n}\r\n\r\nexport = ParserUtils;","﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\r\n * required by a parser, used by ResourceLoadSession.\r\n *\r\n */\r\nclass ResourceDependency\r\n{\r\n\tprivate _id:string;\r\n\tprivate _request:URLRequest;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _parser:ParserBase;\r\n\tprivate _parentParser:ParserBase;\r\n\tprivate _data:any;\r\n\tprivate _retrieveAsRawData:boolean;\r\n\tprivate _suppressAssetEvents:boolean;\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\r\n\tpublic _iLoader:URLLoader;\r\n\tpublic _iSuccess:boolean;\r\n\r\n\r\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false)\r\n\t{\r\n\t\tthis._id = id;\r\n\t\tthis._request = request;\r\n\t\tthis._data = data;\r\n\t\tthis._parser = parser;\r\n\t\tthis._parentParser = parentParser;\r\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\r\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\r\n\r\n\t\tthis._assets = new Array<IAsset>();\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get id():string\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get request():URLRequest\r\n\t{\r\n\t\treturn this._request;\r\n\t}\r\n\r\n\t/**\r\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parser():ParserBase\r\n\t{\r\n\t\treturn this._parser;\r\n\t}\r\n\r\n\t/**\r\n\t * The parser which is dependent on this ResourceDependency object.\r\n\t */\r\n\tpublic get parentParser():ParserBase\r\n\t{\r\n\t\treturn this._parentParser;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get retrieveAsRawData():boolean\r\n\t{\r\n\t\treturn this._retrieveAsRawData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get suppresAssetEvents():boolean\r\n\t{\r\n\t\treturn this._suppressAssetEvents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Method to set data after having already created the dependency object, e.g. after load.\r\n\t */\r\n\tpublic _iSetData(data:any):void\r\n\t{\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t */\r\n\tpublic _iSetParser(parser:ParserBase):void\r\n\t{\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\r\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\r\n\t * to its intended parent. The dependency should be a member of the dependencies property.\r\n\t */\r\n\tpublic resolve():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependency(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\r\n\t */\r\n\tpublic resolveFailure():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependencies name\r\n\t */\r\n\tpublic resolveName(asset:IAsset):string\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\r\n\r\n\t\treturn asset.name;\r\n\t}\r\n}\r\n\r\nexport = ResourceDependency;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\n/**\r\n * Texture2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass Texture2DParser extends ParserBase\r\n{\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _doneParsing:boolean;\r\n\tprivate _loadingImage:boolean;\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t * Creates a new Texture2DParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\r\n\t\tif (data  instanceof HTMLImageElement)\r\n\t\t\treturn true;\r\n\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tba.position = 0;\r\n\r\n\t\tif (ba.readUnsignedShort() == 0xffd8)\r\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readShort() == 0x424D)\r\n\t\t\treturn true; // BMP\r\n\r\n\t\tba.position = 1;\r\n\t\tif (ba.readUTFBytes(3) == 'PNG')\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'ATF')\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tvar asset:Texture2DBase;\r\n\t\tvar sizeError:boolean = false;\r\n\r\n\t\tif (this._loadingImage) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else if (this._htmlImageElement) {\r\n\t\t\tif (TextureUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n\t\t\t\tasset = new ImageTexture(this._htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t}\r\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\r\n\r\n\t\t\tif (TextureUtils.isHTMLImageElementValid(<HTMLImageElement> this.data)) {\r\n\t\t\t\tasset = new ImageTexture(<HTMLImageElement> this.data);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\r\n\t\t\tvar ba:ByteArray = this.data;\r\n\t\t\tba.position = 0;\r\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\r\n\r\n\t\t\tif (TextureUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\t\t\t\tasset = new ImageTexture(htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\r\n\r\n\t\t\tasset = new ImageTexture(this._htmlImageElement);\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\r\n\r\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\r\n\t\t\tthis._loadingImage = true;\r\n\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t}\r\n\r\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\r\n\t\t{\r\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\r\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\r\n\t\t}\r\n\r\n\t\tthis._pContent = asset;\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tpublic onLoadComplete(event)\r\n\t{\r\n\t\tthis._loadingImage = false;\r\n\t}\r\n}\r\n\r\nexport = Texture2DParser;","/**\r\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\r\n *\r\n * @see away.projections.PerspectiveLens#coordinateSystem\r\n */\r\nclass CoordinateSystem\r\n{\r\n\t/**\r\n\t * Default option, projects to a left-handed coordinate system\r\n\t */\r\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\r\n\r\n\t/**\r\n\t * Projects to a right-handed coordinate system\r\n\t */\r\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\r\n}\r\n\r\nexport = CoordinateSystem;","import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass FreeMatrixProjection extends ProjectionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._pNear = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._pFar = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._pAspectRatio = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\r\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.pInvalidateMatrix();\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = FreeMatrixProjection;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass ObliqueNearPlaneProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _baseProjection:IProjection;\r\n\tprivate _plane:Plane3D;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.baseProjection = baseProjection;\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._baseProjection.frustumCorners;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._baseProjection.near;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._baseProjection.near = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._baseProjection.far;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._baseProjection.far = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get iAspectRatio():number\r\n\t{\r\n\t\treturn this._baseProjection._iAspectRatio;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._baseProjection._iAspectRatio = value;\r\n\t}\r\n\r\n\tpublic get plane():Plane3D\r\n\t{\r\n\t\treturn this._plane;\r\n\t}\r\n\r\n\tpublic set plane(value:Plane3D)\r\n\t{\r\n\t\tthis._plane = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic set baseProjection(value:IProjection)\r\n\t{\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis._baseProjection = value;\r\n\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\r\n\r\n\t\tvar cx:number = this._plane.a;\r\n\t\tvar cy:number = this._plane.b;\r\n\t\tvar cz:number = this._plane.c;\r\n\t\tvar cw:number = -this._plane.d + .05;\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\r\n\t\tinverse.invert();\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\t\tthis._pMatrix.copyRowTo(3, p);\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n}\r\n\r\nexport = ObliqueNearPlaneProjection;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicOffCenterProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _minX:number;\r\n\tprivate _maxX:number;\r\n\tprivate _minY:number;\r\n\tprivate _maxY:number;\r\n\r\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._minX = minX;\r\n\t\tthis._maxX = maxX;\r\n\t\tthis._minY = minY;\r\n\t\tthis._maxY = maxY;\r\n\t}\r\n\r\n\tpublic get minX():number\r\n\t{\r\n\t\treturn this._minX;\r\n\t}\r\n\r\n\tpublic set minX(value:number)\r\n\t{\r\n\t\tthis._minX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxX():number\r\n\t{\r\n\t\treturn this._maxX;\r\n\t}\r\n\r\n\tpublic set maxX(value:number)\r\n\t{\r\n\t\tthis._maxX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get minY():number\r\n\t{\r\n\t\treturn this._minY;\r\n\t}\r\n\r\n\tpublic set minY(value:number)\r\n\t{\r\n\t\tthis._minY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxY():number\r\n\t{\r\n\t\treturn this._maxY;\r\n\t}\r\n\r\n\tpublic set maxY(value:number)\r\n\t{\r\n\t\tthis._maxY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\t\tvar w:number = 1/(this._maxX - this._minX);\r\n\t\tvar h:number = 1/(this._maxY - this._minY);\r\n\t\tvar d:number = 1/(this._pFar - this._pNear);\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(this._maxX + this._minX)*w;\r\n\t\traw[13] = -(this._maxY + this._minY)*h;\r\n\t\traw[14] = -this._pNear*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = OrthographicOffCenterProjection;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _projectionHeight:number;\r\n\tprivate _xMax:number;\r\n\tprivate _yMax:number;\r\n\r\n\tconstructor(projectionHeight:number = 500)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._projectionHeight = projectionHeight;\r\n\t}\r\n\r\n\tpublic get projectionHeight():number\r\n\t{\r\n\t\treturn this._projectionHeight;\r\n\t}\r\n\r\n\tpublic set projectionHeight(value:number)\r\n\t{\r\n\t\tif (value == this._projectionHeight) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._projectionHeight = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.projectionHeight = this._projectionHeight;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\t\tthis._yMax = this._projectionHeight*.5;\r\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\r\n\t\t\t// assume symmetric frustum\r\n\r\n\t\t\tleft = -this._xMax;\r\n\t\t\tright = this._xMax;\r\n\t\t\ttop = -this._yMax;\r\n\t\t\tbottom = this._yMax;\r\n\r\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\r\n\t\t\traw[5] = 2/this._projectionHeight;\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\r\n\t\t\traw[15] = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\r\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\r\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\r\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\r\n\r\n\t\t\tleft = center - xWidth;\r\n\t\t\tright = center + xWidth;\r\n\t\t\ttop = middle - yHgt;\r\n\t\t\tbottom = middle + yHgt;\r\n\r\n\t\t\traw[0] = 2*1/(right - left);\r\n\t\t\traw[5] = -2*1/(top - bottom);\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\r\n\t\t\traw[12] = (right + left)/(right - left);\r\n\t\t\traw[13] = (bottom + top)/(bottom - top);\r\n\t\t\traw[14] = this._pNear/(this.near - this.far);\r\n\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\t\traw[15] = 1;\r\n\t\t}\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport= OrthographicProjection;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass PerspectiveProjection extends ProjectionBase\r\n{\r\n\tprivate _fieldOfView:number = 60;\r\n\tprivate _focalLength:number = 1000;\r\n\tprivate _hFieldOfView:number = 60;\r\n\tprivate _hFocalLength:number = 1000;\r\n\tprivate _preserveAspectRatio:boolean = true;\r\n\tprivate _preserveFocalLength:boolean = false;\r\n\r\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper(coordinateSystem);\r\n\t\tthis.fieldOfView = fieldOfView;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveAspectRatio():boolean\r\n\t{\r\n\t\treturn this._preserveAspectRatio;\r\n\t}\r\n\r\n\tpublic set preserveAspectRatio(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAspectRatio = value;\r\n\r\n\t\tif (this._preserveAspectRatio)\r\n\t\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveFocalLength():boolean\r\n\t{\r\n\t\treturn this._preserveFocalLength;\r\n\t}\r\n\r\n\tpublic set preserveFocalLength(value:boolean)\r\n\t{\r\n\t\tif (this._preserveFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get fieldOfView():number\r\n\t{\r\n\t\treturn this._fieldOfView;\r\n\t}\r\n\r\n\tpublic set fieldOfView(value:number)\r\n\t{\r\n\t\tif (this._fieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._fieldOfView = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get focalLength():number\r\n\t{\r\n\t\treturn this._focalLength;\r\n\t}\r\n\r\n\tpublic set focalLength(value:number)\r\n\t{\r\n\t\tif (this._focalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._focalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFieldOfView():number\r\n\t{\r\n\t\treturn this._hFieldOfView;\r\n\t}\r\n\r\n\tpublic set hFieldOfView(value:number)\r\n\t{\r\n\t\tif (this._hFieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFieldOfView = value;\r\n\r\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFocalLength():number\r\n\t{\r\n\t\treturn this._hFocalLength;\r\n\t}\r\n\r\n\tpublic set hFocalLength(value:number)\r\n\t{\r\n\t\tif (this._hFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\r\n\t\tv.x *= sZ;\r\n\t\tv.y *= sZ;\r\n\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\r\n\t\tif (this._preserveFocalLength) {\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\r\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\r\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\r\n\t\t} else {\r\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\r\n\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\t\t\telse\r\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\t\t}\r\n\r\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\r\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\r\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\r\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\t// assume scissored frustum\r\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\r\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\r\n\r\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\r\n\t\tright = center;\r\n\t\ttop = middle;\r\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\r\n\r\n\t\traw[0] = 2/(right - left);\r\n\t\traw[5] = 2/(bottom - top);\r\n\t\traw[8] = (right + left)/(right - left);\r\n\t\traw[9] = (bottom + top)/(bottom - top);\r\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\r\n\r\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\r\n\t\t\traw[5] = -raw[5];\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\r\n\r\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\r\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\r\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\r\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\r\n\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionBase extends EventDispatcher implements IProjection\r\n{\r\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\tpublic _pViewPort:Rectangle = new Rectangle();\r\n\tpublic _pNear:number = 20;\r\n\tpublic _pFar:number = 3000;\r\n\tpublic _pAspectRatio:number = 1;\r\n\r\n\tpublic _pMatrixInvalid:boolean = true;\r\n\tpublic _pFrustumCorners:number[] = [];\r\n\tpublic _pCoordinateSystem:string;\r\n\tpublic _pOriginX:number = 0.5;\r\n\tpublic _pOriginY:number = 0.5;\r\n\r\n\tprivate _unprojection:Matrix3D;\r\n\tprivate _unprojectionInvalid:boolean = true;\r\n\r\n\tconstructor(coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coordinateSystem = coordinateSystem;\r\n\t}\r\n\r\n\t/**\r\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\r\n\t */\r\n\tpublic get coordinateSystem():string\r\n\t{\r\n\t\treturn this._pCoordinateSystem;\r\n\t}\r\n\r\n\tpublic set coordinateSystem(value:string)\r\n\t{\r\n\t\tif (this._pCoordinateSystem == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pCoordinateSystem = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._pFrustumCorners;\r\n\t}\r\n\r\n\tpublic set frustumCorners(frustumCorners:number[])\r\n\t{\r\n\t\tthis._pFrustumCorners = frustumCorners;\r\n\t}\r\n\r\n\tpublic get matrix():Matrix3D\r\n\t{\r\n\t\tif (this._pMatrixInvalid) {\r\n\t\t\tthis.pUpdateMatrix();\r\n\t\t\tthis._pMatrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._pMatrix;\r\n\t}\r\n\r\n\tpublic set matrix(value:Matrix3D)\r\n\t{\r\n\t\tthis._pMatrix = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._pNear;\r\n\t}\r\n\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tif (value == this._pNear) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pNear = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get originX():number\r\n\t{\r\n\t\treturn this._pOriginX;\r\n\t}\r\n\r\n\tpublic set originX(value:number)\r\n\t{\r\n\t\tif (this._pOriginX == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginX = value;\r\n\t}\r\n\r\n\tpublic get originY():number\r\n\t{\r\n\t\treturn this._pOriginY;\r\n\t}\r\n\r\n\tpublic set originY(value:number)\r\n\t{\r\n\t\tif (this._pOriginY == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginY = value;\r\n\t}\r\n\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._pFar;\r\n\t}\r\n\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tif (value == this._pFar) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pFar = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\r\n\t\tv.x = v.x/v.w;\r\n\t\tv.y = -v.y/v.w;\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = point3d.z;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic get unprojectionMatrix():Matrix3D\r\n\t{\r\n\t\tif (this._unprojectionInvalid) {\r\n\t\t\tif (!this._unprojection)\r\n\t\t\t\tthis._unprojection = new Matrix3D();\r\n\r\n\t\t\tthis._unprojection.copyFrom(this.matrix);\r\n\t\t\tthis._unprojection.invert();\r\n\t\t\tthis._unprojectionInvalid = false;\r\n\t\t}\r\n\t\treturn this._unprojection;\r\n\t}\r\n\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iAspectRatio():number\r\n\t{\r\n\t\treturn this._pAspectRatio;\r\n\t}\r\n\r\n\tpublic set _iAspectRatio(value:number)\r\n\t{\r\n\t\tif (this._pAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAspectRatio = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic pInvalidateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = true;\r\n\t\tthis._unprojectionInvalid = true;\r\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\r\n\t}\r\n\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pScissorRect.x = x;\r\n\t\tthis._pScissorRect.y = y;\r\n\t\tthis._pScissorRect.width = width;\r\n\t\tthis._pScissorRect.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pViewPort.x = x;\r\n\t\tthis._pViewPort.y = y;\r\n\t\tthis._pViewPort.width = width;\r\n\t\tthis._pViewPort.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n}\r\n\r\nexport = ProjectionBase;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass BitmapCubeTexture extends CubeTextureBase\r\n{\r\n\tprivate _bitmapDatas:Array<BitmapData> = new Array<BitmapData>(6);\r\n\r\n\t/**\r\n\t * The texture on the cube's right face.\r\n\t */\r\n\tpublic get positiveX():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[0];\r\n\t}\r\n\r\n\tpublic set positiveX(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's left face.\r\n\t */\r\n\tpublic get negativeX():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[1];\r\n\t}\r\n\r\n\tpublic set negativeX(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[1] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's top face.\r\n\t */\r\n\tpublic get positiveY():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[2];\r\n\t}\r\n\r\n\tpublic set positiveY(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[2] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's bottom face.\r\n\t */\r\n\tpublic get negativeY():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[3];\r\n\t}\r\n\r\n\tpublic set negativeY(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[3] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's far face.\r\n\t */\r\n\tpublic get positiveZ():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[4];\r\n\t}\r\n\r\n\tpublic set positiveZ(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[4] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's near face.\r\n\t */\r\n\tpublic get negativeZ():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[5];\r\n\t}\r\n\r\n\tpublic set negativeZ(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[5] = value;\r\n\t}\r\n\r\n\tconstructor(posX:BitmapData, negX:BitmapData, posY:BitmapData, negY:BitmapData, posZ:BitmapData, negZ:BitmapData)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._testSize(this._bitmapDatas[0] = posX);\r\n\t\tthis._testSize(this._bitmapDatas[1] = negX);\r\n\t\tthis._testSize(this._bitmapDatas[2] = posY);\r\n\t\tthis._testSize(this._bitmapDatas[3] = negY);\r\n\t\tthis._testSize(this._bitmapDatas[4] = posZ);\r\n\t\tthis._testSize(this._bitmapDatas[5] = negZ);\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(posX.width);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t * @private\r\n\t */\r\n\tprivate _testSize(value:BitmapData)\r\n\t{\r\n\t\tif (value.width != value.height)\r\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\r\n\t\tif (!TextureUtils.isBitmapDataValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tvar len:number = this._bitmapDatas.length\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tthis._bitmapDatas[i].dispose();\r\n\t\t\tthis._bitmapDatas[i] = null;\r\n\t\t}\r\n\r\n\t\tthis._bitmapDatas = null;\r\n\t}\r\n\r\n\tpublic _iGetTextureData(side:number):BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[side];\r\n\t}\r\n}\r\n\r\nexport = BitmapCubeTexture;","﻿import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass BitmapTexture extends Texture2DBase\r\n{\r\n\tpublic _bitmapData:BitmapData;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get bitmapData():BitmapData\r\n\t{\r\n\t\treturn this._bitmapData;\r\n\t}\r\n\r\n\tpublic set bitmapData(value:BitmapData)\r\n\t{\r\n\t\tif (this._bitmapData == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isBitmapDataValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._bitmapData = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(value.width, value.height);\r\n\t}\r\n\r\n\tconstructor(bitmapData:BitmapData)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.bitmapData = bitmapData;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._bitmapData.dispose();\r\n\t\tthis._bitmapData = null;\r\n\t}\r\n\r\n\tpublic _iGetTextureData():BitmapData\r\n\t{\r\n\t\treturn this._bitmapData;\r\n\t}\r\n}\r\n\r\nexport = BitmapTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\r\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CubeTextureBase extends TextureProxyBase\r\n{\r\n\tpublic _mipmapDataArray:Array<Array<BitmapData>> = new Array<Array<BitmapData>>(6);\r\n\tpublic _mipmapDataDirtyArray:Array<boolean> = new Array<boolean>(6);\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _pSetSize(size:number)\r\n\t{\r\n\t\tif (this._pSize != size)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\r\n\r\n\t\tthis._pSize = size;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[i];\r\n\t\t\tvar len:number = mipmapData.length;\r\n\t\t\tfor (var j:number = 0; j < len; j++)\r\n\t\t\t\tMipmapGenerator.freeMipMapHolder(mipmapData[j]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tsuper.invalidateContent();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\r\n\t}\r\n\r\n\tpublic _iGetMipmapData(side:number):Array<BitmapData>\r\n\t{\r\n\t\tif (this._mipmapDataDirtyArray[side]) {\r\n\t\t\tthis._mipmapDataDirtyArray[side] = false;\r\n\r\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array<BitmapData>());\r\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);\r\n\t\t}\r\n\r\n\t\treturn this._mipmapDataArray[side];\r\n\t}\r\n\r\n\tpublic _iGetTextureData(side:number):any\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = CubeTextureBase;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\nclass ImageCubeTexture extends CubeTextureBase\r\n{\r\n\tprivate _htmlImageElements:Array<HTMLImageElement> = new Array<HTMLImageElement>(6);\r\n\r\n\t/**\r\n\t * The texture on the cube's right face.\r\n\t */\r\n\tpublic get positiveX():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[0];\r\n\t}\r\n\r\n\tpublic set positiveX(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's left face.\r\n\t */\r\n\tpublic get negativeX():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[1];\r\n\t}\r\n\r\n\tpublic set negativeX(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[1] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's top face.\r\n\t */\r\n\tpublic get positiveY():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[2];\r\n\t}\r\n\r\n\tpublic set positiveY(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[2] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's bottom face.\r\n\t */\r\n\tpublic get negativeY():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[3];\r\n\t}\r\n\r\n\tpublic set negativeY(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[3] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's far face.\r\n\t */\r\n\tpublic get positiveZ():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[4];\r\n\t}\r\n\r\n\tpublic set positiveZ(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[4] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's near face.\r\n\t */\r\n\tpublic get negativeZ():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[5];\r\n\t}\r\n\r\n\tpublic set negativeZ(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[5] = value;\r\n\t}\r\n\r\n\tconstructor(posX:HTMLImageElement, negX:HTMLImageElement, posY:HTMLImageElement, negY:HTMLImageElement, posZ:HTMLImageElement, negZ:HTMLImageElement)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._testSize(this._htmlImageElements[0] = posX);\r\n\t\tthis._testSize(this._htmlImageElements[1] = negX);\r\n\t\tthis._testSize(this._htmlImageElements[2] = posY);\r\n\t\tthis._testSize(this._htmlImageElements[3] = negY);\r\n\t\tthis._testSize(this._htmlImageElements[4] = posZ);\r\n\t\tthis._testSize(this._htmlImageElements[5] = negZ);\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(posX.width);\r\n\t}\r\n\r\n\tprivate _testSize(value:HTMLImageElement)\r\n\t{\r\n\t\tif (value.width != value.height)\r\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\r\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n\r\n\tpublic _iGetTextureData(side:number):HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[side];\r\n\t}\r\n}\r\n\r\nexport = ImageCubeTexture;","﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass ImageTexture extends Texture2DBase\r\n{\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t *\r\n\t * @param htmlImageElement\r\n\t * @param generateMipmaps\r\n\t */\r\n\tconstructor(htmlImageElement:HTMLImageElement)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.htmlImageElement = htmlImageElement;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlImageElement():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElement;\r\n\t}\r\n\r\n\tpublic set htmlImageElement(value:HTMLImageElement)\r\n\t{\r\n\t\tif (this._htmlImageElement == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._htmlImageElement = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width, value.height);\r\n\t}\r\n\r\n\tpublic _iGetTextureData():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElement;\r\n\t}\r\n}\r\n\r\nexport = ImageTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\n/**\r\n * MipmapGenerator is a helper class that uploads BitmapData to a Texture including mipmap levels.\r\n */\r\nclass MipmapGenerator\r\n{\r\n\tprivate static _mipMaps = [];\r\n\tprivate static _mipMapUses = [];\r\n\r\n\tprivate static _matrix:Matrix = new Matrix();\r\n\tprivate static _rect:Rectangle = new Rectangle();\r\n\tprivate static _source:BitmapData;\r\n\r\n\t/**\r\n\t * Uploads a BitmapData with mip maps to a target Texture object.\r\n\t * @param source The source to upload.\r\n\t * @param target The target Texture to upload to.\r\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\r\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\r\n\t */\r\n\tpublic static generateMipMaps(source:HTMLImageElement, output?:Array<BitmapData>, alpha?:boolean);\r\n\tpublic static generateMipMaps(source:BitmapData, output?:Array<BitmapData>, alpha?:boolean);\r\n\tpublic static generateMipMaps(source:any, output?:Array<BitmapData>, alpha:boolean = false)\r\n\t{\r\n\t\tvar w:number = source.width;\r\n\t\tvar h:number = source.height;\r\n\t\tvar i:number = 0;\r\n\r\n\t\tvar mipmap:BitmapData;\r\n\r\n\t\tMipmapGenerator._rect.width = w;\r\n\t\tMipmapGenerator._rect.height = h;\r\n\r\n\t\t//use (OR) to create non-square texture mipmaps\r\n\t\twhile (w >= 1 || h >= 1) {\r\n\r\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\r\n\r\n\t\t\tif (alpha)\r\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\r\n\r\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\r\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\r\n\r\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\r\n\r\n\t\t\tw >>= 1;\r\n\t\t\th >>= 1;\r\n\r\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\r\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapData, newW:number, newH:number):BitmapData\r\n\t{\r\n\t\tif (mipMapHolder) {\r\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\r\n\t\t\t\treturn mipMapHolder;\r\n\r\n\t\t\tMipmapGenerator.freeMipMapHolder(mipMapHolder);\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\r\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\r\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapData(newW, newH, true);\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\r\n\t\t} else {\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\r\n\t\t}\r\n\r\n\t\treturn mipMapHolder;\r\n\t}\r\n\r\n\tpublic static freeMipMapHolder(mipMapHolder:BitmapData)\r\n\t{\r\n\t\tvar holderWidth:number = mipMapHolder.width;\r\n\t\tvar holderHeight:number = mipMapHolder.height;\r\n\r\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = MipmapGenerator;","﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass RenderTexture extends Texture2DBase\r\n{\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (value == this._pWidth)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isDimensionValid(value))\r\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(value, this._pHeight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (value == this._pHeight)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isDimensionValid(value))\r\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(this._pWidth, value);\r\n\t}\r\n\r\n\tconstructor(width:number, height:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pSetSize(width, height);\r\n\t}\r\n}\r\n\r\nexport = RenderTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport BitmapDataChannel\t\t= require(\"awayjs-core/lib/base/BitmapDataChannel\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\n/**\r\n * A convenience texture that encodes a specular map in the red channel, and the gloss map in the green channel, as expected by BasicSpecularMapMethod\r\n */\r\nclass SpecularBitmapTexture extends BitmapTexture\r\n{\r\n\tprivate _specularMap:BitmapData;\r\n\tprivate _glossMap:BitmapData;\r\n\t\r\n\tconstructor(specularMap:BitmapData = null, glossMap:BitmapData = null)\r\n\t{\r\n\t\tvar bmd:BitmapData = specularMap? specularMap : glossMap;\r\n\r\n\t\tbmd = bmd? new BitmapData(bmd.width, bmd.height, false, 0xffffff) : new BitmapData(1, 1, false, 0xffffff);\r\n\t\t\r\n\t\tsuper(bmd);\r\n\t\t\r\n\t\tthis.specularMap = specularMap;\r\n\t\tthis.glossMap = glossMap;\r\n\t}\r\n\t\r\n\tpublic get specularMap():BitmapData\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\t\r\n\tpublic set specularMap(value:BitmapData)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t\t\r\n\t\tthis._testSize();\r\n\t}\r\n\t\r\n\tpublic get glossMap():BitmapData\r\n\t{\r\n\t\treturn this._glossMap;\r\n\t}\r\n\t\r\n\tpublic set glossMap(value:BitmapData)\r\n\t{\r\n\t\tthis._glossMap = value;\r\n\t\tthis.invalidateContent();\r\n\t\t\r\n\t\tthis._testSize();\r\n\t}\r\n\t\r\n\tprivate _testSize()\r\n\t{\r\n\t\tvar w:Number, h:Number;\r\n\t\t\r\n\t\tif (this._specularMap) {\r\n\t\t\tw = this._specularMap.width;\r\n\t\t\th = this._specularMap.height;\r\n\t\t} else if (this._glossMap) {\r\n\t\t\tw = this._glossMap.width;\r\n\t\t\th = this._glossMap.height;\r\n\t\t} else {\r\n\t\t\tw = 1;\r\n\t\t\th = 1;\r\n\t\t}\r\n\t\t\r\n\t\tif (w != this._bitmapData.width && h != this._bitmapData.height) {\r\n\t\t\tvar oldBitmap:BitmapData = this._bitmapData;\r\n\t\t\tthis.bitmapData = new BitmapData(this._specularMap.width, this._specularMap.height, false, 0xffffff);\r\n\t\t\toldBitmap.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _iGetTextureData():BitmapData\r\n\t{\r\n\t\tvar rect:Rectangle = this._specularMap.rect;\r\n\t\tvar origin:Point = new Point();\r\n\r\n\t\tthis._bitmapData.fillRect(rect, 0xffffff);\r\n\r\n\t\tif (this._glossMap)\r\n\t\t\tthis._bitmapData.copyChannel(this._glossMap, rect, origin, BitmapDataChannel.GREEN, BitmapDataChannel.GREEN);\r\n\r\n\t\tif (this._specularMap)\r\n\t\t\tthis._bitmapData.copyChannel(this._specularMap, rect, origin, BitmapDataChannel.RED, BitmapDataChannel.RED);\r\n\r\n\t\treturn this._bitmapData;\r\n\t}\r\n}\r\n\r\nexport = SpecularBitmapTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\r\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass Texture2DBase extends TextureProxyBase\r\n{\r\n\tprivate _mipmapData:Array<BitmapData>;\r\n\tprivate _mipmapDataDirty:boolean;\r\n\tpublic _pWidth:number;\r\n\tpublic _pHeight:number;\r\n\t\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._mipmapData) {\r\n\t\t\tvar len:number = this._mipmapData.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tMipmapGenerator.freeMipMapHolder(this._mipmapData[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tsuper.invalidateContent();\r\n\r\n\t\tthis._mipmapDataDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _pSetSize(width:number, height:number)\r\n\t{\r\n\t\tif (this._pWidth != width || this._pHeight != height)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tthis._mipmapDataDirty = true;\r\n\r\n\t\tthis._pWidth = width;\r\n\t\tthis._pHeight = height;\r\n\t}\r\n\r\n\tpublic _iGetMipmapData():Array<BitmapData>\r\n\t{\r\n\t\tif (this._mipmapDataDirty) {\r\n\t\t\tthis._mipmapDataDirty = false;\r\n\r\n\t\t\tif (!this._mipmapData)\r\n\t\t\t\tthis._mipmapData = new Array<BitmapData>();\r\n\r\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(), this._mipmapData, true);\r\n\t\t}\r\n\r\n\t\treturn this._mipmapData;\r\n\t}\r\n\r\n\tpublic _iGetTextureData():any\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = Texture2DBase;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport ITextureData\t\t\t\t= require(\"awayjs-core/lib/pool/ITextureData\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureProxyBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pSize:number;\r\n\tpublic _pFormat:string = \"bgra\"\r\n\tprivate _textureData:Array<ITextureData> = new Array<ITextureData>();\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(generateMipmaps:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._pSize;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get format():string\r\n\t{\r\n\t\treturn this._pFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.TEXTURE;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureData.length\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureData[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureData.length)\r\n\t\t\tthis._textureData[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureData.length)\r\n\t\t\tthis._textureData[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureData(textureData:ITextureData):ITextureData\r\n\t{\r\n\t\tthis._textureData.push(textureData);\r\n\r\n\t\treturn textureData;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureData(textureData:ITextureData):ITextureData\r\n\t{\r\n\t\tthis._textureData.splice(this._textureData.indexOf(textureData), 1);\r\n\r\n\t\treturn textureData;\r\n\t}\r\n}\r\n\r\nexport = TextureProxyBase;","class Keyboard\r\n{\r\n\t/**\r\n\t * Constant associated with the key code value for the A key (65).\r\n\t */\r\n\tpublic static A:number /*uint*/ = 65;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\r\n\t */\r\n\tpublic static ALTERNATE:number /*uint*/ = 18;\r\n\r\n\t/**\r\n\t * Select the audio mode\r\n\t */\r\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the B key (66).\r\n\t */\r\n\tpublic static B:number /*uint*/ = 66;\r\n\r\n\t/**\r\n\t * Return to previous page in application\r\n\t */\r\n\tpublic static BACK:number /*uint*/ = 0x01000016;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ` key (192).\r\n\t */\r\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the \\ key (220).\r\n\t */\r\n\tpublic static BACKSLASH:number /*uint*/ = 220;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Backspace key (8).\r\n\t */\r\n\tpublic static BACKSPACE:number /*uint*/ = 8;\r\n\r\n\t/**\r\n\t * Blue function key button\r\n\t */\r\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the C key (67).\r\n\t */\r\n\tpublic static C:number /*uint*/ = 67;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Caps Lock key (20).\r\n\t */\r\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\r\n\r\n\t/**\r\n\t * Channel down\r\n\t */\r\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Channel up\r\n\t */\r\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the , key (188).\r\n\t */\r\n\tpublic static COMMA:number /*uint*/ = 188;\r\n\r\n\t/**\r\n\t * Constant associated with the Mac command key (15). This constant is\r\n\t * currently only used for setting menu key equivalents.\r\n\t */\r\n\tpublic static COMMAND:number /*uint*/ = 15;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Control key (17).\r\n\t */\r\n\tpublic static CONTROL:number /*uint*/ = 17;\r\n\r\n\t/**\r\n\t * An array containing all the defined key name constants.\r\n\t */\r\n\tpublic static CharCodeStrings:Array<any>;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the D key (68).\r\n\t */\r\n\tpublic static D:number /*uint*/ = 68;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Delete key (46).\r\n\t */\r\n\tpublic static DELETE:number /*uint*/ = 46;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Down Arrow key (40).\r\n\t */\r\n\tpublic static DOWN:number /*uint*/ = 40;\r\n\r\n\t/**\r\n\t * Engage DVR application mode\r\n\t */\r\n\tpublic static DVR:number /*uint*/ = 0x01000019;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the E key (69).\r\n\t */\r\n\tpublic static E:number /*uint*/ = 69;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the End key (35).\r\n\t */\r\n\tpublic static END:number /*uint*/ = 35;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key (13).\r\n\t */\r\n\tpublic static ENTER:number /*uint*/ = 13;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the = key (187).\r\n\t */\r\n\tpublic static EQUAL:number /*uint*/ = 187;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Escape key (27).\r\n\t */\r\n\tpublic static ESCAPE:number /*uint*/ = 27;\r\n\r\n\t/**\r\n\t * Exits current application mode\r\n\t */\r\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F key (70).\r\n\t */\r\n\tpublic static F:number /*uint*/ = 70;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F1 key (112).\r\n\t */\r\n\tpublic static F1:number /*uint*/ = 112;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F10 key (121).\r\n\t */\r\n\tpublic static F10:number /*uint*/ = 121;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F11 key (122).\r\n\t */\r\n\tpublic static F11:number /*uint*/ = 122;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F12 key (123).\r\n\t */\r\n\tpublic static F12:number /*uint*/ = 123;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F13 key (124).\r\n\t */\r\n\tpublic static F13:number /*uint*/ = 124;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F14 key (125).\r\n\t */\r\n\tpublic static F14:number /*uint*/ = 125;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F15 key (126).\r\n\t */\r\n\tpublic static F15:number /*uint*/ = 126;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F2 key (113).\r\n\t */\r\n\tpublic static F2:number /*uint*/ = 113;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F3 key (114).\r\n\t */\r\n\tpublic static F3:number /*uint*/ = 114;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F4 key (115).\r\n\t */\r\n\tpublic static F4:number /*uint*/ = 115;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F5 key (116).\r\n\t */\r\n\tpublic static F5:number /*uint*/ = 116;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F6 key (117).\r\n\t */\r\n\tpublic static F6:number /*uint*/ = 117;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F7 key (118).\r\n\t */\r\n\tpublic static F7:number /*uint*/ = 118;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F8 key (119).\r\n\t */\r\n\tpublic static F8:number /*uint*/ = 119;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F9 key (120).\r\n\t */\r\n\tpublic static F9:number /*uint*/ = 120;\r\n\r\n\t/**\r\n\t * Engage fast-forward transport mode\r\n\t */\r\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the G key (71).\r\n\t */\r\n\tpublic static G:number /*uint*/ = 71;\r\n\r\n\t/**\r\n\t * Green function key button\r\n\t */\r\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\r\n\r\n\t/**\r\n\t * Engage program guide\r\n\t */\r\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the H key (72).\r\n\t */\r\n\tpublic static H:number /*uint*/ = 72;\r\n\r\n\t/**\r\n\t * Engage help application or context-sensitive help\r\n\t */\r\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Home key (36).\r\n\t */\r\n\tpublic static HOME:number /*uint*/ = 36;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the I key (73).\r\n\t */\r\n\tpublic static I:number /*uint*/ = 73;\r\n\r\n\t/**\r\n\t * Info button\r\n\t */\r\n\tpublic static INFO:number /*uint*/ = 0x01000013;\r\n\r\n\t/**\r\n\t * Cycle input\r\n\t */\r\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Insert key (45).\r\n\t */\r\n\tpublic static INSERT:number /*uint*/ = 45;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the J key (74).\r\n\t */\r\n\tpublic static J:number /*uint*/ = 74;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the K key (75).\r\n\t */\r\n\tpublic static K:number /*uint*/ = 75;\r\n\r\n\t/**\r\n\t * The Begin key\r\n\t */\r\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\r\n\r\n\t/**\r\n\t * The Break key\r\n\t */\r\n\tpublic static KEYNAME_BREAK:string = \"Break\";\r\n\r\n\t/**\r\n\t * The Clear Display key\r\n\t */\r\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\r\n\r\n\t/**\r\n\t * The Clear Line key\r\n\t */\r\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\r\n\r\n\t/**\r\n\t * The Delete key\r\n\t */\r\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\r\n\r\n\t/**\r\n\t * The Delete Character key\r\n\t */\r\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\r\n\r\n\t/**\r\n\t * The Delete Line key\r\n\t */\r\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\r\n\r\n\t/**\r\n\t * The down arrow\r\n\t */\r\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\r\n\r\n\t/**\r\n\t * The End key\r\n\t */\r\n\tpublic static KEYNAME_END:string = \"End\";\r\n\r\n\t/**\r\n\t * The Execute key\r\n\t */\r\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\r\n\r\n\t/**\r\n\t * The F1 key\r\n\t */\r\n\tpublic static KEYNAME_F1:string = \"F1\";\r\n\r\n\t/**\r\n\t * The F10 key\r\n\t */\r\n\tpublic static KEYNAME_F10:string = \"F10\";\r\n\r\n\t/**\r\n\t * The F11 key\r\n\t */\r\n\tpublic static KEYNAME_F11:string = \"F11\";\r\n\r\n\t/**\r\n\t * The F12 key\r\n\t */\r\n\tpublic static KEYNAME_F12:string = \"F12\";\r\n\r\n\t/**\r\n\t * The F13 key\r\n\t */\r\n\tpublic static KEYNAME_F13:string = \"F13\";\r\n\r\n\t/**\r\n\t * The F14 key\r\n\t */\r\n\tpublic static KEYNAME_F14:string = \"F14\";\r\n\r\n\t/**\r\n\t * The F15 key\r\n\t */\r\n\tpublic static KEYNAME_F15:string = \"F15\";\r\n\r\n\t/**\r\n\t * The F16 key\r\n\t */\r\n\tpublic static KEYNAME_F16:string = \"F16\";\r\n\r\n\t/**\r\n\t * The F17 key\r\n\t */\r\n\tpublic static KEYNAME_F17:string = \"F17\";\r\n\r\n\t/**\r\n\t * The F18 key\r\n\t */\r\n\tpublic static KEYNAME_F18:string = \"F18\";\r\n\r\n\t/**\r\n\t * The F19 key\r\n\t */\r\n\tpublic static KEYNAME_F19:string = \"F19\";\r\n\r\n\t/**\r\n\t * The F2 key\r\n\t */\r\n\tpublic static KEYNAME_F2:string = \"F2\";\r\n\r\n\t/**\r\n\t * The F20 key\r\n\t */\r\n\tpublic static KEYNAME_F20:string = \"F20\";\r\n\r\n\t/**\r\n\t * The F21 key\r\n\t */\r\n\tpublic static KEYNAME_F21:string = \"F21\";\r\n\r\n\t/**\r\n\t * The F22 key\r\n\t */\r\n\tpublic static KEYNAME_F22:string = \"F22\";\r\n\r\n\t/**\r\n\t * The F23 key\r\n\t */\r\n\tpublic static KEYNAME_F23:string = \"F23\";\r\n\r\n\t/**\r\n\t * The F24 key\r\n\t */\r\n\tpublic static KEYNAME_F24:string = \"F24\";\r\n\r\n\t/**\r\n\t * The F25 key\r\n\t */\r\n\tpublic static KEYNAME_F25:string = \"F25\";\r\n\r\n\t/**\r\n\t * The F26 key\r\n\t */\r\n\tpublic static KEYNAME_F26:string = \"F26\";\r\n\r\n\t/**\r\n\t * The F27 key\r\n\t */\r\n\tpublic static KEYNAME_F27:string = \"F27\";\r\n\r\n\t/**\r\n\t * The F28 key\r\n\t */\r\n\tpublic static KEYNAME_F28:string = \"F28\";\r\n\r\n\t/**\r\n\t * The F29 key\r\n\t */\r\n\tpublic static KEYNAME_F29:string = \"F29\";\r\n\r\n\t/**\r\n\t * The F3 key\r\n\t */\r\n\tpublic static KEYNAME_F3:string = \"F3\";\r\n\r\n\t/**\r\n\t * The F30 key\r\n\t */\r\n\tpublic static KEYNAME_F30:string = \"F30\";\r\n\r\n\t/**\r\n\t * The F31 key\r\n\t */\r\n\tpublic static KEYNAME_F31:string = \"F31\";\r\n\r\n\t/**\r\n\t * The F32 key\r\n\t */\r\n\tpublic static KEYNAME_F32:string = \"F32\";\r\n\r\n\t/**\r\n\t * The F33 key\r\n\t */\r\n\tpublic static KEYNAME_F33:string = \"F33\";\r\n\r\n\t/**\r\n\t * The F34 key\r\n\t */\r\n\tpublic static KEYNAME_F34:string = \"F34\";\r\n\r\n\t/**\r\n\t * The F35 key\r\n\t */\r\n\tpublic static KEYNAME_F35:string = \"F35\";\r\n\r\n\t/**\r\n\t * The F4 key\r\n\t */\r\n\tpublic static KEYNAME_F4:string = \"F4\";\r\n\r\n\t/**\r\n\t * The F5 key\r\n\t */\r\n\tpublic static KEYNAME_F5:string = \"F5\";\r\n\r\n\t/**\r\n\t * The F6 key\r\n\t */\r\n\tpublic static KEYNAME_F6:string = \"F6\";\r\n\r\n\t/**\r\n\t * The F7 key\r\n\t */\r\n\tpublic static KEYNAME_F7:string = \"F7\";\r\n\r\n\t/**\r\n\t * The F8 key\r\n\t */\r\n\tpublic static KEYNAME_F8:string = \"F8\";\r\n\r\n\t/**\r\n\t * The F9 key\r\n\t */\r\n\tpublic static KEYNAME_F9:string = \"F9\";\r\n\r\n\t/**\r\n\t * The Find key\r\n\t */\r\n\tpublic static KEYNAME_FIND:string = \"Find\";\r\n\r\n\t/**\r\n\t * The Help key\r\n\t */\r\n\tpublic static KEYNAME_HELP:string = \"Help\";\r\n\r\n\t/**\r\n\t * The Home key\r\n\t */\r\n\tpublic static KEYNAME_HOME:string = \"Home\";\r\n\r\n\t/**\r\n\t * The Insert key\r\n\t */\r\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\r\n\r\n\t/**\r\n\t * The Insert Character key\r\n\t */\r\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\r\n\r\n\t/**\r\n\t * The Insert Line key\r\n\t */\r\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\r\n\r\n\t/**\r\n\t * The left arrow\r\n\t */\r\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\r\n\r\n\t/**\r\n\t * The Menu key\r\n\t */\r\n\tpublic static KEYNAME_MENU:string = \"Menu\";\r\n\r\n\t/**\r\n\t * The Mode Switch key\r\n\t */\r\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\r\n\r\n\t/**\r\n\t * The Next key\r\n\t */\r\n\tpublic static KEYNAME_NEXT:string = \"Next\";\r\n\r\n\t/**\r\n\t * The Page Down key\r\n\t */\r\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\r\n\r\n\t/**\r\n\t * The Page Up key\r\n\t */\r\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\r\n\r\n\t/**\r\n\t * The Pause key\r\n\t */\r\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\r\n\r\n\t/**\r\n\t * The Previous key\r\n\t */\r\n\tpublic static KEYNAME_PREV:string = \"Prev\";\r\n\r\n\t/**\r\n\t * The PRINT key\r\n\t */\r\n\tpublic static KEYNAME_PRINT:string = \"Print\";\r\n\r\n\t/**\r\n\t * The PRINT Screen\r\n\t */\r\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\r\n\r\n\t/**\r\n\t * The Redo key\r\n\t */\r\n\tpublic static KEYNAME_REDO:string = \"Redo\";\r\n\r\n\t/**\r\n\t * The Reset key\r\n\t */\r\n\tpublic static KEYNAME_RESET:string = \"Reset\";\r\n\r\n\t/**\r\n\t * The right arrow\r\n\t */\r\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\r\n\r\n\t/**\r\n\t * The Scroll Lock key\r\n\t */\r\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\r\n\r\n\t/**\r\n\t * The Select key\r\n\t */\r\n\tpublic static KEYNAME_SELECT:string = \"Select\";\r\n\r\n\t/**\r\n\t * The Stop key\r\n\t */\r\n\tpublic static KEYNAME_STOP:string = \"Stop\";\r\n\r\n\t/**\r\n\t * The System Request key\r\n\t */\r\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\r\n\r\n\t/**\r\n\t * The System key\r\n\t */\r\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\r\n\r\n\t/**\r\n\t * The Undo key\r\n\t */\r\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\r\n\r\n\t/**\r\n\t * The up arrow\r\n\t */\r\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\r\n\r\n\t/**\r\n\t * The User key\r\n\t */\r\n\tpublic static KEYNAME_USER:string = \"User\";\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the L key (76).\r\n\t */\r\n\tpublic static L:number /*uint*/ = 76;\r\n\r\n\t/**\r\n\t * Watch last channel or show watched\r\n\t */\r\n\tpublic static LAST:number /*uint*/ = 0x01000011;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Left Arrow key (37).\r\n\t */\r\n\tpublic static LEFT:number /*uint*/ = 37;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the [ key (219).\r\n\t */\r\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\r\n\r\n\t/**\r\n\t * Return to live [position in broadcast]\r\n\t */\r\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the M key (77).\r\n\t */\r\n\tpublic static M:number /*uint*/ = 77;\r\n\r\n\t/**\r\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\r\n\t */\r\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\r\n\r\n\t/**\r\n\t * Engage menu\r\n\t */\r\n\tpublic static MENU:number /*uint*/ = 0x01000012;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the - key (189).\r\n\t */\r\n\tpublic static MINUS:number /*uint*/ = 189;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the N key (78).\r\n\t */\r\n\tpublic static N:number /*uint*/ = 78;\r\n\r\n\t/**\r\n\t * Skip to next track or chapter\r\n\t */\r\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 0 key (48).\r\n\t */\r\n\tpublic static NUMBER_0:number /*uint*/ = 48;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 1 key (49).\r\n\t */\r\n\tpublic static NUMBER_1:number /*uint*/ = 49;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 2 key (50).\r\n\t */\r\n\tpublic static NUMBER_2:number /*uint*/ = 50;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 3 key (51).\r\n\t */\r\n\tpublic static NUMBER_3:number /*uint*/ = 51;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 4 key (52).\r\n\t */\r\n\tpublic static NUMBER_4:number /*uint*/ = 52;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 5 key (53).\r\n\t */\r\n\tpublic static NUMBER_5:number /*uint*/ = 53;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 6 key (54).\r\n\t */\r\n\tpublic static NUMBER_6:number /*uint*/ = 54;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 7 key (55).\r\n\t */\r\n\tpublic static NUMBER_7:number /*uint*/ = 55;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 8 key (56).\r\n\t */\r\n\tpublic static NUMBER_8:number /*uint*/ = 56;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 9 key (57).\r\n\t */\r\n\tpublic static NUMBER_9:number /*uint*/ = 57;\r\n\r\n\t/**\r\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\r\n\t */\r\n\tpublic static NUMPAD:number /*uint*/ = 21;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\r\n\t */\r\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\r\n\t */\r\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\r\n\t */\r\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\r\n\t */\r\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\r\n\t */\r\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\r\n\t */\r\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\r\n\t */\r\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\r\n\t */\r\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\r\n\t */\r\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\r\n\t */\r\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the addition key on the number pad (107).\r\n\t */\r\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\r\n\t */\r\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the division key on the number pad (111).\r\n\t */\r\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\r\n\t */\r\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\r\n\t */\r\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\r\n\t */\r\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the O key (79).\r\n\t */\r\n\tpublic static O:number /*uint*/ = 79;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the P key (80).\r\n\t */\r\n\tpublic static P:number /*uint*/ = 80;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Down key (34).\r\n\t */\r\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Up key (33).\r\n\t */\r\n\tpublic static PAGE_UP:number /*uint*/ = 33;\r\n\r\n\t/**\r\n\t * Engage pause transport mode\r\n\t */\r\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the . key (190).\r\n\t */\r\n\tpublic static PERIOD:number /*uint*/ = 190;\r\n\r\n\t/**\r\n\t * Engage play transport mode\r\n\t */\r\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\r\n\r\n\t/**\r\n\t * Skip to previous track or chapter\r\n\t */\r\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Q key (81).\r\n\t */\r\n\tpublic static Q:number /*uint*/ = 81;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ' key (222).\r\n\t */\r\n\tpublic static QUOTE:number /*uint*/ = 222;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the R key (82).\r\n\t */\r\n\tpublic static R:number /*uint*/ = 82;\r\n\r\n\t/**\r\n\t * Record item or engage record transport mode\r\n\t */\r\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\r\n\r\n\t/**\r\n\t * Red function key button\r\n\t */\r\n\tpublic static RED:number /*uint*/ = 0x01000000;\r\n\r\n\t/**\r\n\t * Engage rewind transport mode\r\n\t */\r\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Right Arrow key (39).\r\n\t */\r\n\tpublic static RIGHT:number /*uint*/ = 39;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ] key (221).\r\n\t */\r\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the S key (83).\r\n\t */\r\n\tpublic static S:number /*uint*/ = 83;\r\n\r\n\t/**\r\n\t * Search button\r\n\t */\r\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ; key (186).\r\n\t */\r\n\tpublic static SEMICOLON:number /*uint*/ = 186;\r\n\r\n\t/**\r\n\t * Engage setup application or menu\r\n\t */\r\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Shift key (16).\r\n\t */\r\n\tpublic static SHIFT:number /*uint*/ = 16;\r\n\r\n\t/**\r\n\t * Quick skip backward (usually 7-10 seconds)\r\n\t */\r\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\r\n\r\n\t/**\r\n\t * Quick skip ahead (usually 30 seconds)\r\n\t */\r\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the / key (191).\r\n\t */\r\n\tpublic static SLASH:number /*uint*/ = 191;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Spacebar (32).\r\n\t */\r\n\tpublic static SPACE:number /*uint*/ = 32;\r\n\r\n\t/**\r\n\t * Engage stop transport mode\r\n\t */\r\n\tpublic static STOP:number /*uint*/ = 0x01000009;\r\n\r\n\t/**\r\n\t * Toggle subtitles\r\n\t */\r\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the T key (84).\r\n\t */\r\n\tpublic static T:number /*uint*/ = 84;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Tab key (9).\r\n\t */\r\n\tpublic static TAB:number /*uint*/ = 9;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the U key (85).\r\n\t */\r\n\tpublic static U:number /*uint*/ = 85;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Up Arrow key (38).\r\n\t */\r\n\tpublic static UP:number /*uint*/ = 38;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the V key (86).\r\n\t */\r\n\tpublic static V:number /*uint*/ = 86;\r\n\r\n\t/**\r\n\t * Engage video-on-demand\r\n\t */\r\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the W key (87).\r\n\t */\r\n\tpublic static W:number /*uint*/ = 87;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the X key (88).\r\n\t */\r\n\tpublic static X:number /*uint*/ = 88;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Y key (89).\r\n\t */\r\n\tpublic static Y:number /*uint*/ = 89;\r\n\r\n\t/**\r\n\t * Yellow function key button\r\n\t */\r\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Z key (90).\r\n\t */\r\n\tpublic static Z:number /*uint*/ = 90;\r\n\r\n}\r\n\r\nexport = Keyboard;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nclass ByteArrayBase\r\n{\r\n\tpublic position:number = 0;\r\n\tpublic length:number = 0;\r\n\tpublic _mode:string = \"\";\r\n\r\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\r\n\t}\r\n\r\n\tpublic compareEqual(other, count)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (count > other.length - other.position)\r\n\t\t\tcount = other.length - other.position;\r\n\t\tvar co0 = count;\r\n\t\tvar r = true;\r\n\t\twhile (r && count >= 4) {\r\n\t\t\tcount -= 4;\r\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\r\n\t\t}\r\n\t\twhile (r && count >= 1) {\r\n\t\t\tcount--;\r\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\r\n\t\t}\r\n\t\tvar c0;\r\n\t\tthis.position -= (c0 - count);\r\n\t\tother.position -= (c0 - count);\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeBase64String(s:string)\r\n\t{\r\n\t\tfor (var i:number = 0; i < s.length; i++) {\r\n\t\t\tvar v = s.charAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dumpToConsole()\r\n\t{\r\n\t\tvar oldpos = this.position;\r\n\t\tthis.position = 0;\r\n\t\tvar nstep:number = 8;\r\n\r\n\t\tfunction asHexString(x, digits)\r\n\t\t{\r\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\r\n\t\t\tvar sh:string = \"\";\r\n\t\t\tfor (var d:number = 0; d < digits; d++) {\r\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\r\n\t\t\t}\r\n\t\t\treturn sh;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.length; i += nstep) {\r\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\r\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\r\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}\r\n\t\tthis.position = oldpos;\r\n\t}\r\n\r\n\tpublic readBase64String(count:number)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (!(count > 0)) return \"\";\r\n\r\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\r\n\t}\r\n\r\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\r\n\t{ // return base64 string of the next count bytes\r\n\t\tvar r = \"\";\r\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\r\n\t\tvar base64Key = ByteArrayBase.Base64Key;\r\n\t\twhile (count >= 3) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\r\n\t\t\tenc4 = b2 & 63;\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\r\n\t\t\tcount -= 3;\r\n\t\t}\r\n\t\t// pad\r\n\t\tif (count == 2) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\r\n\t\t} else if (count == 1) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n}\r\n\r\nexport = ByteArrayBase;","import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArrayBuffer extends ByteArrayBase\r\n{\r\n\r\n\t/*\r\n\t public maxlength:number = 0;\r\n\t public arraybytes; //ArrayBuffer\r\n\t public unalignedarraybytestemp; //ArrayBuffer\r\n\t */\r\n\r\n\tpublic _bytes:number[];\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._bytes = [];\r\n\t\tthis._mode = \"Array\";\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[this.position++] = bi & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tif (this.position + 2 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\r\n\t\tthis.position += 2;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tif (this.position + 4 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\r\n\t\tthis.position += 4;\r\n\t\treturn r >>> 0;\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\t// this is crazy slow and silly, but as a fallback...\r\n\r\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\t// don't handle inf/nan yet\r\n\t\t// special case zero\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// remove the sign, after this we only deal with positive numbers\r\n\t\tvar sign:number = 0;\r\n\t\tif (x < 0) {\r\n\t\t\tx = -x;\r\n\t\t\tsign = 1;\r\n\t\t} else {\r\n\t\t\tsign = 0;\r\n\t\t}\r\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\r\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\r\n\t\texponent = Math.floor(exponent);\r\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\r\n\t\tvar mantissa = Math.floor(x) - 0x800000;\r\n\t\texponent = exponent + 127;\r\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\r\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\r\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\r\n\t\tif (x >>> 31 != 0) {\r\n\t\t\ty = -y;\r\n\t\t}\r\n\t\treturn y;\r\n\t}\r\n\r\n\t/*\r\n\t public ensureWriteableSpace( n:number )\r\n\t {\r\n\t this.ensureSpace( n + this.position );\r\n\t }\r\n\r\n\t private ensureSpace( n:number )\r\n\t {\r\n\t if ( n > this.maxlength ) {\r\n\t var newmaxlength:number = (n+255)&(~255);\r\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t newview.set(view);      // memcpy\r\n\t this.arraybytes = newarraybuffer;\r\n\t this.maxlength = newmaxlength;\r\n\t }\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = ByteArrayBuffer;","import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArray extends ByteArrayBase\r\n{\r\n\tpublic maxlength:number = 0;\r\n\tpublic arraybytes; //ArrayBuffer\r\n\tpublic unalignedarraybytestemp; //ArrayBuffer\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._mode = \"Typed array\";\r\n\t\tthis.maxlength = 4;\r\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\r\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\r\n\t}\r\n\r\n\tpublic ensureWriteableSpace(n:number)\r\n\t{\r\n\t\tthis.ensureSpace(n + this.position);\r\n\t}\r\n\r\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\r\n\t{\r\n\r\n\t\tthis.ensureSpace(aBuffer.byteLength);\r\n\r\n\t\tthis.length = aBuffer.byteLength;\r\n\r\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\r\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\r\n\r\n\t\tlocalInt8View.set(inInt8AView);\r\n\r\n\t\tthis.position = 0;\r\n\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\treturn ( this.length ) - ( this.position );\r\n\t}\r\n\r\n\tpublic ensureSpace(n:number)\r\n\t{\r\n\t\tif (n > this.maxlength) {\r\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\r\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t\t\tnewview.set(view);      // memcpy\r\n\t\t\tthis.arraybytes = newarraybuffer;\r\n\t\t\tthis.maxlength = newmaxlength;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte()\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\r\n\t\treturn view[ this.position++ ];\r\n\t}\r\n\r\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\r\n\t{\r\n\r\n\t\tif (length == null) {\r\n\t\t\tlength = bytes.length;\r\n\t\t}\r\n\r\n\t\tbytes.ensureWriteableSpace(offset + length);\r\n\r\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\r\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\r\n\r\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\r\n\r\n\t\tthis.position += length;\r\n\r\n\t\tif (length + offset > bytes.length) {\r\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte()\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\treturn view[this.position++];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(2);\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 2;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUTFBytes(len:number):string\r\n\t{\r\n\r\n\t\tvar value:string = \"\";\r\n\t\tvar max:number = this.position + len;\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\r\n\t\t// utf8-encode\r\n\t\twhile (this.position < max) {\r\n\r\n\t\t\tvar c:number = data.getUint8(this.position++);\r\n\r\n\t\t\tif (c < 0x80) {\r\n\r\n\t\t\t\tif (c == 0) break;\r\n\t\t\t\tvalue += String.fromCharCode(c);\r\n\r\n\t\t\t} else if (c < 0xE0) {\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else if (c < 0xF0) {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvar c3 = data.getUint8(this.position++);\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tpublic readInt():number\r\n\t{\r\n\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar int:number = data.getInt32(this.position, true);\r\n\r\n\t\tthis.position += 4;\r\n\r\n\t\treturn int;\r\n\r\n\t}\r\n\r\n\tpublic readShort():number\r\n\t{\r\n\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar short:number = data.getInt16(this.position, true);\r\n\r\n\t\tthis.position += 2;\r\n\t\treturn short;\r\n\r\n\t}\r\n\r\n\tpublic readDouble():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar double:number = data.getFloat64(this.position, true);\r\n\r\n\t\tthis.position += 8;\r\n\t\treturn double;\r\n\r\n\t}\r\n\r\n\tpublic readUnsignedShort()\r\n\t{\r\n\t\tif (this.position > this.length + 2) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 1;\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffffffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt()\r\n\t{\r\n\r\n\t\tif (this.position > this.length + 4) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = b;\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = b;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readFloat()\r\n\t{\r\n\t\tif (this.position > this.length + 4) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif ((this.position & 3) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tvar pa = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[pa];\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ 0 ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ByteArray;","class CSS\r\n{\r\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementWidth(element:HTMLElement, width:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t}\r\n\r\n\tpublic static setElementHeight(element:HTMLElement, height:number)\r\n\t{\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementX(element:HTMLElement, x:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.left = x + \"px\";\r\n\t}\r\n\r\n\tpublic static setElementY(element:HTMLElement, y:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n\r\n\tpublic static getElementVisibility(element:HTMLElement):boolean\r\n\t{\r\n\t\treturn element.style.visibility == 'visible';\r\n\t}\r\n\r\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\r\n\t{\r\n\t\tif (visible) {\r\n\t\t\telement.style.visibility = 'visible';\r\n\t\t} else {\r\n\t\t\telement.style.visibility = 'hidden';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\r\n\t{\r\n\t\tif (element instanceof HTMLCanvasElement) {\r\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\r\n\t\t\tcontext.globalAlpha = alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\r\n\t{\r\n\t\tif (absolute) {\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t} else {\r\n\t\t\telement.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\telement.style.left = x + \"px\";\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n}\r\n\r\nexport = CSS;","/**\r\n *\r\n */\r\nclass ColorUtils\r\n{\r\n\tpublic static float32ColorToARGB(float32Color:number):number[]\r\n\t{\r\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\r\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\r\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\r\n\t\tvar b:number = float32Color & 0xff;\r\n\t\tvar result:number[] = [ a, r , g , b ];\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate static componentToHex(c:number):string\r\n\t{\r\n\t\tvar hex = c.toString(16);\r\n\t\treturn hex.length == 1? \"0\" + hex : hex;\r\n\t}\r\n\r\n\tpublic static RGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n\r\n\tpublic static ARGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n}\r\n\r\nexport = ColorUtils;","import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\n\r\n/**\r\n *\r\n */\r\nclass Debug\r\n{\r\n\tpublic static THROW_ERRORS:boolean = true;\r\n\tpublic static ENABLE_LOG:boolean = true;\r\n\tpublic static LOG_PI_ERRORS:boolean = true;\r\n\r\n\tprivate static keyword:string = null;\r\n\r\n\tpublic static breakpoint():void\r\n\t{\r\n\t\tDebug['break']();\r\n\t}\r\n\r\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\r\n\t{\r\n\t\tif (!enable)\r\n\t\t\tDebug.keyword = null;\r\n\t\telse\r\n\t\t\tDebug.keyword = str;\r\n\t}\r\n\r\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\r\n\t{\r\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\r\n\r\n\t\tif (Debug.THROW_ERRORS) {\r\n\t\t\tif (Debug.keyword) {\r\n\t\t\t\tvar e:string = clss + fnc + msg;\r\n\r\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\r\n\t{\r\n\t\tif (Debug.LOG_PI_ERRORS)\r\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\r\n\t}\r\n\r\n\tpublic static log(...args:any[])\r\n\t{\r\n\t\tif (Debug.ENABLE_LOG)\r\n\t\t\tconsole.log(args);\r\n\t}\r\n}\r\n\r\nexport = Debug;","import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nclass RequestAnimationFrame\r\n{\r\n\tprivate _callback:Function;\r\n\tprivate _callbackContext:Object;\r\n\tprivate _active:boolean = false;\r\n\tprivate _rafUpdateFunction:any;\r\n\tprivate _prevTime:number;\r\n\tprivate _dt:number;\r\n\tprivate _currentTime:number;\r\n\tprivate _argsArray:Array<any> = new Array();\r\n\tprivate _getTimer:Function;\r\n\r\n\tconstructor(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._getTimer = getTimer;\r\n\r\n\t\tthis.setCallback(callback, callbackContext);\r\n\r\n\t\tthis._rafUpdateFunction = () => {\r\n\t\t\tif (this._active)\r\n\t\t\t\tthis._tick();\r\n\t\t}\r\n\r\n\t\tthis._argsArray.push(this._dt);\r\n\t}\r\n\r\n\t// Public\r\n\r\n\t/**\r\n\t *\r\n\t * @param callback\r\n\t * @param callbackContext\r\n\t */\r\n\tpublic setCallback(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._callback = callback;\r\n\t\tthis._callbackContext = callbackContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tthis._prevTime = this._getTimer();\r\n\t\tthis._active = true;\r\n\r\n\t\tif (window.requestAnimationFrame) {\r\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\t\t} else {\r\n\t\t\tif (window['mozRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\r\n\t\t\telse if (window['webkitRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\r\n\t\t\telse if (window['oRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic stop()\r\n\t{\r\n\t\tthis._active = false;\r\n\t}\r\n\r\n\t// Get / Set\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get active():boolean\r\n\t{\r\n\t\treturn this._active;\r\n\t}\r\n\r\n\t// Private\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _tick():void\r\n\t{\r\n\t\tthis._currentTime = this._getTimer();\r\n\t\tthis._dt = this._currentTime - this._prevTime;\r\n\t\tthis._argsArray[0] = this._dt;\r\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\r\n\r\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\r\n\t\tthis._prevTime = this._currentTime;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = RequestAnimationFrame;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\n\r\nclass TextureUtils\r\n{\r\n\tprivate static MAX_SIZE:number = 2048;\r\n\r\n\tpublic static isBitmapDataValid(bitmapData:BitmapData):boolean\r\n\t{\r\n\t\tif (bitmapData == null) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn TextureUtils.isDimensionValid(bitmapData.width) && TextureUtils.isDimensionValid(bitmapData.height);\r\n\r\n\t}\r\n\r\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\r\n\t{\r\n\t\tif (image == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn TextureUtils.isDimensionValid(image.width) && TextureUtils.isDimensionValid(image.height);\r\n\r\n\t}\r\n\r\n\tpublic static isDimensionValid(d:number):boolean\r\n\t{\r\n\r\n\t\treturn d >= 1 && d <= TextureUtils.MAX_SIZE && TextureUtils.isPowerOfTwo(d);\r\n\r\n\t}\r\n\r\n\tpublic static isPowerOfTwo(value:number):boolean\r\n\t{\r\n\r\n\t\treturn value? ( ( value & -value ) == value ) : false;\r\n\r\n\t}\r\n\r\n\tpublic static getBestPowerOf2(value:number):number\r\n\t{\r\n\t\tvar p:number = 1;\r\n\r\n\t\twhile (p < value)\r\n\t\t\tp <<= 1;\r\n\r\n\t\tif (p > TextureUtils.MAX_SIZE)\r\n\t\t\tp = TextureUtils.MAX_SIZE;\r\n\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nexport = TextureUtils","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\n\r\nclass Timer extends EventDispatcher\r\n{\r\n\r\n\tprivate _delay:number;\r\n\tprivate _repeatCount:number = 0;\r\n\tprivate _currentCount:number = 0;\r\n\tprivate _iid:number;\r\n\tprivate _running:boolean = false;\r\n\r\n\tconstructor(delay:number, repeatCount:number = 0)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\r\n\t\tthis._delay = delay;\r\n\t\tthis._repeatCount = repeatCount;\r\n\r\n\t\tif (isNaN(delay) || delay < 0) {\r\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic get currentCount():number\r\n\t{\r\n\r\n\t\treturn this._currentCount;\r\n\r\n\t}\r\n\r\n\tpublic get delay():number\r\n\t{\r\n\r\n\t\treturn this._delay;\r\n\r\n\t}\r\n\r\n\tpublic set delay(value:number)\r\n\t{\r\n\r\n\t\tthis._delay = value;\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t\tthis.start();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic get repeatCount():number\r\n\t{\r\n\r\n\t\treturn this._repeatCount;\r\n\t}\r\n\r\n\tpublic set repeatCount(value:number)\r\n\t{\r\n\r\n\t\tthis._repeatCount = value;\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t}\r\n\r\n\t\tthis._currentCount = 0;\r\n\r\n\t}\r\n\r\n\tpublic get running():boolean\r\n\t{\r\n\r\n\t\treturn this._running;\r\n\r\n\t}\r\n\r\n\tpublic start():void\r\n\t{\r\n\r\n\t\tthis._running = true;\r\n\t\tclearInterval(this._iid);\r\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\r\n\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\r\n\t\tthis._running = false;\r\n\t\tclearInterval(this._iid);\r\n\r\n\t}\r\n\r\n\tprivate tick():void\r\n\t{\r\n\r\n\t\tthis._currentCount++;\r\n\r\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\r\n\r\n\t\t\tthis.stop();\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport = Timer;","/**\r\n *\r\n *\r\n * @returns {number}\r\n */\r\nfunction getTimer():number\r\n{\r\n\t// number milliseconds of 1970/01/01\r\n\t// this different to AS3 implementation which gets the number of milliseconds\r\n\t// since instance of Flash player was initialised\r\n\treturn Date.now();\r\n}\r\n\r\nexport = getTimer;"],"sourceRoot":"./"}