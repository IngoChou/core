{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/AssetLoaderContext.ts",
    "awayjs-core/lib/library/AssetLoaderToken.ts",
    "awayjs-core/lib/library/AssetLoader.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_attributesBufferVO",
    "Array",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "invalidateLength",
    "_contentDirty",
    "buffer",
    "invalidateContent",
    "len",
    "invalidate",
    "dispose",
    "clone",
    "attributesBuffer",
    "bufferView",
    "view",
    "_internalClone",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_iAddAttributesBufferVO",
    "AttributesBufferVO",
    "push",
    "_iRemoveAttributesBufferVO",
    "splice",
    "indexOf",
    "_addView",
    "ViewVO",
    "_index",
    "_removeView",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/data/BitmapImage2D",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "BitmapImage2D",
    "width",
    "height",
    "transparent",
    "fillColor",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "index",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "ImageBase",
    "ImageUtils",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_imageObject",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/data/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "image2D",
    "repeat",
    "smooth",
    "mipmap",
    "_offsetX",
    "_offsetY",
    "_scaleX",
    "_scaleY",
    "_updateRect",
    "_repeat",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_pFormat",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerCube",
    "imageCube",
    "awayjs-core/lib/data/SpecularImage2D",
    "Point",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "w",
    "h",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/data/WaveAudio",
    "WaveAudio",
    "htmlAudioElement",
    "_htmlAudioElement",
    "awayjs-core/lib/errors/AbstractMethodError",
    "AbstractMethodError",
    "message",
    "id",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "name",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "addEventListener",
    "listener",
    "undefined",
    "getEventListenerIndex",
    "removeEventListener",
    "dispatchEvent",
    "event",
    "listenerArray",
    "hasEventListener",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "_changeEvent",
    "_redMultiplier",
    "_greenMultiplier",
    "_blueMultiplier",
    "_alphaMultiplier",
    "_redOffset",
    "_greenOffset",
    "_blueOffset",
    "_alphaOffset",
    "_invalidate",
    "clear",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "k",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "concat",
    "append",
    "lhs",
    "m111",
    "m121",
    "m131",
    "m141",
    "m112",
    "m122",
    "m132",
    "m142",
    "m113",
    "m123",
    "m133",
    "m143",
    "m114",
    "m124",
    "m134",
    "m144",
    "m211",
    "m221",
    "m231",
    "m241",
    "m212",
    "m222",
    "m232",
    "m242",
    "m213",
    "m223",
    "m233",
    "m243",
    "m214",
    "m224",
    "m234",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "slice",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "vec",
    "mr",
    "scale",
    "sqrt",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "identity",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m21",
    "m31",
    "m41",
    "m12",
    "m22",
    "m32",
    "m42",
    "m13",
    "m23",
    "m33",
    "m43",
    "m14",
    "m24",
    "m34",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "cos",
    "sin",
    "transformVectors",
    "oRawData",
    "rad",
    "tmp1",
    "tmp2",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Matrix",
    "tx",
    "ty",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "rotation",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_scaleU",
    "_scaleV",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "scaleBy",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "AssetLoader",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loadingSessionsGarbage",
    "_assetDictionary",
    "_loadingSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoadingSessions",
    "killLoadingSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loadingSessionGC",
    "pop",
    "clearTimeout",
    "stop",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "awayjs-core/lib/library/AssetLoaderContext",
    "AssetLoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/AssetLoaderToken",
    "AssetLoaderToken",
    "_iLoader",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_token",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsingAfterDependencies",
    "_iSuccess",
    "resolve",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "substr",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "floor",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ParserUtils",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "start",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "arrayBufferToBase64",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "window",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "Audio",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "createObjectURL",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "audioToWaveAudio",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "bitmap",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "HTMLAudioElement",
    "parseFileType",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "minX",
    "maxX",
    "minY",
    "maxY",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "clearRect",
    "fillStyle",
    "bmpd",
    "drawImage",
    "save",
    "setTransform",
    "restore",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "max",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "_currentTime",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now",
    "awayjs-core/lib/vos/IAttributesBufferVO",
    "awayjs-core/lib/vos/IAttributesVO"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAttributesBufferVO\t\t= require(\"awayjs-core/lib/vos/IAttributesBufferVO\");\n\nclass AttributesBuffer extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\n\tprivate _attributesBufferVO:Array<IAttributesBufferVO> = new Array<IAttributesBufferVO>();\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.invalidateLength();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.invalidateLength();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tvar len:number = this._attributesBufferVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._attributesBufferVO[i].invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateLength():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\n\t\tthis._lengthDirty = true;\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _iAddAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.push(AttributesBufferVO);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _iRemoveAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.splice(this._attributesBufferVO.indexOf(AttributesBufferVO), 1);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _addView(view:AttributesView)\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.invalidateLength();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView)\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.invalidateLength();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass AttributesView extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t}\n}\n\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short3Attributes;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:HTMLCanvasElement;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(width, height);\n\n\t\tthis._transparent = transparent;\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\t\t\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport = BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Array<number> = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport = BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = Image2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IImageObject\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass ImageBase extends AssetBase implements IAsset\n{\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._imageObject.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._imageObject[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.push(ImageObject);\n\n\t\treturn ImageObject;\n\t}\n\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\n\n\t\treturn ImageObject;\n\t}\n}\n\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = ImageCube;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _offsetX:number = 0;\n\tprivate _offsetY:number = 0;\n\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\n\tprivate _rect:Rectangle;\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D;\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get offsetX():number\n\t{\n\t\treturn this._offsetX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetY():number\n\t{\n\t\treturn this._offsetY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._scaleX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._scaleY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(image2D:Image2D = null, repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis.image2D = image2D;\n\n\t\tthis.repeat = repeat;\n\t\tthis.smooth = smooth;\n\t\tthis.mipmap = mipmap;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t\tif (this._imageRect)\n\t\t\tthis._rect = this._imageRect;\n\t\telse\n\t\t\tthis._rect = this.image2D.rect;\n\n\t\tif (this._imageRect) {\n\t\t\tthis._offsetX = this._imageRect.x/this.image2D.width;\n\t\t\tthis._offsetY = this._imageRect.y/this.image2D.height;\n\n\t\t\tthis._scaleX = this._imageRect.width/this.image2D.width;\n\t\t\tthis._scaleY = this._imageRect.height/this.image2D.height;\n\t\t} else {\n\t\t\tthis._offsetX = 0;\n\t\t\tthis._offsetY = 0;\n\n\t\t\tthis._scaleX = 1;\n\t\t\tthis._scaleY = 1;\n\t\t}\n\n\t}\n}\n\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n */\nclass SamplerBase extends AssetBase implements IAsset\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}\n\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t * The ImageCube object being referenced.\n\t */\n\tpublic imageCube:ImageCube;\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport = SpecularImage2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\t// TODO: hide HTMLAudioElement and provide proper interface for playback control (see TODO above).\n\tprivate _htmlAudioElement : HTMLAudioElement;\n\n\t/**\n\t *\n\t */\n\tconstructor(htmlAudioElement:HTMLAudioElement)\n\t{\n\t\tsuper();\n\t\tthis._htmlAudioElement = htmlAudioElement;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get htmlAudioElement()\n\t{\n\t\treturn this._htmlAudioElement;\n\t}\n\n\tpublic set htmlAudioElement(value : HTMLAudioElement)\n\t{\n\t\tthis._htmlAudioElement = value;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._htmlAudioElement = null;\n\t}\n}\n\nexport = WaveAudio;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport EventDispatcher\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport Event\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform extends EventDispatcher\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tprivate _alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    private _alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    private _blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    private _blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    private _greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    private _greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    private _redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    private _redOffset:number;\n\n\n    private _changeEvent:Event = new Event(Event.CHANGE);\n\n    public get alphaMultiplier():number\n    {\n        return this._alphaMultiplier;\n    }\n\n    public set alphaMultiplier(value:number)\n    {\n        this._alphaMultiplier = value;\n        this._invalidate();\n    }\n\n    public get alphaOffset():number\n    {\n        return this._alphaOffset;\n    }\n\n    public set alphaOffset(value:number)\n    {\n        this._alphaOffset = value;\n        this._invalidate();\n    }\n\n    public get redMultiplier():number\n    {\n        return this._redMultiplier;\n    }\n\n    public set redMultiplier(value:number)\n    {\n        this._redMultiplier = value;\n        this._invalidate();\n    }\n\n    public get redOffset():number\n    {\n        return this._redOffset;\n    }\n\n    public set redOffset(value:number)\n    {\n        this._redOffset = value;\n        this._invalidate();\n    }\n\n    public get greenMultiplier():number\n    {\n        return this._greenMultiplier;\n    }\n\n    public set greenMultiplier(value:number)\n    {\n        this._greenMultiplier = value;\n        this._invalidate();\n    }\n\n    public get greenOffset():number\n    {\n        return this._greenOffset;\n    }\n\n    public set greenOffset(value:number)\n    {\n        this._greenOffset = value;\n        this._invalidate();\n    }\n\n    public get blueMultiplier():number\n    {\n        return this._blueMultiplier;\n    }\n\n    public set blueMultiplier(value:number)\n    {\n        this._blueMultiplier = value;\n        this._invalidate();\n    }\n\n    public get blueOffset():number\n    {\n        return this._blueOffset;\n    }\n\n    public set blueOffset(value:number)\n    {\n        this._blueOffset = value;\n        this._invalidate();\n    }\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this._redOffset << 16) | ( this._greenOffset << 8) | this._blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis._redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis._greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis._blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis._redMultiplier = 0;\n\t\tthis._greenMultiplier = 0;\n\t\tthis._blueMultiplier = 0;\n\n        this._invalidate();\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n        super();\n\t\tthis._redMultiplier = redMultiplier;\n\t\tthis._greenMultiplier = greenMultiplier;\n\t\tthis._blueMultiplier = blueMultiplier;\n\t\tthis._alphaMultiplier = alphaMultiplier;\n\t\tthis._redOffset = redOffset;\n\t\tthis._greenOffset = greenOffset;\n\t\tthis._blueOffset = blueOffset;\n\t\tthis._alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this._redMultiplier = 1;\n        this._greenMultiplier = 1;\n        this._blueMultiplier = 1;\n        this._alphaMultiplier = 1;\n        this._redOffset = 0;\n        this._greenOffset = 0;\n        this._blueOffset = 0;\n        this._alphaOffset = 0;\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this._redMultiplier = source.redMultiplier;\n        this._greenMultiplier = source.greenMultiplier;\n        this._blueMultiplier = source.blueMultiplier;\n        this._alphaMultiplier = source.alphaMultiplier;\n        this._redOffset = source.redOffset;\n        this._greenOffset = source.greenOffset;\n        this._blueOffset = source.blueOffset;\n        this._alphaOffset = source.alphaOffset;\n    }\n\n    private _invalidate()\n    {\n        this.dispatchEvent(this._changeEvent);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this._redOffset += ct.redOffset * this._redMultiplier;\n        this._greenOffset += ct.greenOffset * this._greenMultiplier;\n        this._blueOffset += ct.blueOffset * this._blueMultiplier;\n        this._alphaOffset += ct.alphaOffset * this._alphaMultiplier;\n\n        this._redMultiplier *= ct.redMultiplier;\n        this._greenMultiplier *= ct.greenMultiplier;\n        this._blueMultiplier *= ct.blueMultiplier;\n        this._alphaMultiplier *= ct.alphaMultiplier;\n\n        this._invalidate();\n    }\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:number[] = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:number[];\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:number[] = null)\n\t{\n\t\tif (v != null && v.length == 16)\n\t\t\tthis.rawData = v.concat();\n\t\telse\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\tthis.append(m);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData.slice(0));\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar len:number = sourceMatrix3D.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tdest.rawData = this.rawData.slice(0);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\t// Initial Tests - Not OK\n\n\t\tvar vec:Vector3D[] = [];\n\t\tvar m = this.clone();\n\t\tvar mr = m.rawData;\n\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\n\t\tvar scale:Vector3D = new Vector3D();\n\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\n\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\n\t\t\tscale.z = -scale.z;\n\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\n\t\tvar rot = new Vector3D();\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\n\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\n\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\n\t\t\t\t}\n\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar m = new Matrix3D();\n\t\tm.position = new Vector3D(x, y, z);\n\t\tthis.prepend(m);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tif (components.length < 3) return false\n\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\n\n\t\tthis.identity();\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\n\n\t\tvar angle:number;\n\t\tangle = -components[1].x;\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\n\t\tangle = -components[1].y;\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\n\t\tangle = -components[1].z;\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\n\n\t\tthis.position = components[0];\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar oRawData:number[] = this.rawData.slice(0);\n\n\t\tthis.rawData[1] = oRawData[4];\n\t\tthis.rawData[2] = oRawData[8];\n\t\tthis.rawData[3] = oRawData[12];\n\t\tthis.rawData[4] = oRawData[1];\n\t\tthis.rawData[6] = oRawData[9];\n\t\tthis.rawData[7] = oRawData[13];\n\t\tthis.rawData[8] = oRawData[2];\n\t\tthis.rawData[9] = oRawData[6];\n\t\tthis.rawData[11] = oRawData[14];\n\t\tthis.rawData[12] = oRawData[3];\n\t\tthis.rawData[13] = oRawData[7];\n\t\tthis.rawData[14] = oRawData[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.loadData(data, '', context, ns, parser);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\t//var asset : IAsset;\n\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\n\t\t\t\tasset = this._assets[ c ];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t\t/*\n\t\t\t for each (asset in _assets)\n\t\t\t asset.dispose();\n\t\t\t */\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoadingSessions()\n\t{\n\t\tvar i:number;\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tvar length:number = this._loadingSessions.length;\n\n\t\tfor (i = 0; i < length; i++)\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\n\n\t\tthis._loadingSessions = null;\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar l:number = this._assets.length;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\n\t\tthis._loadingSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loadingSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\n\t}\n\n\tprivate loadingSessionGC():void\n\t{\n\t\tvar loader:AssetLoader;\n\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\n\t\t\tloader = this._loadingSessionsGarbage.pop();\n\t\t\tthis.killLoadingSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\n\t}\n\n\tprivate killLoadingSession(loader:AssetLoader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "class AssetLoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.AssetLoader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = AssetLoaderContext;",
    "import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n\n/**\n * Dispatched when a skybox asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a camera3d asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a mesh asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a geometry asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton pose asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a container asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture projector asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a material asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a animator asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation set has been constructed from a group of animation state resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation node has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light picker asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an effect method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an shadow map method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Instances of this class are returned as tokens by loading operations\n * to provide an object on which events can be listened for in cases where\n * the actual asset loader is not directly available (e.g. when using the\n * AssetLibrary to perform the load.)\n *\n * By listening for events on this class instead of directly on the\n * AssetLibrary, one can distinguish different loads from each other.\n *\n * The token will dispatch all events that the original AssetLoader dispatches,\n * while not providing an interface to obstruct the load and is as such a\n * safer return value for loader wrappers than the loader itself.\n */\nclass AssetLoaderToken extends EventDispatcher\n{\n\tpublic _iLoader:AssetLoader;\n\n\tconstructor(loader:AssetLoader)\n\t{\n\t\tsuper();\n\n\t\tthis._iLoader = loader;\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.addEventListener(type, listener);\n\t}\n\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.removeEventListener(type, listener);\n\t}\n\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\n\t{\n\t\treturn this._iLoader.hasEventListener(type, listener);\n\t}\n\n\t/*\n\t public willTrigger(type:string):boolean\n\t {\n\t return this._iLoader.willTrigger(type);\n\t }\n\t */\n}\n\nexport = AssetLoaderToken;",
    "import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The AssetLoader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass AssetLoader extends EventDispatcher\n{\n\tprivate _context:AssetLoaderContext;\n\tprivate _token:AssetLoaderToken;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\n\t\t\tAssetLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * AssetLoader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = id;\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/')\n\t\t\tend = end.substr(1);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsingAfterDependencies();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._token = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\n\t\t\t\treturn new AssetLoader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when AssetLoader does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = AssetLoader;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\n * and AssetLibrary instead in most cases.\n *\n * @see AssetLoader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see AssetLoader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsingAfterDependencies()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\tprivate static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n\n\tpublic static audioToWaveAudio(htmlAudioElement:HTMLAudioElement):WaveAudio\n\t{\n\t\treturn new WaveAudio(htmlAudioElement);\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar bitmap:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tbitmap = new Sampler2D(this._imageData);\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tbitmap.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tbitmap.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(bitmap, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport = TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass WaveAudioParser extends ParserBase\n{\n\tprivate _loadingImage:boolean;\n\tprivate _htmlAudioElement:HTMLAudioElement;\n\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data instanceof HTMLAudioElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:WaveAudio;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\t\telse if (this._htmlAudioElement) {\n\t\t\tasset = ParserUtils.audioToWaveAudio(this._htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t}\n\t\telse if (this.data instanceof HTMLAudioElement) {// Parse HTMLImageElement\n\t\t\tvar htmlAudioElement:HTMLAudioElement = <HTMLAudioElement> this.data;\n\t\t\tasset = ParserUtils.audioToWaveAudio(htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t}\n\t\telse if (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tvar filetype = WaveAudioParser.parseFileType(ba);\n\t\t\tvar htmlAudioElement:HTMLAudioElement = ParserUtils.byteArrayToAudio(ba, filetype);\n\t\t\tasset = ParserUtils.audioToWaveAudio(htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t}\n\t\telse if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tvar filetype = WaveAudioParser.parseFileType(this.data.arraybytes);\n\t\t\tthis._htmlAudioElement = ParserUtils.arrayBufferToAudio(this.data, filetype);\n\n\t\t\tasset = ParserUtils.audioToWaveAudio(this._htmlAudioElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t}\n\t\telse if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlAudioElement = ParserUtils.blobToAudio(this.data);\n\n\t\t\tthis._htmlAudioElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\t\tconsole.log(\"WaveAudio: \");\n\n\t\tba.position = 0;\n\t\tif (ba.readUnsignedShort() & 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport = WaveAudioParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number = 0;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = 4;\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\n\t\tif (length == null) {\n\t\t\tlength = bytes.length;\n\t\t}\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length) {\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t\t}\n\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 2;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tpublic readInt():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\n\t}\n\n\tpublic readShort():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\t\treturn short;\n\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\t\treturn double;\n\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = ImageUtils",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapImage2D;\n\n\t/**\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapImage2D;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\t//use (OR) to create non-square texture mipmaps\n\t\twhile (w >= 1 || h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t} else {\n\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport = XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}