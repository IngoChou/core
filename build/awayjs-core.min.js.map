{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-core/lib/base/bitmapdatachannel.ts","awayjs-core/lib/base/bitmapdata.ts","awayjs-core/lib/bounds/axisalignedboundingbox.ts","awayjs-core/lib/bounds/boundingsphere.ts","awayjs-core/lib/bounds/boundingvolumebase.ts","awayjs-core/lib/bounds/nullbounds.ts","awayjs-core/lib/errors/abstractmethoderror.ts","awayjs-core/lib/errors/argumenterror.ts","awayjs-core/lib/errors/documenterror.ts","awayjs-core/lib/errors/error.ts","awayjs-core/lib/errors/partialimplementationerror.ts","awayjs-core/lib/errors/rangeerror.ts","awayjs-core/lib/events/assetevent.ts","awayjs-core/lib/events/eventdispatcher.ts","awayjs-core/lib/events/event.ts","awayjs-core/lib/events/httpstatusevent.ts","awayjs-core/lib/events/ioerrorevent.ts","awayjs-core/lib/events/loaderevent.ts","awayjs-core/lib/events/parserevent.ts","awayjs-core/lib/events/progressevent.ts","awayjs-core/lib/events/projectionevent.ts","awayjs-core/lib/events/timerevent.ts","awayjs-core/lib/geom/box.ts","awayjs-core/lib/geom/colortransform.ts","awayjs-core/lib/geom/mathconsts.ts","awayjs-core/lib/geom/matrix3dutils.ts","awayjs-core/lib/geom/matrix3d.ts","awayjs-core/lib/geom/matrix.ts","awayjs-core/lib/geom/orientation3d.ts","awayjs-core/lib/geom/perspectiveprojection.ts","awayjs-core/lib/geom/plane3d.ts","awayjs-core/lib/geom/planeclassification.ts","awayjs-core/lib/geom/point.ts","awayjs-core/lib/geom/poissonlookup.ts","awayjs-core/lib/geom/quaternion.ts","awayjs-core/lib/geom/rectangle.ts","awayjs-core/lib/geom/uvtransform.ts","awayjs-core/lib/geom/vector3d.ts","awayjs-core/lib/library/assetlibrarybundle.ts","awayjs-core/lib/library/assetlibraryiterator.ts","awayjs-core/lib/library/assetlibrary.ts","awayjs-core/lib/library/assetloadercontext.ts","awayjs-core/lib/library/assetloadertoken.ts","awayjs-core/lib/library/assetloader.ts","awayjs-core/lib/library/assettype.ts","awayjs-core/lib/library/conflictprecedence.ts","awayjs-core/lib/library/conflictstrategybase.ts","awayjs-core/lib/library/conflictstrategy.ts","awayjs-core/lib/library/errorconflictstrategy.ts","awayjs-core/lib/library/idutil.ts","awayjs-core/lib/library/ignoreconflictstrategy.ts","awayjs-core/lib/library/namedassetbase.ts","awayjs-core/lib/library/numsuffixconflictstrategy.ts","awayjs-core/lib/net/crossdomainpolicy.ts","awayjs-core/lib/net/urlloaderdataformat.ts","awayjs-core/lib/net/urlloader.ts","awayjs-core/lib/net/urlrequestmethod.ts","awayjs-core/lib/net/urlrequest.ts","awayjs-core/lib/net/urlvariables.ts","awayjs-core/lib/parsers/cubetextureparser.ts","awayjs-core/lib/parsers/parserbase.ts","awayjs-core/lib/parsers/parserdataformat.ts","awayjs-core/lib/parsers/parserutils.ts","awayjs-core/lib/parsers/resourcedependency.ts","awayjs-core/lib/parsers/texture2dparser.ts","awayjs-core/lib/projections/coordinatesystem.ts","awayjs-core/lib/projections/freematrixprojection.ts","awayjs-core/lib/projections/obliquenearplaneprojection.ts","awayjs-core/lib/projections/orthographicoffcenterprojection.ts","awayjs-core/lib/projections/orthographicprojection.ts","awayjs-core/lib/projections/perspectiveprojection.ts","awayjs-core/lib/projections/projectionbase.ts","awayjs-core/lib/textures/bitmapcubetexture.ts","awayjs-core/lib/textures/bitmaptexture.ts","awayjs-core/lib/textures/cubetexturebase.ts","awayjs-core/lib/textures/imagecubetexture.ts","awayjs-core/lib/textures/imagetexture.ts","awayjs-core/lib/textures/mipmapgenerator.ts","awayjs-core/lib/textures/rendertexture.ts","awayjs-core/lib/textures/specularbitmaptexture.ts","awayjs-core/lib/textures/texture2dbase.ts","awayjs-core/lib/textures/textureproxybase.ts","awayjs-core/lib/ui/keyboard.ts","awayjs-core/lib/utils/bytearraybase.ts","awayjs-core/lib/utils/bytearraybuffer.ts","awayjs-core/lib/utils/bytearray.ts","awayjs-core/lib/utils/css.ts","awayjs-core/lib/utils/colorutils.ts","awayjs-core/lib/utils/debug.ts","awayjs-core/lib/utils/requestanimationframe.ts","awayjs-core/lib/utils/textureutils.ts","awayjs-core/lib/utils/timer.ts","awayjs-core/lib/utils/gettimer.ts"],"names":[],"mappings":"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","file":"awayjs-core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class BitmapDataChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapDataChannel;","import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n *\n */\nclass BitmapData\n{\n\tprivate _imageCanvas:HTMLCanvasElement;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _rect:Rectangle;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @param transparent\n\t * @param fillColor\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tthis._transparent = transparent;\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic unlock()\n\t{\n\t\tthis._locked = false;\n\n\t\tif (this._imageData) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param color\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tif (!this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param color\n\t */\n\tpublic setPixel(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\tthis._imageData.data[index + 3] = 255;\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param rect\n\t * @param inputByteArray\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tinputByteArray.position = 0;\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param color\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\tpublic setVector(rect:Rectangle, inputVector:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\t\targb = ColorUtils.float32ColorToARGB(inputVector[i + j*rect.width]);\n\t\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Copy an HTMLImageElement or BitmapData object\n\t *\n\t * @param img {BitmapData} / {HTMLImageElement}\n\t * @param sourceRect - source rectange to copy from\n\t * @param destRect - destinatoin rectange to copy to\n\t */\n\tpublic drawImage(img:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic drawImage(img:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic drawImage(img:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (this._locked) {\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._drawImage(img, sourceRect, destRect);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tthis._drawImage(img, sourceRect, destRect)\n\t\t}\n\t}\n\n\tprivate _drawImage(img:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _drawImage(img:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _drawImage(img:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (img instanceof BitmapData)\n\t\t\tthis._context.drawImage(img.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\telse if (img instanceof HTMLImageElement)\n\t\t\tthis._context.drawImage(img, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\t/**\n\t *\n\t * @param bmpd\n\t * @param sourceRect\n\t * @param destRect\n\t */\n\tpublic copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\n\t\t}\n\n\t}\n\n\tprivate _copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\n\t\tif (bmpd instanceof BitmapData) {\n\t\t\tthis._context.drawImage(bmpd.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\t} else if (bmpd instanceof HTMLImageElement) {\n\t\t\tthis._context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param rect\n\t * @param color\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._fillRect(rect, color);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t}\n\t\telse {\n\t\t\tthis._fillRect(rect, color);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param rect\n\t * @param color\n\t */\n\tprivate _fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (color == 0x0 && this._transparent) {\n\t\t\tthis._context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (this._transparent)\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tthis._context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t * @param matrix\n\t */\n\tpublic draw(source:BitmapData, matrix?:Matrix);\n\tpublic draw(source:HTMLImageElement, matrix?:Matrix);\n\tpublic draw(source:any, matrix?:Matrix)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._draw(source, matrix);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tthis._draw(source, matrix);\n\t\t}\n\t}\n\n\tprivate _draw(source:BitmapData, matrix:Matrix);\n\tprivate _draw(source:HTMLImageElement, matrix:Matrix);\n\tprivate _draw(source:any, matrix:Matrix)\n\t{\n\t\tif (source instanceof BitmapData) {\n\t\t\tthis._context.save();\n\n\t\t\tif (matrix != null)\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\t\tthis._context.drawImage(source.canvas, 0, 0);\n\t\t\tthis._context.restore();\n\n\t\t} else if (source instanceof HTMLImageElement) {\n\t\t\tthis._context.save();\n\n\t\t\tif (matrix != null)\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\t\tthis._context.drawImage(source, 0, 0);\n\t\t\tthis._context.restore();\n\t\t}\n\n\t}\n\n\tpublic copyChannel(sourceBitmap:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.imageData;\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar sourceData:Array<number> = sourceBitmap.imageData.data;\n\t\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar data:Array<number> = this._imageData.data;\n\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {ImageData}\n\t */\n\tpublic set imageData(value:ImageData)\n\t{\n\t\tthis._context.putImageData(value, 0, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic get imageData():ImageData\n\t{\n\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn <number> this._imageCanvas.width;\n\t}\n\n\t/**\n\t *\n\t * @param {number}\n\t */\n\tpublic set width(value:number)\n\t{\n\t\tthis._rect.width = value;\n\t\tthis._imageCanvas.width = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn <number> this._imageCanvas.height;\n\t}\n\n\t/**\n\t *\n\t * @param {number}\n\t */\n\tpublic set height(value:number)\n\t{\n\t\tthis._rect.height = value;\n\t\tthis._imageCanvas.height = value;\n\t}\n\n\t/**\n\t *\n\t * @param {Rectangle}\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic get canvas()\n\t{\n\t\treturn this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic get context():CanvasRenderingContext2D\n\t{\n\t\treturn this._context;\n\t}\n\n\tpublic clone():BitmapData {\n\t\tvar t:BitmapData = new BitmapData(this.width, this.height, this.transparent);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n}\n\nexport = BitmapData;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\n\tpublic get centerX():number {\n\t\treturn this._centerX;\n\t}\n\n\tpublic get centerY():number {\n\t\treturn this._centerY;\n\t}\n\n\tpublic get centerZ():number {\n\t\treturn this._centerZ;\n\t}\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tsuper.nullify();\n\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this._centerX\n\t\tvar py:number = position.y - this._centerY\n\t\tvar pz:number = position.z - this._centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( this._halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -this._halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( this._halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -this._halfExtentsX && ix < this._halfExtentsX && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -this._halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -this._halfExtentsX && ix < this._halfExtentsX && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( this._halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && ix > -this._halfExtentsX && ix < this._halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -this._halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && ix > -this._halfExtentsX && ix < this._halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this._centerX, py:number = position.y - this._centerY, pz:number = position.z - this._centerZ;\n\t\treturn px <= this._halfExtentsX && px >= -this._halfExtentsX && py <= this._halfExtentsY && py >= -this._halfExtentsY && pz <= this._halfExtentsZ && pz >= -this._halfExtentsZ;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\n\t\tthis._centerX = (maxX + minX)*.5;\n\t\tthis._centerY = (maxY + minY)*.5;\n\t\tthis._centerZ = (maxZ + minZ)*.5;\n\t\tthis._halfExtentsX = (maxX - minX)*.5;\n\t\tthis._halfExtentsY = (maxY - minY)*.5;\n\t\tthis._halfExtentsZ = (maxZ - minZ)*.5;\n\n\t\tsuper.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tvar clone:AxisAlignedBoundingBox = new AxisAlignedBoundingBox();\n\t\tclone.fromExtremes(this._aabb.x, this._aabb.y + this._aabb.height, this._aabb.z, this._aabb.x + this._aabb.width, this._aabb.y, this._aabb.z + this._aabb.depth);\n\t\treturn clone;\n\t}\n\n\tpublic get halfExtentsX():number\n\t{\n\t\treturn this._halfExtentsX;\n\t}\n\n\tpublic get halfExtentsY():number\n\t{\n\t\treturn this._halfExtentsY;\n\t}\n\n\tpublic get halfExtentsZ():number\n\t{\n\t\treturn this._halfExtentsZ;\n\t}\n\n\t/**\n\t * Finds the closest point on the bounding volume to another given point. This can be used for maximum error calculations for content within a given bound.\n\t * @param point The point for which to find the closest point on the bounding volume\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this._aabb.x)\n\t\t\tp = this._aabb.x;\n\t\tif (p > this._aabb.x + this._aabb.width)\n\t\t\tp = this._aabb.x + this._aabb.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this._aabb.y + this._aabb.height)\n\t\t\tp = this._aabb.y + this._aabb.height;\n\t\tif (p > this._aabb.y)\n\t\t\tp = this._aabb.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this._aabb.z)\n\t\t\tp = this._aabb.z;\n\t\tif (p > this._aabb.z + this._aabb.depth)\n\t\t\tp = this._aabb.z + this._aabb.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tvar aabb:AxisAlignedBoundingBox = <AxisAlignedBoundingBox> bounds;\n\t\tvar cx:number = aabb._centerX;\n\t\tvar cy:number = aabb._centerY;\n\t\tvar cz:number = aabb._centerZ;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tif (m11 < 0)\n\t\t\tm11 = -m11;\n\t\tif (m12 < 0)\n\t\t\tm12 = -m12;\n\t\tif (m13 < 0)\n\t\t\tm13 = -m13;\n\t\tif (m21 < 0)\n\t\t\tm21 = -m21;\n\t\tif (m22 < 0)\n\t\t\tm22 = -m22;\n\t\tif (m23 < 0)\n\t\t\tm23 = -m23;\n\t\tif (m31 < 0)\n\t\t\tm31 = -m31;\n\t\tif (m32 < 0)\n\t\t\tm32 = -m32;\n\t\tif (m33 < 0)\n\t\t\tm33 = -m33;\n\t\tvar hx:number = aabb._halfExtentsX;\n\t\tvar hy:number = aabb._halfExtentsY;\n\t\tvar hz:number = aabb._halfExtentsZ;\n\t\tthis._halfExtentsX = hx*m11 + hy*m12 + hz*m13;\n\t\tthis._halfExtentsY = hx*m21 + hy*m22 + hz*m23;\n\t\tthis._halfExtentsZ = hx*m31 + hy*m32 + hz*m33;\n\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = this._halfExtentsX*2;\n\t\tthis._aabb.x = this._centerX - this._halfExtentsX;\n\t\tthis._aabb.y = this._centerY + this._halfExtentsY;\n\t\tthis._aabb.z = this._centerZ - this._halfExtentsZ;\n\t}\n}\n\nexport = AxisAlignedBoundingBox;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tsuper.nullify();\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic fromSphere(center:Vector3D, radius:number)\n\t{\n\t\tthis._centerX = center.x;\n\t\tthis._centerY = center.y;\n\t\tthis._centerZ = center.z;\n\t\tthis._radius = radius;\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = radius*2;\n\t\tthis._aabb.x = this._centerX - radius;\n\t\tthis._aabb.y = this._centerY + radius;\n\t\tthis._aabb.z = this._centerZ - radius;\n\t\tthis._pAabbPointsDirty = true;\n\t}\n\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\t\tthis._centerX = (maxX + minX)*.5;\n\t\tthis._centerY = (maxY + minY)*.5;\n\t\tthis._centerZ = (maxZ + minZ)*.5;\n\n\t\tvar d:number = maxX - minX;\n\t\tvar y:number = maxY - minY;\n\t\tvar z:number = maxZ - minZ;\n\n\t\tif (y > d)\n\t\t\td = y;\n\n\t\tif (z > d)\n\t\t\td = z;\n\n\t\tthis._radius = d*Math.sqrt(.5);\n\t\tsuper.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tvar clone:BoundingSphere = new BoundingSphere();\n\t\tclone.fromSphere(new Vector3D(this._centerX, this._centerY, this._centerZ), this._radius);\n\t\treturn clone;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar px:number = position.x - this._centerX, py:number = position.y - this._centerY, pz:number = position.z - this._centerZ;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this._radius*this._radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this._centerX;\n\t\tvar py:number = position.y - this._centerY;\n\t\tvar pz:number = position.z - this._centerZ;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this._radius;\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tvar sphere:BoundingSphere = <BoundingSphere> bounds;\n\t\tvar cx:number = sphere._centerX;\n\t\tvar cy:number = sphere._centerY;\n\t\tvar cz:number = sphere._centerZ;\n\t\tvar raw:Array<number> = new Array<number>(16);\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tif (m11 < 0)\n\t\t\tm11 = -m11;\n\t\tif (m12 < 0)\n\t\t\tm12 = -m12;\n\t\tif (m13 < 0)\n\t\t\tm13 = -m13;\n\t\tif (m21 < 0)\n\t\t\tm21 = -m21;\n\t\tif (m22 < 0)\n\t\t\tm22 = -m22;\n\t\tif (m23 < 0)\n\t\t\tm23 = -m23;\n\t\tif (m31 < 0)\n\t\t\tm31 = -m31;\n\t\tif (m32 < 0)\n\t\t\tm32 = -m32;\n\t\tif (m33 < 0)\n\t\t\tm33 = -m33;\n\n\t\tvar r:number = sphere._radius;\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt(rx*rx + ry*ry + rz*rz);\n\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = this._radius*2;\n\t\tthis._aabb.x = this._centerX - this._radius;\n\t\tthis._aabb.y = this._centerY + this._radius;\n\t\tthis._aabb.z = this._centerZ - this._radius;\n\t}\n}\n\nexport = BoundingSphere;","import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass BoundingVolumeBase\n{\n\tpublic _aabb:Box;\n\tpublic _pAabbPoints:Array<number> = new Array<number>();\n\tpublic _pAabbPointsDirty:boolean = true;\n\n\tpublic minX:number;\n\tpublic minY:number;\n\tpublic minZ:number;\n\tpublic maxX:number;\n\tpublic maxY:number;\n\tpublic maxZ:number;\n\n\tconstructor()\n\t{\n\t\tthis._aabb = new Box();\n\t}\n\n\tpublic get aabb():Box\n\t{\n\t\treturn this._aabb;\n\t}\n\n\tpublic get aabbPoints():Array<number>\n\t{\n\t\tif (this._pAabbPointsDirty)\n\t\t\tthis.pUpdateAABBPoints();\n\n\t\treturn this._pAabbPoints;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._aabb.x = this._aabb.y = this._aabb.z = 0;\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = 0;\n\t\tthis._pAabbPointsDirty = true;\n\t}\n\n\tpublic fromVertices(vertices:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar len:number = vertices.length;\n\n\t\tif (len == 0) {\n\t\t\tthis.nullify();\n\t\t\treturn;\n\t\t}\n\n\t\tvar v:number;\n\n\t\tthis.minX = this.maxX = vertices[i++];\n\t\tthis.minY = this.maxY = vertices[i++];\n\t\tthis.minZ = this.maxZ = vertices[i++];\n\n\t\twhile (i < len) {\n\t\t\tv = vertices[i++];\n\t\t\tif (v < this.minX)\n\t\t\t\tthis.minX = v; else if (v > this.maxX)\n\t\t\t\tthis.maxX = v;\n\t\t\tv = vertices[i++];\n\t\t\tif (v < this.minY)\n\t\t\t\tthis.minY = v; else if (v > this.maxY)\n\t\t\t\tthis.maxY = v;\n\t\t\tv = vertices[i++];\n\t\t\tif (v < this.minZ)\n\t\t\t\tthis.minZ = v; else if (v > this.maxZ)\n\t\t\t\tthis.maxZ = v;\n\t\t}\n\n\t\tthis.fromExtremes(this.minX, this.minY, this.minZ, this.maxX, this.maxY, this.maxZ);\n\t}\n\n\tpublic fromSphere(center:Vector3D, radius:number)\n\t{\n\t\tthis.fromExtremes(center.x - radius, center.y - radius, center.z - radius, center.x + radius, center.y + radius, center.z + radius);\n\t}\n\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\t\tthis._aabb.x = minX;\n\t\tthis._aabb.y = maxY;\n\t\tthis._aabb.z = minZ;\n\t\tthis._aabb.width = maxX - minX;\n\t\tthis._aabb.height = maxY - minY;\n\t\tthis._aabb.depth = maxZ - minZ;\n\t\tthis._pAabbPointsDirty = true;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic overlaps(bounds:BoundingVolumeBase):boolean\n\t{\n\t\treturn this._aabb.intersects(bounds.aabb);\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic pUpdateAABBPoints()\n\t{\n\t\tthis.minX = this._aabb.x;\n\t\tthis.minY = this._aabb.y - this._aabb.height;\n\t\tthis.minZ = this._aabb.z;\n\t\tthis.maxX = this._aabb.x + this._aabb.width;\n\t\tthis.maxY = this._aabb.y;\n\t\tthis.maxZ = this._aabb.z + this._aabb.depth;\n\n\t\tthis._pAabbPoints[0] = this.minX;\n\t\tthis._pAabbPoints[1] = this.minY;\n\t\tthis._pAabbPoints[2] = this.minZ;\n\t\tthis._pAabbPoints[3] = this.maxX;\n\t\tthis._pAabbPoints[4] = this.minY;\n\t\tthis._pAabbPoints[5] = this.minZ;\n\t\tthis._pAabbPoints[6] = this.minX;\n\t\tthis._pAabbPoints[7] = this.maxY;\n\t\tthis._pAabbPoints[8] = this.minZ;\n\t\tthis._pAabbPoints[9] = this.maxX;\n\t\tthis._pAabbPoints[10] = this.maxY;\n\t\tthis._pAabbPoints[11] = this.minZ;\n\t\tthis._pAabbPoints[12] = this.minX;\n\t\tthis._pAabbPoints[13] = this.minY;\n\t\tthis._pAabbPoints[14] = this.maxZ;\n\t\tthis._pAabbPoints[15] = this.maxX;\n\t\tthis._pAabbPoints[16] = this.minY;\n\t\tthis._pAabbPoints[17] = this.maxZ;\n\t\tthis._pAabbPoints[18] = this.minX;\n\t\tthis._pAabbPoints[19] = this.maxY;\n\t\tthis._pAabbPoints[20] = this.maxZ;\n\t\tthis._pAabbPoints[21] = this.maxX;\n\t\tthis._pAabbPoints[22] = this.maxY;\n\t\tthis._pAabbPoints[23] = this.maxZ;\n\t\tthis._pAabbPointsDirty = false;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._alwaysIn = alwaysIn;\n\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = Number.POSITIVE_INFINITY;\n\t\tthis._aabb.x = this._aabb.y = this._aabb.z = this._alwaysIn? Number.NEGATIVE_INFINITY/2 : Number.POSITIVE_INFINITY;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n//\t\t//@override\n//\t\tpublic fromGeometry(geometry:away.base.Geometry)\n//\t\t{\n//\t\t}\n\n\t//@override\n\tpublic fromSphere(center:Vector3D, radius:number)\n\t{\n\t}\n\n\t//@override\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\t//@override\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tthis._alwaysIn = (<NullBounds> bounds)._alwaysIn;\n\t}\n}\n\nexport = NullBounds;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;","class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;","class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsRect(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;","import ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n\tpublic alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n\tpublic blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n\tpublic blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n\tpublic greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n\tpublic greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n\tpublic redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n\tpublic redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n\t/**\n\t * Concatenates the ColorTranform object specified by the <code>second</code>\n\t * parameter with the current ColorTransform object and sets the current\n\t * object as the result, which is an additive combination of the two color\n\t * transformations. When you apply the concatenated ColorTransform object,\n\t * the effect is the same as applying the <code>second</code> color\n\t * transformation after the <i>original</i> color transformation.\n\t *\n\t * @param second The ColorTransform object to be combined with the current\n\t *               ColorTransform object.\n\t */\n\tpublic concat(second:ColorTransform):void\n\t{\n\t\tthis.redMultiplier += second.redMultiplier;\n\t\tthis.greenMultiplier += second.greenMultiplier;\n\t\tthis.blueMultiplier += second.blueMultiplier;\n\t\tthis.alphaMultiplier += second.alphaMultiplier;\n\t}\n}\n\nexport = ColorTransform;","/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;","import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:number[] = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;","import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:number[];\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:number[] = null)\n\t{\n\t\tif (v != null && v.length == 16)\n\t\t\tthis.rawData = v.concat();\n\t\telse\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\tthis.append(m);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData.slice(0));\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar len:number = sourceMatrix3D.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tdest.rawData = this.rawData.slice(0);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\t// Initial Tests - Not OK\n\n\t\tvar vec:Vector3D[] = [];\n\t\tvar m = this.clone();\n\t\tvar mr = m.rawData;\n\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\n\t\tvar scale:Vector3D = new Vector3D();\n\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\n\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\n\t\t\tscale.z = -scale.z;\n\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\n\t\tvar rot = new Vector3D();\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\n\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\n\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\n\t\t\t\t}\n\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar m = new Matrix3D();\n\t\tm.position = new Vector3D(x, y, z);\n\t\tthis.prepend(m);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tif (components.length < 3) return false\n\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\n\n\t\tthis.identity();\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\n\n\t\tvar angle:number;\n\t\tangle = -components[1].x;\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\n\t\tangle = -components[1].y;\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\n\t\tangle = -components[1].z;\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\n\n\t\tthis.position = components[0];\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar oRawData:number[] = this.rawData.slice(0);\n\n\t\tthis.rawData[1] = oRawData[4];\n\t\tthis.rawData[2] = oRawData[8];\n\t\tthis.rawData[3] = oRawData[12];\n\t\tthis.rawData[4] = oRawData[1];\n\t\tthis.rawData[6] = oRawData[9];\n\t\tthis.rawData[7] = oRawData[13];\n\t\tthis.rawData[8] = oRawData[2];\n\t\tthis.rawData[9] = oRawData[6];\n\t\tthis.rawData[11] = oRawData[14];\n\t\tthis.rawData[12] = oRawData[3];\n\t\tthis.rawData[13] = oRawData[7];\n\t\tthis.rawData[14] = oRawData[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;","/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;","import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;","class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;","/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n","class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;","import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;","import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;","/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;","import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.loadData(data, '', context, ns, parser);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\t//var asset : IAsset;\n\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\n\t\t\t\tasset = this._assets[ c ];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t\t/*\n\t\t\t for each (asset in _assets)\n\t\t\t asset.dispose();\n\t\t\t */\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoadingSessions()\n\t{\n\t\tvar i:number;\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tvar length:number = this._loadingSessions.length;\n\n\t\tfor (i = 0; i < length; i++)\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\n\n\t\tthis._loadingSessions = null;\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar l:number = this._assets.length;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\n\t\tthis._loadingSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loadingSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\n\t}\n\n\tprivate loadingSessionGC():void\n\t{\n\t\tvar loader:AssetLoader;\n\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\n\t\t\tloader = this._loadingSessionsGarbage.pop();\n\t\t\tthis.killLoadingSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\n\t}\n\n\tprivate killLoadingSession(loader:AssetLoader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;","import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;","class AssetLoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.AssetLoader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = AssetLoaderContext;","import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n\n/**\n * Dispatched when a skybox asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a camera3d asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a mesh asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a geometry asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton pose asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a container asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture projector asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a material asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a animator asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation set has been constructed from a group of animation state resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation node has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light picker asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an effect method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an shadow map method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Instances of this class are returned as tokens by loading operations\n * to provide an object on which events can be listened for in cases where\n * the actual asset loader is not directly available (e.g. when using the\n * AssetLibrary to perform the load.)\n *\n * By listening for events on this class instead of directly on the\n * AssetLibrary, one can distinguish different loads from each other.\n *\n * The token will dispatch all events that the original AssetLoader dispatches,\n * while not providing an interface to obstruct the load and is as such a\n * safer return value for loader wrappers than the loader itself.\n */\nclass AssetLoaderToken extends EventDispatcher\n{\n\tpublic _iLoader:AssetLoader;\n\n\tconstructor(loader:AssetLoader)\n\t{\n\t\tsuper();\n\n\t\tthis._iLoader = loader;\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.addEventListener(type, listener);\n\t}\n\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.removeEventListener(type, listener);\n\t}\n\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\n\t{\n\t\treturn this._iLoader.hasEventListener(type, listener);\n\t}\n\n\t/*\n\t public willTrigger(type:string):boolean\n\t {\n\t return this._iLoader.willTrigger(type);\n\t }\n\t */\n}\n\nexport = AssetLoaderToken;","import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport CubeTextureParser\t\t= require(\"awayjs-core/lib/parsers/CubeTextureParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Texture2DParser\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The AssetLoader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass AssetLoader extends EventDispatcher\n{\n\tprivate _context:AssetLoaderContext;\n\tprivate _token:AssetLoaderToken;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Texture2DParser, CubeTextureParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\n\t\t\tAssetLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * AssetLoader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = id;\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/')\n\t\t\tend = end.substr(1);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsingAfterDependencies();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._token = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\n\t\t\t\treturn new AssetLoader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t\t\telse\n\t\t\t\tthrow new Error(message);\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = AssetLoader;","class AssetType\n{\n\tpublic static ANIMATION_NODE:string = 'animationNode';\n\tpublic static ANIMATION_SET:string = 'animationSet';\n\tpublic static ANIMATION_STATE:string = 'animationState';\n\tpublic static ANIMATOR:string = 'animator';\n\tpublic static BILLBOARD:string = 'billboard';\n\tpublic static CAMERA:string = 'camera';\n\tpublic static CONTAINER:string = 'container';\n\tpublic static EFFECTS_METHOD:string = 'effectsMethod';\n\tpublic static GEOMETRY:string = 'geometry';\n\tpublic static LINE_SEGMENT:string = 'lineSegment';\n\tpublic static LIGHT:string = 'light';\n\tpublic static LIGHT_PICKER:string = 'lightPicker';\n\tpublic static MATERIAL:string = 'material';\n\tpublic static MESH:string = 'mesh';\n\tpublic static TRIANGLE_SUB_MESH:string = 'triangleSubMesh';\n\tpublic static LINE_SUB_MESH:string = 'lineSubMesh';\n\tpublic static PRIMITIVE_PREFAB:string = 'primitivePrefab';\n\tpublic static SHADOW_MAP_METHOD:string = 'shadowMapMethod';\n\tpublic static SKELETON:string = 'skeleton';\n\tpublic static SKELETON_POSE:string = 'skeletonPose';\n\tpublic static SKYBOX:string = 'skybox';\n\tpublic static STATE_TRANSITION:string = 'stateTransition';\n\tpublic static TEXTURE:string = 'texture';\n\tpublic static TEXTURE_PROJECTOR:string = 'textureProjector';\n\tpublic static TIMELINE:string = 'timeline';\n}\n\nexport = AssetType;","/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;","import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;","import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;","import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;","class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;","import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass NamedAssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = NamedAssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = NamedAssetBase;","import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;","class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n","class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;","import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\n * and AssetLibrary instead in most cases.\n *\n * @see AssetLoader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;","class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;","import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;","class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ImageCubeTexture\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * CubeTextureParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass CubeTextureParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new CubeTextureParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:ImageCubeTexture = new ImageCubeTexture(\n\n\t\t\t\tthis._getHTMLImageElement(CubeTextureParser.posX), this._getHTMLImageElement(CubeTextureParser.negX), this._getHTMLImageElement(CubeTextureParser.posY), this._getHTMLImageElement(CubeTextureParser.negY), this._getHTMLImageElement(CubeTextureParser.posZ), this._getHTMLImageElement(CubeTextureParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('CubeTextureParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"CubeTextureParser: JSON data error - cubes require id of:   \\n\" + CubeTextureParser.posX + ', ' + CubeTextureParser.negX + ',  \\n' + CubeTextureParser.posY + ', ' + CubeTextureParser.negY + ',  \\n' + CubeTextureParser.posZ + ', ' + CubeTextureParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ CubeTextureParser.posX ] != null && this._imgDependencyDictionary[ CubeTextureParser.negX ] != null && this._imgDependencyDictionary[ CubeTextureParser.posY ] != null && this._imgDependencyDictionary[ CubeTextureParser.negY ] != null && this._imgDependencyDictionary[ CubeTextureParser.posZ ] != null && this._imgDependencyDictionary[ CubeTextureParser.negZ ] != null );\n\t}\n\n\tprivate _getHTMLImageElement(name:string):HTMLImageElement\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency) {\n\t\t\treturn <HTMLImageElement> (<ImageTexture> dependency.assets[0]).htmlImageElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n\nexport = CubeTextureParser;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see AssetLoader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* TODO: Implement ParserUtils;\n\t public _pGetTextData():string\n\t {\n\t return ParserUtils.toString(_data);\n\t }\n\n\t public _pGetByteData():ByteArray\n\t {\n\t return ParserUtils.toByteArray(_data);\n\t }\n\t */\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapDataValid(bitmapData:BitmapData):boolean\n\t{\n\t\tvar isValid:boolean = TextureUtils.isBitmapDataValid(bitmapData);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsingAfterDependencies()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n}\n\nexport = ParserBase;","/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;","import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data.arraybytes);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;","﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false)\n\t{\n\t\tthis._id = id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * Texture2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Texture2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Texture2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:Texture2DBase;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (TextureUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = new ImageTexture(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\n\t\t\tif (TextureUtils.isHTMLImageElementValid(<HTMLImageElement> this.data)) {\n\t\t\t\tasset = new ImageTexture(<HTMLImageElement> this.data);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (TextureUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = new ImageTexture(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = new ImageTexture(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Texture2DParser;","/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;","import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass BitmapCubeTexture extends CubeTextureBase\n{\n\tprivate _bitmapDatas:Array<BitmapData> = new Array<BitmapData>(6);\n\n\t/**\n\t * The texture on the cube's right face.\n\t */\n\tpublic get positiveX():BitmapData\n\t{\n\t\treturn this._bitmapDatas[0];\n\t}\n\n\tpublic set positiveX(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[0] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's left face.\n\t */\n\tpublic get negativeX():BitmapData\n\t{\n\t\treturn this._bitmapDatas[1];\n\t}\n\n\tpublic set negativeX(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[1] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's top face.\n\t */\n\tpublic get positiveY():BitmapData\n\t{\n\t\treturn this._bitmapDatas[2];\n\t}\n\n\tpublic set positiveY(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[2] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's bottom face.\n\t */\n\tpublic get negativeY():BitmapData\n\t{\n\t\treturn this._bitmapDatas[3];\n\t}\n\n\tpublic set negativeY(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[3] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's far face.\n\t */\n\tpublic get positiveZ():BitmapData\n\t{\n\t\treturn this._bitmapDatas[4];\n\t}\n\n\tpublic set positiveZ(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[4] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's near face.\n\t */\n\tpublic get negativeZ():BitmapData\n\t{\n\t\treturn this._bitmapDatas[5];\n\t}\n\n\tpublic set negativeZ(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[5] = value;\n\t}\n\n\tconstructor(posX:BitmapData, negX:BitmapData, posY:BitmapData, negY:BitmapData, posZ:BitmapData, negZ:BitmapData, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis._testSize(this._bitmapDatas[0] = posX);\n\t\tthis._testSize(this._bitmapDatas[1] = negX);\n\t\tthis._testSize(this._bitmapDatas[2] = posY);\n\t\tthis._testSize(this._bitmapDatas[3] = negY);\n\t\tthis._testSize(this._bitmapDatas[4] = posZ);\n\t\tthis._testSize(this._bitmapDatas[5] = negZ);\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(posX.width);\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t * @private\n\t */\n\tprivate _testSize(value:BitmapData)\n\t{\n\t\tif (value.width != value.height)\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\n\t\tif (!TextureUtils.isBitmapDataValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tvar len:number = this._bitmapDatas.length\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._bitmapDatas[i].dispose();\n\t\t\tthis._bitmapDatas[i] = null;\n\t\t}\n\n\t\tthis._bitmapDatas = null;\n\t}\n\n\tpublic _iGetTextureData(side:number):BitmapData\n\t{\n\t\treturn this._bitmapDatas[side];\n\t}\n}\n\nexport = BitmapCubeTexture;","﻿import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass BitmapTexture extends Texture2DBase\n{\n\tpublic _bitmapData:BitmapData;\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get bitmapData():BitmapData\n\t{\n\t\treturn this._bitmapData;\n\t}\n\n\tpublic set bitmapData(value:BitmapData)\n\t{\n\t\tif (this._bitmapData == value)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isBitmapDataValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._bitmapData = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(value.width, value.height);\n\t}\n\n\tconstructor(bitmapData:BitmapData, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis.bitmapData = bitmapData;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._bitmapData.dispose();\n\t\tthis._bitmapData = null;\n\t}\n\n\tpublic _iGetTextureData():BitmapData\n\t{\n\t\treturn this._bitmapData;\n\t}\n}\n\nexport = BitmapTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeTextureBase extends TextureProxyBase\n{\n\tpublic _mipmapDataArray:Array<Array<BitmapData>> = new Array<Array<BitmapData>>(6);\n\tpublic _mipmapDataDirtyArray:Array<boolean> = new Array<boolean>(6);\n\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _pSetSize(size:number)\n\t{\n\t\tif (this._pSize != size)\n\t\t\tthis.invalidateSize();\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\n\n\t\tthis._pSize = size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[i];\n\t\t\tvar len:number = mipmapData.length;\n\t\t\tfor (var j:number = 0; j < len; j++)\n\t\t\t\tMipmapGenerator.freeMipMapHolder(mipmapData[j]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tsuper.invalidateContent();\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\n\t}\n\n\tpublic _iGetMipmapData(side:number):Array<BitmapData>\n\t{\n\t\tif (this._mipmapDataDirtyArray[side]) {\n\t\t\tthis._mipmapDataDirtyArray[side] = false;\n\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array<BitmapData>());\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);\n\t\t}\n\n\t\treturn this._mipmapDataArray[side];\n\t}\n\n\tpublic _iGetTextureData(side:number):any\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CubeTextureBase;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass ImageCubeTexture extends CubeTextureBase\n{\n\tprivate _htmlImageElements:Array<HTMLImageElement> = new Array<HTMLImageElement>(6);\n\n\t/**\n\t * The texture on the cube's right face.\n\t */\n\tpublic get positiveX():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[0];\n\t}\n\n\tpublic set positiveX(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[0] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's left face.\n\t */\n\tpublic get negativeX():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[1];\n\t}\n\n\tpublic set negativeX(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[1] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's top face.\n\t */\n\tpublic get positiveY():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[2];\n\t}\n\n\tpublic set positiveY(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[2] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's bottom face.\n\t */\n\tpublic get negativeY():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[3];\n\t}\n\n\tpublic set negativeY(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[3] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's far face.\n\t */\n\tpublic get positiveZ():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[4];\n\t}\n\n\tpublic set positiveZ(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[4] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's near face.\n\t */\n\tpublic get negativeZ():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[5];\n\t}\n\n\tpublic set negativeZ(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[5] = value;\n\t}\n\n\tconstructor(posX:HTMLImageElement, negX:HTMLImageElement, posY:HTMLImageElement, negY:HTMLImageElement, posZ:HTMLImageElement, negZ:HTMLImageElement, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis._testSize(this._htmlImageElements[0] = posX);\n\t\tthis._testSize(this._htmlImageElements[1] = negX);\n\t\tthis._testSize(this._htmlImageElements[2] = posY);\n\t\tthis._testSize(this._htmlImageElements[3] = negY);\n\t\tthis._testSize(this._htmlImageElements[4] = posZ);\n\t\tthis._testSize(this._htmlImageElements[5] = negZ);\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(posX.width);\n\t}\n\n\tprivate _testSize(value:HTMLImageElement)\n\t{\n\t\tif (value.width != value.height)\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\tpublic _iGetTextureData(side:number):HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[side];\n\t}\n}\n\nexport = ImageCubeTexture;","﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass ImageTexture extends Texture2DBase\n{\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t *\n\t * @param htmlImageElement\n\t * @param generateMipmaps\n\t */\n\tconstructor(htmlImageElement:HTMLImageElement, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis.htmlImageElement = htmlImageElement;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlImageElement():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElement;\n\t}\n\n\tpublic set htmlImageElement(value:HTMLImageElement)\n\t{\n\t\tif (this._htmlImageElement == value)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._htmlImageElement = value;\n\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width, value.height);\n\t}\n\n\tpublic _iGetTextureData():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElement;\n\t}\n}\n\nexport = ImageTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\n/**\n * MipmapGenerator is a helper class that uploads BitmapData to a Texture including mipmap levels.\n */\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapData;\n\n\t/**\n\t * Uploads a BitmapData with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static generateMipMaps(source:HTMLImageElement, output?:Array<BitmapData>, alpha?:boolean);\n\tpublic static generateMipMaps(source:BitmapData, output?:Array<BitmapData>, alpha?:boolean);\n\tpublic static generateMipMaps(source:any, output?:Array<BitmapData>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapData;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\twhile (w >= 1 && h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], w, h);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapData, newW:number, newH:number):BitmapData\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator.freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapData(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static freeMipMapHolder(mipMapHolder:BitmapData)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;","﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass RenderTexture extends Texture2DBase\n{\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (value == this._pWidth)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isDimensionValid(value))\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(value, this._pHeight);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (value == this._pHeight)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isDimensionValid(value))\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(this._pWidth, value);\n\t}\n\n\tconstructor(width:number, height:number)\n\t{\n\t\tsuper(false);\n\n\t\tthis._pSetSize(width, height);\n\t}\n}\n\nexport = RenderTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport BitmapDataChannel\t\t= require(\"awayjs-core/lib/base/BitmapDataChannel\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\n/**\n * A convenience texture that encodes a specular map in the red channel, and the gloss map in the green channel, as expected by BasicSpecularMapMethod\n */\nclass SpecularBitmapTexture extends BitmapTexture\n{\n\tprivate _specularMap:BitmapData;\n\tprivate _glossMap:BitmapData;\n\t\n\tconstructor(specularMap:BitmapData = null, glossMap:BitmapData = null, generateMipmaps:boolean = true)\n\t{\n\t\tvar bmd:BitmapData = specularMap? specularMap : glossMap;\n\n\t\tbmd = bmd? new BitmapData(bmd.width, bmd.height, false, 0xffffff) : new BitmapData(1, 1, false, 0xffffff);\n\t\t\n\t\tsuper(bmd, generateMipmaps);\n\t\t\n\t\tthis.specularMap = specularMap;\n\t\tthis.glossMap = glossMap;\n\t}\n\t\n\tpublic get specularMap():BitmapData\n\t{\n\t\treturn this._specularMap;\n\t}\n\t\n\tpublic set specularMap(value:BitmapData)\n\t{\n\t\tthis._specularMap = value;\n\n\t\tthis.invalidateContent();\n\t\t\n\t\tthis._testSize();\n\t}\n\t\n\tpublic get glossMap():BitmapData\n\t{\n\t\treturn this._glossMap;\n\t}\n\t\n\tpublic set glossMap(value:BitmapData)\n\t{\n\t\tthis._glossMap = value;\n\t\tthis.invalidateContent();\n\t\t\n\t\tthis._testSize();\n\t}\n\t\n\tprivate _testSize()\n\t{\n\t\tvar w:Number, h:Number;\n\t\t\n\t\tif (this._specularMap) {\n\t\t\tw = this._specularMap.width;\n\t\t\th = this._specularMap.height;\n\t\t} else if (this._glossMap) {\n\t\t\tw = this._glossMap.width;\n\t\t\th = this._glossMap.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\t\t\n\t\tif (w != this._bitmapData.width && h != this._bitmapData.height) {\n\t\t\tvar oldBitmap:BitmapData = this._bitmapData;\n\t\t\tthis.bitmapData = new BitmapData(this._specularMap.width, this._specularMap.height, false, 0xffffff);\n\t\t\toldBitmap.dispose();\n\t\t}\n\t}\n\n\tpublic _iGetTextureData():BitmapData\n\t{\n\t\tvar rect:Rectangle = this._specularMap.rect;\n\t\tvar origin:Point = new Point();\n\n\t\tthis._bitmapData.fillRect(rect, 0xffffff);\n\n\t\tif (this._glossMap)\n\t\t\tthis._bitmapData.copyChannel(this._glossMap, rect, origin, BitmapDataChannel.GREEN, BitmapDataChannel.GREEN);\n\n\t\tif (this._specularMap)\n\t\t\tthis._bitmapData.copyChannel(this._specularMap, rect, origin, BitmapDataChannel.RED, BitmapDataChannel.RED);\n\n\t\treturn this._bitmapData;\n\t}\n}\n\nexport = SpecularBitmapTexture;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass Texture2DBase extends TextureProxyBase\n{\n\tprivate _mipmapData:Array<BitmapData>;\n\tprivate _mipmapDataDirty:boolean;\n\tpublic _pWidth:number;\n\tpublic _pHeight:number;\n\t\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._mipmapData) {\n\t\t\tvar len:number = this._mipmapData.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tMipmapGenerator.freeMipMapHolder(this._mipmapData[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tsuper.invalidateContent();\n\n\t\tthis._mipmapDataDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _pSetSize(width:number, height:number)\n\t{\n\t\tif (this._pWidth != width || this._pHeight != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._mipmapDataDirty = true;\n\n\t\tthis._pWidth = width;\n\t\tthis._pHeight = height;\n\t}\n\n\tpublic _iGetMipmapData():Array<BitmapData>\n\t{\n\t\tif (this._mipmapDataDirty) {\n\t\t\tthis._mipmapDataDirty = false;\n\n\t\t\tif (!this._mipmapData)\n\t\t\t\tthis._mipmapData = new Array<BitmapData>();\n\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(), this._mipmapData, true);\n\t\t}\n\n\t\treturn this._mipmapData;\n\t}\n\n\tpublic _iGetTextureData():any\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = Texture2DBase;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport ITextureData\t\t\t\t= require(\"awayjs-core/lib/pool/ITextureData\");\n\n/**\n *\n */\nclass TextureProxyBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pSize:number;\n\tpublic _pFormat:string = \"bgra\"\n\tprivate _hasMipmaps:boolean;\n\tprivate _generateMipmaps:boolean;\n\tprivate _textureData:Array<ITextureData> = new Array<ITextureData>();\n\t\n\t/**\n\t *\n\t */\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._generateMipmaps = this._hasMipmaps = generateMipmaps;\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._pSize;\n\t}\n\n\tpublic get hasMipmaps():boolean\n\t{\n\t\treturn this._hasMipmaps;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get generateMipmaps():boolean\n\t{\n\t\treturn this._generateMipmaps;\n\t}\n\n\tpublic set generateMipmaps(value:boolean)\n\t{\n\t\tif (this._generateMipmaps == value)\n\t\t\treturn;\n\n\t\tthis._generateMipmaps = this._hasMipmaps = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TEXTURE;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureData.length\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureData[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureData.length)\n\t\t\tthis._textureData[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureData.length)\n\t\t\tthis._textureData[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureData(textureData:ITextureData):ITextureData\n\t{\n\t\tthis._textureData.push(textureData);\n\n\t\treturn textureData;\n\t}\n\n\tpublic _iRemoveTextureData(textureData:ITextureData):ITextureData\n\t{\n\t\tthis._textureData.splice(this._textureData.indexOf(textureData), 1);\n\n\t\treturn textureData;\n\t}\n}\n\nexport = TextureProxyBase;","class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;","import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;","import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number = 0;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = 4;\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\n\t\tif (length == null) {\n\t\t\tlength = bytes.length;\n\t\t}\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length) {\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t\t}\n\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 2;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tpublic readInt():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\n\t}\n\n\tpublic readShort():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\t\treturn short;\n\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\t\treturn double;\n\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;","class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;","/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;","import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;","import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t} else {\n\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\n\nclass TextureUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isBitmapDataValid(bitmapData:BitmapData):boolean\n\t{\n\t\tif (bitmapData == null) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn TextureUtils.isDimensionValid(bitmapData.width) && TextureUtils.isDimensionValid(bitmapData.height);\n\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn TextureUtils.isDimensionValid(image.width) && TextureUtils.isDimensionValid(image.height);\n\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\n\t\treturn d >= 1 && d <= TextureUtils.MAX_SIZE && TextureUtils.isPowerOfTwo(d);\n\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\n\t\treturn value? ( ( value & -value ) == value ) : false;\n\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > TextureUtils.MAX_SIZE)\n\t\t\tp = TextureUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = TextureUtils","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\n\t\tsuper();\n\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0) {\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t\t}\n\n\t}\n\n\tpublic get currentCount():number\n\t{\n\n\t\treturn this._currentCount;\n\n\t}\n\n\tpublic get delay():number\n\t{\n\n\t\treturn this._delay;\n\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t}\n\n\t\tthis._currentCount = 0;\n\n\t}\n\n\tpublic get running():boolean\n\t{\n\n\t\treturn this._running;\n\n\t}\n\n\tpublic start():void\n\t{\n\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\n\t}\n\n\tpublic stop():void\n\t{\n\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\n\t}\n\n\tprivate tick():void\n\t{\n\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\n\t\t}\n\n\t}\n}\n\nexport = Timer;","/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"],"sourceRoot":"./"}