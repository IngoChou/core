{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "animators/IAnimationSet.ts",
    "animators/IAnimator.ts",
    "animators/nodes/AnimationNodeBase.ts",
    "bounds/AxisAlignedBoundingBox.ts",
    "bounds/BoundingSphere.ts",
    "bounds/BoundingVolumeBase.ts",
    "bounds/NullBounds.ts",
    "containers/DisplayObjectContainer.ts",
    "containers/Loader.ts",
    "containers/Scene.ts",
    "containers/View.ts",
    "controllers/ControllerBase.ts",
    "controllers/FirstPersonController.ts",
    "controllers/FollowController.ts",
    "controllers/HoverController.ts",
    "controllers/LookAtController.ts",
    "controllers/SpringController.ts",
    "core/base/AlignmentMode.ts",
    "core/base/BitmapDataChannel.ts",
    "core/base/BitmapData.ts",
    "core/base/BlendMode.ts",
    "core/base/CapsStyle.ts",
    "core/base/DisplayObject.ts",
    "core/base/Geometry.ts",
    "core/base/GradientType.ts",
    "core/base/GraphicsPathWinding.ts",
    "core/base/Graphics.ts",
    "core/base/IBitmapDrawable.ts",
    "core/base/IGraphicsData.ts",
    "core/base/IMaterialOwner.ts",
    "core/base/IStage.ts",
    "core/base/ISubMeshClass.ts",
    "core/base/ISubMesh.ts",
    "core/base/InterpolationMethod.ts",
    "core/base/JointStyle.ts",
    "core/base/LightBase.ts",
    "core/base/LineScaleMode.ts",
    "core/base/LineSubGeometry.ts",
    "core/base/LineSubMesh.ts",
    "core/base/LoaderInfo.ts",
    "core/base/OrientationMode.ts",
    "core/base/PixelSnapping.ts",
    "core/base/SpreadMethod.ts",
    "core/base/SubGeometryBase.ts",
    "core/base/SubMeshBase.ts",
    "core/base/TriangleCulling.ts",
    "core/base/TriangleSubGeometry.ts",
    "core/base/TriangleSubMesh.ts",
    "core/display/ContextMode.ts",
    "core/display/IContext.ts",
    "core/geom/Box.ts",
    "core/geom/ColorTransform.ts",
    "core/geom/MathConsts.ts",
    "core/geom/Matrix3DUtils.ts",
    "core/geom/Matrix3D.ts",
    "core/geom/Matrix.ts",
    "core/geom/Orientation3D.ts",
    "core/geom/PerspectiveProjection.ts",
    "core/geom/Plane3D.ts",
    "core/geom/PlaneClassification.ts",
    "core/geom/Point.ts",
    "core/geom/PoissonLookup.ts",
    "core/geom/Quaternion.ts",
    "core/geom/Rectangle.ts",
    "core/geom/Transform.ts",
    "core/geom/UVTransform.ts",
    "core/geom/Vector3D.ts",
    "core/library/AssetLibraryBundle.ts",
    "core/library/AssetLibraryIterator.ts",
    "core/library/AssetLibrary.ts",
    "core/library/AssetLoaderContext.ts",
    "core/library/AssetLoaderToken.ts",
    "core/library/AssetLoader.ts",
    "core/library/AssetType.ts",
    "core/library/ConflictPrecedence.ts",
    "core/library/ConflictStrategyBase.ts",
    "core/library/ConflictStrategy.ts",
    "core/library/ErrorConflictStrategy.ts",
    "core/library/IAsset.ts",
    "core/library/IDUtil.ts",
    "core/library/IgnoreConflictStrategy.ts",
    "core/library/NamedAssetBase.ts",
    "core/library/NumSuffixConflictStrategy.ts",
    "core/net/CrossDomainPolicy.ts",
    "core/net/URLLoaderDataFormat.ts",
    "core/net/URLLoader.ts",
    "core/net/URLRequestMethod.ts",
    "core/net/URLRequest.ts",
    "core/net/URLVariables.ts",
    "core/partition/CameraNode.ts",
    "core/partition/DirectionalLightNode.ts",
    "core/partition/EntityNode.ts",
    "core/partition/LightProbeNode.ts",
    "core/partition/NodeBase.ts",
    "core/partition/NullNode.ts",
    "core/partition/Partition.ts",
    "core/partition/PointLightNode.ts",
    "core/partition/SkyboxNode.ts",
    "core/pick/IPicker.ts",
    "core/pick/IPickingCollider.ts",
    "core/pick/PickingCollisionVO.ts",
    "core/pick/RaycastPicker.ts",
    "core/pool/CSSBillboardRenderable.ts",
    "core/pool/CSSLineSegmentRenderable.ts",
    "core/pool/CSSRenderableBase.ts",
    "core/pool/CSSSkyboxRenderable.ts",
    "core/pool/EntityListItemPool.ts",
    "core/pool/EntityListItem.ts",
    "core/pool/IMaterialData.ts",
    "core/pool/IMaterialPassData.ts",
    "core/pool/IRenderableClass.ts",
    "core/pool/IRenderable.ts",
    "core/pool/ITextureData.ts",
    "core/pool/RenderablePool.ts",
    "core/render/CSSDefaultRenderer.ts",
    "core/render/CSSRendererBase.ts",
    "core/render/IRenderer.ts",
    "core/sort/IEntitySorter.ts",
    "core/sort/RenderableMergeSort.ts",
    "core/text/AntiAliasType.ts",
    "core/text/GridFitType.ts",
    "core/text/TextFieldAutoSize.ts",
    "core/text/TextFieldType.ts",
    "core/text/TextFormatAlign.ts",
    "core/text/TextFormat.ts",
    "core/text/TextInteractionMode.ts",
    "core/text/TextLineMetrics.ts",
    "core/traverse/CSSEntityCollector.ts",
    "core/traverse/CollectorBase.ts",
    "core/traverse/EntityCollector.ts",
    "core/traverse/ICollector.ts",
    "core/traverse/RaycastCollector.ts",
    "core/traverse/ShadowCasterCollector.ts",
    "core/ui/Keyboard.ts",
    "entities/Billboard.ts",
    "entities/Camera.ts",
    "entities/DirectionalLight.ts",
    "entities/IEntity.ts",
    "entities/LightProbe.ts",
    "entities/LineSegment.ts",
    "entities/Mesh.ts",
    "entities/PointLight.ts",
    "entities/Shape.ts",
    "entities/Skybox.ts",
    "entities/TextField.ts",
    "errors/AbstractMethodError.ts",
    "errors/ArgumentError.ts",
    "errors/CastError.ts",
    "errors/DocumentError.ts",
    "errors/Error.ts",
    "errors/PartialImplementationError.ts",
    "errors/RangeError.ts",
    "events/AssetEvent.ts",
    "events/CameraEvent.ts",
    "events/DisplayObjectEvent.ts",
    "events/EventDispatcher.ts",
    "events/Event.ts",
    "events/GeometryEvent.ts",
    "events/HTTPStatusEvent.ts",
    "events/IEventDispatcher.ts",
    "events/IOErrorEvent.ts",
    "events/LightEvent.ts",
    "events/LoaderEvent.ts",
    "events/MaterialEvent.ts",
    "events/MouseEvent.ts",
    "events/ParserEvent.ts",
    "events/ProgressEvent.ts",
    "events/ProjectionEvent.ts",
    "events/RendererEvent.ts",
    "events/ResizeEvent.ts",
    "events/SceneEvent.ts",
    "events/StageEvent.ts",
    "events/SubGeometryEvent.ts",
    "events/TimerEvent.ts",
    "managers/MouseManager.ts",
    "materials/CSSMaterialBase.ts",
    "materials/LightSources.ts",
    "materials/MaterialBase.ts",
    "materials/lightpickers/LightPickerBase.ts",
    "materials/lightpickers/StaticLightPicker.ts",
    "materials/passes/IMaterialPass.ts",
    "materials/shadowmappers/CascadeShadowMapper.ts",
    "materials/shadowmappers/CubeMapShadowMapper.ts",
    "materials/shadowmappers/DirectionalShadowMapper.ts",
    "materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "materials/shadowmappers/ShadowMapperBase.ts",
    "parsers/CubeTextureParser.ts",
    "parsers/ParserBase.ts",
    "parsers/ParserDataFormat.ts",
    "parsers/ParserUtils.ts",
    "parsers/ResourceDependency.ts",
    "parsers/Texture2DParser.ts",
    "prefabs/PrefabBase.ts",
    "prefabs/PrimitiveCapsulePrefab.ts",
    "prefabs/PrimitiveConePrefab.ts",
    "prefabs/PrimitiveCubePrefab.ts",
    "prefabs/PrimitiveCylinderPrefab.ts",
    "prefabs/PrimitivePlanePrefab.ts",
    "prefabs/PrimitivePolygonPrefab.ts",
    "prefabs/PrimitivePrefabBase.ts",
    "prefabs/PrimitiveSpherePrefab.ts",
    "prefabs/PrimitiveTorusPrefab.ts",
    "projections/CoordinateSystem.ts",
    "projections/FreeMatrixProjection.ts",
    "projections/IProjection.ts",
    "projections/ObliqueNearPlaneProjection.ts",
    "projections/OrthographicOffCenterProjection.ts",
    "projections/OrthographicProjection.ts",
    "projections/PerspectiveProjection.ts",
    "projections/ProjectionBase.ts",
    "textures/BitmapCubeTexture.ts",
    "textures/BitmapTexture.ts",
    "textures/CubeTextureBase.ts",
    "textures/ImageCubeTexture.ts",
    "textures/ImageTexture.ts",
    "textures/MipmapGenerator.ts",
    "textures/RenderTexture.ts",
    "textures/SpecularBitmapTexture.ts",
    "textures/Texture2DBase.ts",
    "textures/TextureProxyBase.ts",
    "utils/ByteArrayBase.ts",
    "utils/ByteArrayBuffer.ts",
    "utils/ByteArray.ts",
    "utils/CSS.ts",
    "utils/Cast.ts",
    "utils/ColorUtils.ts",
    "utils/Debug.ts",
    "utils/RequestAnimationFrame.ts",
    "utils/TextureUtils.ts",
    "utils/Timer.ts",
    "utils/getTimer.ts"
  ],
  "names": [],
  "mappings": "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,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC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CAAC;YACjG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YAClG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YAClG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YACjG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YAClG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YACjG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YACjG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YAClG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YAClG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YACnG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YACnG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YAClG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;YACnG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,GAAC,CAAC,GAAG,GAAC,GAAG,GAAG,GAAG,GAAC,GAAG,CAAC,CAAC;SAClG;QACD,OAAO,UAAU;IAClB,CAAC;;IAWD;;;;MALG;IAEH;;MAEG;iCACH,UAAe,GAAY;QAE1B,IAAI,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;;QAE99B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;;QAE/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;;QAE/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAC/D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI;QAChE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IAAI,GAAG,IAAI,GAAC,IA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AO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,OA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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import AnimationNodeBase\t\t= require(\"awayjs-core/lib/animators/nodes/AnimationNodeBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\n\n/**\n * Provides an interface for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\ninterface IAnimationSet extends IAsset\n{\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\thasAnimation(name:string):boolean;\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tgetAnimation(name:string):AnimationNodeBase;\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers aslready in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tusesCPU:boolean; // GET\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tresetGPUCompatibility();\n\n\t/**\n\t * Called by the animator to void the GPU indicator when register space in the shader\n\t * is no longer available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tcancelGPUCompatibility();\n}\n\nexport = IAnimationSet;",
    "import IAnimationSet\t\t\t= require(\"awayjs-core/lib/animators/IAnimationSet\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport IRenderable\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport IMaterialPass\t\t\t= require(\"awayjs-core/lib/materials/passes/IMaterialPass\");\n\n/**\n * Provides an interface for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.IAnimationSet\n */\ninterface IAnimator extends IAsset\n{\n\t/**\n\t *\n\t */\n\tanimationSet:IAnimationSet;\n\n\t/**\n\t *\n\t */\n\tclone():IAnimator;\n\n\t/**\n\t *\n\t */\n\tdispose();\n\n\t/**\n\t * Used by the entity object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\taddOwner(mesh:IEntity);\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tremoveOwner(mesh:IEntity);\n\n\t/**\n\t * //TODO\n\t *\n\t * @param sourceSubGeometry\n\t */\n\tgetRenderableSubGeometry(renderable:IRenderable, sourceSubGeometry:SubGeometryBase):SubGeometryBase;\n}\n\nexport = IAnimator;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_NODE;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/core/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tsuper.nullify();\n\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this._centerX\n\t\tvar py:number = position.y - this._centerY\n\t\tvar pz:number = position.z - this._centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( this._halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -this._halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( this._halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -this._halfExtentsX && ix < this._halfExtentsX && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -this._halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -this._halfExtentsX && ix < this._halfExtentsX && iz > -this._halfExtentsZ && iz < this._halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( this._halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && ix > -this._halfExtentsX && ix < this._halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -this._halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -this._halfExtentsY && iy < this._halfExtentsY && ix > -this._halfExtentsX && ix < this._halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this._centerX, py:number = position.y - this._centerY, pz:number = position.z - this._centerZ;\n\t\treturn px <= this._halfExtentsX && px >= -this._halfExtentsX && py <= this._halfExtentsY && py >= -this._halfExtentsY && pz <= this._halfExtentsZ && pz >= -this._halfExtentsZ;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\n\t\tthis._centerX = (maxX + minX)*.5;\n\t\tthis._centerY = (maxY + minY)*.5;\n\t\tthis._centerZ = (maxZ + minZ)*.5;\n\t\tthis._halfExtentsX = (maxX - minX)*.5;\n\t\tthis._halfExtentsY = (maxY - minY)*.5;\n\t\tthis._halfExtentsZ = (maxZ - minZ)*.5;\n\n\t\tsuper.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tvar clone:AxisAlignedBoundingBox = new AxisAlignedBoundingBox();\n\t\tclone.fromExtremes(this._aabb.x, this._aabb.y + this._aabb.height, this._aabb.z, this._aabb.x + this._aabb.width, this._aabb.y, this._aabb.z + this._aabb.depth);\n\t\treturn clone;\n\t}\n\n\tpublic get halfExtentsX():number\n\t{\n\t\treturn this._halfExtentsX;\n\t}\n\n\tpublic get halfExtentsY():number\n\t{\n\t\treturn this._halfExtentsY;\n\t}\n\n\tpublic get halfExtentsZ():number\n\t{\n\t\treturn this._halfExtentsZ;\n\t}\n\n\t/**\n\t * Finds the closest point on the bounding volume to another given point. This can be used for maximum error calculations for content within a given bound.\n\t * @param point The point for which to find the closest point on the bounding volume\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this._aabb.x)\n\t\t\tp = this._aabb.x;\n\t\tif (p > this._aabb.x + this._aabb.width)\n\t\t\tp = this._aabb.x + this._aabb.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this._aabb.y + this._aabb.height)\n\t\t\tp = this._aabb.y + this._aabb.height;\n\t\tif (p > this._aabb.y)\n\t\t\tp = this._aabb.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this._aabb.z)\n\t\t\tp = this._aabb.z;\n\t\tif (p > this._aabb.z + this._aabb.depth)\n\t\t\tp = this._aabb.z + this._aabb.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\tpublic pUpdateBoundingRenderable()\n\t{\n\t\tthis._pBoundingEntity.transform.scale.x = Math.max(this._halfExtentsX*2, 0.001);\n\t\tthis._pBoundingEntity.transform.scale.y = Math.max(this._halfExtentsY*2, 0.001);\n\t\tthis._pBoundingEntity.transform.scale.z = Math.max(this._halfExtentsZ*2, 0.001);\n\t\tthis._pBoundingEntity.transform.position.x = this._centerX;\n\t\tthis._pBoundingEntity.transform.position.y = this._centerY;\n\t\tthis._pBoundingEntity.transform.position.z = this._centerZ;\n\t}\n\n\tpublic pCreateBoundingEntity():IEntity\n\t{\n\t\treturn null;//<away.primitives.WireframePrimitiveBase> new away.primitives.WireframeCube(1, 1, 1, 0xffffff, 0.5);\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tvar aabb:AxisAlignedBoundingBox = <AxisAlignedBoundingBox> bounds;\n\t\tvar cx:number = aabb._centerX;\n\t\tvar cy:number = aabb._centerY;\n\t\tvar cz:number = aabb._centerZ;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tif (m11 < 0)\n\t\t\tm11 = -m11;\n\t\tif (m12 < 0)\n\t\t\tm12 = -m12;\n\t\tif (m13 < 0)\n\t\t\tm13 = -m13;\n\t\tif (m21 < 0)\n\t\t\tm21 = -m21;\n\t\tif (m22 < 0)\n\t\t\tm22 = -m22;\n\t\tif (m23 < 0)\n\t\t\tm23 = -m23;\n\t\tif (m31 < 0)\n\t\t\tm31 = -m31;\n\t\tif (m32 < 0)\n\t\t\tm32 = -m32;\n\t\tif (m33 < 0)\n\t\t\tm33 = -m33;\n\t\tvar hx:number = aabb._halfExtentsX;\n\t\tvar hy:number = aabb._halfExtentsY;\n\t\tvar hz:number = aabb._halfExtentsZ;\n\t\tthis._halfExtentsX = hx*m11 + hy*m12 + hz*m13;\n\t\tthis._halfExtentsY = hx*m21 + hy*m22 + hz*m23;\n\t\tthis._halfExtentsZ = hx*m31 + hy*m32 + hz*m33;\n\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = this._halfExtentsX*2;\n\t\tthis._aabb.x = this._centerX - this._halfExtentsX;\n\t\tthis._aabb.y = this._centerY + this._halfExtentsY;\n\t\tthis._aabb.z = this._centerZ - this._halfExtentsZ;\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/core/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Transform\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Transform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tsuper.nullify();\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic fromSphere(center:Vector3D, radius:number)\n\t{\n\t\tthis._centerX = center.x;\n\t\tthis._centerY = center.y;\n\t\tthis._centerZ = center.z;\n\t\tthis._radius = radius;\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = radius*2;\n\t\tthis._aabb.x = this._centerX - radius;\n\t\tthis._aabb.y = this._centerY + radius;\n\t\tthis._aabb.z = this._centerZ - radius;\n\t\tthis._pAabbPointsDirty = true;\n\n\t\tif (this._pBoundingEntity)\n\t\t\tthis.pUpdateBoundingEntity();\n\t}\n\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\t\tthis._centerX = (maxX + minX)*.5;\n\t\tthis._centerY = (maxY + minY)*.5;\n\t\tthis._centerZ = (maxZ + minZ)*.5;\n\n\t\tvar d:number = maxX - minX;\n\t\tvar y:number = maxY - minY;\n\t\tvar z:number = maxZ - minZ;\n\n\t\tif (y > d)\n\t\t\td = y;\n\n\t\tif (z > d)\n\t\t\td = z;\n\n\t\tthis._radius = d*Math.sqrt(.5);\n\t\tsuper.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tvar clone:BoundingSphere = new BoundingSphere();\n\t\tclone.fromSphere(new Vector3D(this._centerX, this._centerY, this._centerZ), this._radius);\n\t\treturn clone;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar px:number = position.x - this._centerX, py:number = position.y - this._centerY, pz:number = position.z - this._centerZ;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this._radius*this._radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this._centerX;\n\t\tvar py:number = position.y - this._centerY;\n\t\tvar pz:number = position.z - this._centerZ;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this._radius;\n\t}\n\n\tpublic pUpdateBoundingEntity()\n\t{\n\t\tvar sc:number = this._radius;\n\t\tif (sc == 0)\n\t\t\tsc = 0.001;\n\n\t\tvar transform:Transform = this._pBoundingEntity.transform;\n\t\ttransform.scale = new Vector3D(sc, sc, sc);\n\t\ttransform.position = new Vector3D(this._centerX, this._centerY, this._centerZ);\n\t}\n\n\t// TODO pCreateBoundingRenderable():WireframePrimitiveBase\n\n\tpublic pCreateBoundingEntity():IEntity\n\t{\n\t\treturn null;//new away.primitives.WireframeSphere(1, 16, 12, 0xffffff, 0.5);\n\t}\n\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tvar sphere:BoundingSphere = <BoundingSphere> bounds;\n\t\tvar cx:number = sphere._centerX;\n\t\tvar cy:number = sphere._centerY;\n\t\tvar cz:number = sphere._centerZ;\n\t\tvar raw:Array<number> = new Array<number>(16);\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tif (m11 < 0)\n\t\t\tm11 = -m11;\n\t\tif (m12 < 0)\n\t\t\tm12 = -m12;\n\t\tif (m13 < 0)\n\t\t\tm13 = -m13;\n\t\tif (m21 < 0)\n\t\t\tm21 = -m21;\n\t\tif (m22 < 0)\n\t\t\tm22 = -m22;\n\t\tif (m23 < 0)\n\t\t\tm23 = -m23;\n\t\tif (m31 < 0)\n\t\t\tm31 = -m31;\n\t\tif (m32 < 0)\n\t\t\tm32 = -m32;\n\t\tif (m33 < 0)\n\t\t\tm33 = -m33;\n\n\t\tvar r:number = sphere._radius;\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt(rx*rx + ry*ry + rz*rz);\n\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = this._radius*2;\n\t\tthis._aabb.x = this._centerX - this._radius;\n\t\tthis._aabb.y = this._centerY + this._radius;\n\t\tthis._aabb.z = this._centerZ - this._radius;\n\t}\n}\n\nexport = BoundingSphere;",
    "import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/core/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass BoundingVolumeBase\n{\n\tpublic _aabb:Box;\n\tpublic _pAabbPoints:Array<number> = new Array<number>();\n\tpublic _pAabbPointsDirty:boolean = true;\n\tpublic _pBoundingEntity:IEntity;\n\n\tconstructor()\n\t{\n\t\tthis._aabb = new Box();\n\t}\n\n\tpublic get aabb():Box\n\t{\n\t\treturn this._aabb;\n\t}\n\n\tpublic get aabbPoints():Array<number>\n\t{\n\t\tif (this._pAabbPointsDirty)\n\t\t\tthis.pUpdateAABBPoints();\n\n\t\treturn this._pAabbPoints;\n\t}\n\n\tpublic get boundingEntity():IEntity\n\t{\n\t\tif (!this._pBoundingEntity) {\n\t\t\tthis._pBoundingEntity = this.pCreateBoundingEntity();\n\t\t\tthis.pUpdateBoundingEntity();\n\t\t}\n\n\t\treturn this._pBoundingEntity;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._aabb.x = this._aabb.y = this._aabb.z = 0;\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = 0;\n\t\tthis._pAabbPointsDirty = true;\n\n\t\tif (this._pBoundingEntity)\n\t\t\tthis.pUpdateBoundingEntity();\n\t}\n\n\tpublic disposeRenderable()\n\t{\n\t\tif (this._pBoundingEntity)\n\t\t\tthis._pBoundingEntity.dispose();\n\n\t\tthis._pBoundingEntity = null;\n\t}\n\n\tpublic fromVertices(vertices:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar len:number = vertices.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (len == 0) {\n\t\t\tthis.nullify();\n\t\t\treturn;\n\t\t}\n\n\t\tvar v:number;\n\n\t\tminX = maxX = vertices[i++];\n\t\tminY = maxY = vertices[i++];\n\t\tminZ = maxZ = vertices[i++];\n\n\t\twhile (i < len) {\n\t\t\tv = vertices[i++];\n\t\t\tif (v < minX)\n\t\t\t\tminX = v; else if (v > maxX)\n\t\t\t\tmaxX = v;\n\t\t\tv = vertices[i++];\n\t\t\tif (v < minY)\n\t\t\t\tminY = v; else if (v > maxY)\n\t\t\t\tmaxY = v;\n\t\t\tv = vertices[i++];\n\t\t\tif (v < minZ)\n\t\t\t\tminZ = v; else if (v > maxZ)\n\t\t\t\tmaxZ = v;\n\t\t}\n\n\t\tthis.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\t}\n\n\t/**\n\t * Updates the bounds to fit a Geometry object.\n\t *\n\t * @param geometry The Geometry object to be bounded.\n\t */\n\tpublic fromGeometry(geometry:Geometry):void\n\t{\n\t\tvar i:number, j:number, p:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tj = numSubGeoms;\n\t\t\twhile (j--) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\ti = boundingPositions.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\t\t} else {\n\t\t\tthis.fromExtremes(0, 0, 0, 0, 0, 0);\n\t\t}\n\t}\n\n\tpublic fromSphere(center:Vector3D, radius:number)\n\t{\n\t\tthis.fromExtremes(center.x - radius, center.y - radius, center.z - radius, center.x + radius, center.y + radius, center.z + radius);\n\t}\n\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\t\tthis._aabb.x = minX;\n\t\tthis._aabb.y = maxY;\n\t\tthis._aabb.z = minZ;\n\t\tthis._aabb.width = maxX - minX;\n\t\tthis._aabb.height = maxY - minY;\n\t\tthis._aabb.depth = maxZ - minZ;\n\t\tthis._pAabbPointsDirty = true;\n\n\t\tif (this._pBoundingEntity)\n\t\t\tthis.pUpdateBoundingEntity();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic overlaps(bounds:BoundingVolumeBase):boolean\n\t{\n\t\treturn this._aabb.intersects(bounds.aabb);\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic pUpdateAABBPoints()\n\t{\n\t\tvar minX:number = this._aabb.x;\n\t\tvar minY:number = this._aabb.y - this._aabb.height;\n\t\tvar minZ:number = this._aabb.z;\n\t\tvar maxX:number = this._aabb.x + this._aabb.width;\n\t\tvar maxY:number = this._aabb.y;\n\t\tvar maxZ:number = this._aabb.z + this._aabb.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t\tthis._pAabbPointsDirty = false;\n\t}\n\n\tpublic pUpdateBoundingEntity()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pCreateBoundingEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/core/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._alwaysIn = alwaysIn;\n\n\t\tthis._aabb.width = this._aabb.height = this._aabb.depth = Number.POSITIVE_INFINITY;\n\t\tthis._aabb.x = this._aabb.y = this._aabb.z = this._alwaysIn? Number.NEGATIVE_INFINITY/2 : Number.POSITIVE_INFINITY;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic pCreateBoundingEntity():IEntity\n\t{\n\t\t//return this._renderable || new away.primitives.WireframeSphere( 100, 16, 12, 0xffffff, 0.5 );\n\t\treturn null;\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n//\t\t//@override\n//\t\tpublic fromGeometry(geometry:away.base.Geometry)\n//\t\t{\n//\t\t}\n\n\t//@override\n\tpublic fromSphere(center:Vector3D, radius:number)\n\t{\n\t}\n\n\t//@override\n\tpublic fromExtremes(minX:number, minY:number, minZ:number, maxX:number, maxY:number, maxZ:number)\n\t{\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\t//@override\n\tpublic transformFrom(bounds:BoundingVolumeBase, matrix:Matrix3D)\n\t{\n\t\tthis._alwaysIn = (<NullBounds> bounds)._alwaysIn;\n\t}\n}\n\nexport = NullBounds;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Partition\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/Partition\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CONTAINER;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateScene(value:Scene)\n\t{\n\t\tsuper._pUpdateScene(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateScene(value);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LoaderInfo\");\nimport AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/core/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar content:DisplayObject = event.content;\n\n\t\tthis._content = content;\n\n\t\tif (content)\n\t\t\tthis.addChild(content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/Partition\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/SceneEvent\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = new Partition(new NodeBase());\n\t}\n\n\tpublic traversePartitions(traverser:ICollector)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\twhile (i < len) {\n\t\t\tthis._iCollectionMark++;\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t\t}\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.partition)\n\t\t\tthis.iRegisterPartition(displayObject.partition);\n\n\t\tif (displayObject.isEntity)\n\t\t\tdisplayObject._iAssignedPartition.iMarkForUpdate(displayObject);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.partition)\n\t\t\tthis.iUnregisterPartition(displayObject.partition);\n\n\t\tif (displayObject.isEntity)\n\t\t\tdisplayObject._iAssignedPartition.iRemoveEntity(displayObject);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-core/lib/core/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-core/lib/core/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-core/lib/core/render/CSSRendererBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-core/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-core/lib/managers/MouseManager\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:ICollector;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.partition = this.scene.partition;\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pCamera.partition = this._pScene.partition;\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.partition = this._pScene.partition;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():ICollector\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pTargetObject._iAssignedPartition && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iAssignedPartition.iMarkForUpdate(this._pTargetObject);\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import ControllerBase\t\t\t= require(\"awayjs-core/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport MathConsts\t\t\t\t= require(\"awayjs-core/lib/core/geom/MathConsts\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import HoverController\t\t\t= require(\"awayjs-core/lib/controllers/HoverController\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import LookAtController\t\t\t= require(\"awayjs-core/lib/controllers/LookAtController\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport MathConsts\t\t\t\t= require(\"awayjs-core/lib/core/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import ControllerBase\t\t\t= require(\"awayjs-core/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-core/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import LookAtController\t\t\t= require(\"awayjs-core/lib/controllers/LookAtController\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "class BitmapDataChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapDataChannel;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/core/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n *\n */\nclass BitmapData\n{\n\tprivate _imageCanvas:HTMLCanvasElement;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _rect:Rectangle;\n\tprivate _transparent:boolean;\n\tprivate _alpha:number = 0;\n\tprivate _locked:boolean = false;\n\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @param transparent\n\t * @param fillColor\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\n\t\tthis._transparent = transparent;\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\n\t\tif (fillColor != null) {\n\n\t\t\tif (this._transparent) {\n\t\t\t\tthis._alpha = ColorUtils.float32ColorToARGB(fillColor)[0]/255;\n\t\t\t} else {\n\t\t\t\tthis._alpha = 1;\n\t\t\t}\n\n\t\t\tthis.fillRect(this._rect, fillColor);\n\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic unlock()\n\t{\n\t\tthis._locked = false;\n\n\t\tif (this._imageData) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param color\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tif (!this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param color\n\t */\n\tpublic setPixel(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\tthis._imageData.data[index + 3] = 255;\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param rect\n\t * @param inputByteArray\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tinputByteArray.position = 0;\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param color\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\tpublic setVector(rect:Rectangle, inputVector:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\t\targb = ColorUtils.float32ColorToARGB(inputVector[i + j*rect.width]);\n\t\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Copy an HTMLImageElement or BitmapData object\n\t *\n\t * @param img {BitmapData} / {HTMLImageElement}\n\t * @param sourceRect - source rectange to copy from\n\t * @param destRect - destinatoin rectange to copy to\n\t */\n\tpublic drawImage(img:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic drawImage(img:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic drawImage(img:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (this._locked) {\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData) {\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\t}\n\n\t\t\tthis._drawImage(img, sourceRect, destRect);\n\n\t\t\tif (this._imageData) {\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._drawImage(img, sourceRect, destRect)\n\t\t}\n\t}\n\n\tprivate _drawImage(img:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _drawImage(img:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _drawImage(img:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (img instanceof BitmapData)\n\t\t\tthis._context.drawImage(img.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\telse if (img instanceof HTMLImageElement)\n\t\t\tthis._context.drawImage(img, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\t/**\n\t *\n\t * @param bmpd\n\t * @param sourceRect\n\t * @param destRect\n\t */\n\tpublic copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData) {\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\t}\n\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\n\n\t\t\tif (this._imageData) {\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\n\t\t}\n\n\t}\n\n\tprivate _copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\n\t\tif (bmpd instanceof BitmapData) {\n\t\t\tthis._context.drawImage(bmpd.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\t} else if (bmpd instanceof HTMLImageElement) {\n\t\t\tthis._context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param rect\n\t * @param color\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._context.fillStyle = this.hexToRGBACSS(color);\n\t\t\tthis._context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tthis._context.fillStyle = this.hexToRGBACSS(color);\n\t\t\tthis._context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t * @param matrix\n\t */\n\tpublic draw(source:BitmapData, matrix?:Matrix);\n\tpublic draw(source:HTMLImageElement, matrix?:Matrix);\n\tpublic draw(source:any, matrix?:Matrix)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._draw(source, matrix);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tthis._draw(source, matrix);\n\t\t}\n\t}\n\n\tprivate _draw(source:BitmapData, matrix:Matrix);\n\tprivate _draw(source:HTMLImageElement, matrix:Matrix);\n\tprivate _draw(source:any, matrix:Matrix)\n\t{\n\t\tif (source instanceof BitmapData) {\n\t\t\tthis._context.save();\n\n\t\t\tif (matrix != null)\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\t\tthis._context.drawImage(source.canvas, 0, 0)\n\t\t\tthis._context.restore();\n\n\t\t} else if (source instanceof HTMLImageElement) {\n\t\t\tthis._context.save();\n\n\t\t\tif (matrix != null)\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\t\tthis._context.drawImage(source, 0, 0)\n\t\t\tthis._context.restore();\n\t\t}\n\n\t}\n\n\tpublic copyChannel(sourceBitmap:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.imageData;\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar sourceData:Uint8Array = sourceBitmap.imageData.data;\n\t\t\tvar destData:Uint8Array = this._imageData.data;\n\n\t\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tif (this._imageData) {\n\t\t\tvar data:Uint8Array = this._imageData.data;\n\n\t\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {ImageData}\n\t */\n\tpublic set imageData(value:ImageData)\n\t{\n\t\tthis._context.putImageData(value, 0, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic get imageData():ImageData\n\t{\n\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn <number> this._imageCanvas.width;\n\t}\n\n\t/**\n\t *\n\t * @param {number}\n\t */\n\tpublic set width(value:number)\n\t{\n\t\tthis._rect.width = value;\n\t\tthis._imageCanvas.width = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn <number> this._imageCanvas.height;\n\t}\n\n\t/**\n\t *\n\t * @param {number}\n\t */\n\tpublic set height(value:number)\n\t{\n\t\tthis._rect.height = value;\n\t\tthis._imageCanvas.height = value;\n\t}\n\n\t/**\n\t *\n\t * @param {Rectangle}\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic get canvas()\n\t{\n\t\treturn this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic get context():CanvasRenderingContext2D\n\t{\n\t\treturn this._context;\n\t}\n\n\t// Private\n\n\t/**\n\t * convert decimal value to Hex\n\t */\n\tprivate hexToRGBACSS(d:number):string\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(d);\n\n\t\tif (this._transparent == false) {\n\t\t\targb[0] = 1;\n\n\t\t\treturn 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0] + ')';\n\t\t}\n\n\t\treturn 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t}\n}\n\nexport = BitmapData;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "import AxisAlignedBoundingBox\t= require(\"awayjs-core/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingVolumeBase\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport DisplayObjectContainer\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport ControllerBase\t\t\t= require(\"awayjs-core/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t= require(\"awayjs-core/lib/core/base/AlignmentMode\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/core/base/BlendMode\");\nimport LoaderInfo\t\t\t\t= require(\"awayjs-core/lib/core/base/LoaderInfo\");\nimport OrientationMode\t\t\t= require(\"awayjs-core/lib/core/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t= require(\"awayjs-core/lib/core/base/IBitmapDrawable\");\nimport MathConsts\t\t\t\t= require(\"awayjs-core/lib/core/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Transform\t\t\t\t= require(\"awayjs-core/lib/core/geom/Transform\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport EntityNode\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport Partition\t\t\t\t= require(\"awayjs-core/lib/core/partition/Partition\");\nimport IPickingCollider\t\t\t= require(\"awayjs-core/lib/core/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport Camera\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-core/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t= require(\"awayjs-core/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-core/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToStage     Dispatched when a display object is added to the on\n *                         stage display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromStage Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Stage\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Stage.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tprivate _boundsVisible:boolean;\n\tprivate _depth:number;\n\tprivate _height:number;\n\tprivate _width:number;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\tprivate _partitionNode:EntityNode;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _pBounds:BoundingVolumeBase;\n\tpublic _pBoundsInvalid:boolean = true;\n\tprivate _worldBounds:BoundingVolumeBase;\n\tprivate _worldBoundsInvalid:boolean = true;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._pBounds;\n\t}\n\n\tpublic set bounds(value:BoundingVolumeBase)\n\t{\n\t\tif (this._pBounds == value)\n\t\t\treturn;\n\n\t\tthis._pBounds = value;\n\n\t\tthis._worldBounds = value.clone();\n\n\t\tthis.pInvalidateBounds();\n\n\t\tif (this._boundsVisible)\n\t\t\tthis._partitionNode._iUpdateEntityBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth == val;\n\n\t\tthis._pScaleZ = val/this.bounds.aabb.depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._height;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height == val;\n\n\t\tthis._pScaleY = val/this.bounds.aabb.height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tif (this._pScene && this._explicitPartition)\n\t\t\tthis._pScene.iUnregisterPartition(this._explicitPartition);\n\n\t\tthis._explicitPartition = value;\n\n\t\tif (this._pScene && value)\n\t\t\tthis._pScene.iRegisterPartition(value);\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partitionNode():EntityNode\n\t{\n\t\tif (!this._partitionNode)\n\t\t\tthis._partitionNode = this.pCreateEntityPartitionNode();\n\n\t\treturn this._partitionNode;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Stage object is the Stage object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tvar pivotScale:Vector3D = new Vector3D(this._pivot.x/this._pScaleX, this._pivot.y/this._pScaleY, this._pivot.z/this._pScaleZ)\n\t\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get boundsVisible():boolean\n\t{\n\t\treturn this._boundsVisible;\n\t}\n\n\tpublic set boundsVisible(value:boolean)\n\t{\n\t\tif (value == this._boundsVisible)\n\t\t\treturn;\n\n\t\tthis._boundsVisible = value;\n\n\t\tthis._partitionNode.boundsVisible = value;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._width;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width == val;\n\n\t\tthis._pScaleX = val/this.bounds.aabb.width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get worldBounds():BoundingVolumeBase\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the bounds of the entity, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._worldBoundsInvalid) {\n\t\t\tthis._worldBoundsInvalid = false;\n\t\t\tthis._worldBounds.transformFrom(this.bounds, this.sceneTransform);\n\t\t}\n\n\t\treturn this._worldBounds;\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);//_transformComponents = new Vector.<Vector3D>(3, true);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\tthis._pBounds = this.pCreateDefaultBoundingVolume();\n\n\t\tthis._worldBounds = this.pCreateDefaultBoundingVolume();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Stage coordinates, or Stage coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Stage(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Stage.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Stage(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The x\n\t * and y values that you assign to the Point object represent global\n\t * coordinates because they are relative to the origin(0,0) of the main\n\t * display area. Then pass the Point object to the\n\t * <code>globalToLocal3D()</code> method as the <code>point</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A two dimensional Point object representing global x and y\n\t *              coordinates.\n\t * @return A Vector3D object with coordinates relative to the\n\t *         three-dimensional display object.\n\t */\n\tpublic globalToLocal3D(point:Point):Vector3D\n\t{\n\t\treturn new Vector3D(); //TODO\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Stage, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Stage).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tvar localRayPosition:Vector3D = this.inverseSceneTransform.transformVector(rayPosition);\n\t\tvar localRayDirection:Vector3D = this.inverseSceneTransform.deltaTransformVector(rayDirection);\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._iPickingCollisionVO;\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(localRayPosition, localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.localRayPosition = localRayPosition;\n\t\tpickingCollisionVO.localRayDirection = localRayDirection;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a two-dimensional point in the Stage\n\t * (global) coordinates.\n\t *\n\t * <p>For example, you can only use two-dimensional coordinates(x,y) to draw\n\t * with the <code>display.Graphics</code> methods. To draw a\n\t * three-dimensional object, you need to map the three-dimensional\n\t * coordinates of a display object to two-dimensional coordinates. First,\n\t * create an instance of the Vector3D class that holds the x-, y-, and z-\n\t * coordinates of the three-dimensional display object. Then pass the\n\t * Vector3D object to the <code>local3DToGlobal()</code> method as the\n\t * <code>point3d</code> parameter. The method returns a two-dimensional Point\n\t * object that can be used with the Graphics API to draw the\n\t * three-dimensional object.</p>\n\t *\n\t * @param point3d A Vector3D object containing either a three-dimensional\n\t *                point or the coordinates of the three-dimensional display\n\t *                object.\n\t * @return A two-dimensional point representing a three-dimensional point in\n\t *         two-dimensional space.\n\t */\n\tpublic local3DToGlobal(point3d:Vector3D):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Stage(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Stage(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Stage instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Stage.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition);\n\t\t\tthis._iSetScene(value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null);\n\n\t\t\tthis._iSetScene(null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t// point lights should be using sphere bounds\n\t\t// directional lights should be using null bounds\n\t\treturn new AxisAlignedBoundingBox();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tthis._pBoundsInvalid = true;\n\t\tthis._worldBoundsInvalid = true;\n\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tthis._worldBoundsInvalid = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._width = this._pBounds.aabb.width*this._pScaleX;\n\t\tthis._height = this._pBounds.aabb.height*this._pScaleY;\n\t\tthis._depth = this._pBounds.aabb.depth*this._pScaleZ;\n\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition)\n\t{\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._matrix3D.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\t// test to see if we're switching roots while we're already using a scene partition\n\t\t/*\n\t\tif (value == null)\n\t\t\tthis._oldScene = this._pScene;\n\n\t\tif (this._explicitPartition && this._oldScene && this._oldScene != this._pScene)\n\t\t\tthis.partition = null;\n\n\t\tif (value)\n\t\t\tthis._oldScene = null;\n\n\t\t// end of stupid partition test code\n\t\t//*/\n\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateScene(value);\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateScene(value:Scene)\n\t{\n\t\tif (this._pScene) {\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\t\t//unregister entity from current scene\n\t\t\tthis._pScene.iUnregisterEntity(this);\n\t\t}\n\n\t\tthis._pScene = value;\n\n\t\tif (value) {\n\t\t\tvalue.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\t\t//register entity with new scene\n\t\t\tvalue.iRegisterEntity(this);\n\t\t}\n\n\t\tthis.notifySceneChange();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (this._listenToSceneChanged) {\n\t\t\tif (!this._scenechanged)\n\t\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\t\tthis.dispatchEvent(this._scenechanged);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePartition()\n\t{\n\t\tif (this._iAssignedPartition)\n\t\t\tthis._iAssignedPartition.iMarkForUpdate(this);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n}\n\nexport = DisplayObject;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends NamedAssetBase implements IAsset\n{\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.GEOMETRY;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\tpublic getSubGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport CapsStyle\t\t\t\t= require(\"awayjs-core/lib/core/base/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-core/lib/core/base/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-core/lib/core/base/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-core/lib/core/base/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-core/lib/core/base/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-core/lib/core/base/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-core/lib/core/base/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-core/lib/core/base/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-core/lib/core/base/SpreadMethod\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The IBitmapDrawable interface is implemented by objects that can be passed as the\n * source parameter of the <code>draw()</code> method of the BitmapData class. These\n * objects are of type BitmapData or DisplayObject.\n * \n * @see away.base.BitmapData#draw()\n * @see away.base.BitmapData\n * @see away.base.DisplayObject\n */\ninterface IBitmapDrawable\n{\n\n}\n\nexport = IBitmapDrawable;\n",
    "/**\n * This interface is used to define objects that can be used as parameters in the\n * <code>away.base.Graphics</code> methods, including fills, strokes, and paths. Use\n * the implementor classes of this interface to create and manage drawing property\n * data, and to reuse the same data for different instances. Then, use the methods of\n * the Graphics class to render the drawing objects.\n * \n * @see away.base.Graphics.drawGraphicsData()\n * @see away.base.Graphics.readGraphicsData()\n */\ninterface IGraphicsData\n{\n\n}\n\nexport = IGraphicsData;",
    "import IAnimator\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/core/geom/UVTransform\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport IRenderable\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport IRenderer\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * IMaterialOwner provides an interface for objects that can use materials.\n *\n * @interface away.base.IMaterialOwner\n */\ninterface IMaterialOwner extends IAsset\n{\n\t/**\n\t * The animation used by the material owner to assemble the vertex code.\n\t */\n\tanimator:IAnimator;\n\n\t/**\n\t * The material with which to render the object.\n\t */\n\tmaterial:MaterialBase;\n\n\t/**\n\t *\n\t */\n\tuvTransform:UVTransform;\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\t_iAddRenderable(renderable:IRenderable):IRenderable;\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\t_iRemoveRenderable(renderable:IRenderable):IRenderable;\n\n\t/**\n\t *\n\t * @param renderer\n\t * @private\n\t */\n\t_iCollectRenderable(renderer:IRenderer)\n}\n\nexport = IMaterialOwner;",
    "/**\n * The IStage interface is implemented by objects that control the rendering context\n * of the AwayJS Stage area\n *\n */\ninterface IStage\n{\n\n}\n\nexport = IStage;\n",
    "import ISubMesh\t\t\t\t\t= require(\"awayjs-core/lib/core/base/ISubMesh\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * ISubMeshClass is an interface for the constructable class definition ISubMesh that is used to\n * apply a material to a SubGeometry class\n *\n * @class away.base.ISubMeshClass\n */\ninterface ISubMeshClass\n{\n\t/**\n\t *\n\t */\n\tnew(subGeometry:SubGeometryBase, parentMesh:Mesh, material?:MaterialBase):ISubMesh;\n}\n\nexport = ISubMeshClass;",
    "import IMaterialOwner\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * ISubMesh is an interface for object SubMesh that is used to\n * apply a material to a SubGeometry class\n *\n * @class away.base.ISubMesh\n */\ninterface ISubMesh extends IMaterialOwner\n{\n\tsubGeometry:SubGeometryBase;\n\n\tparentMesh:Mesh;\n\n\t_iIndex:number;\n\n\t_iInvalidateRenderableGeometry();\n\n\t_iGetExplicitMaterial():MaterialBase;\n}\n\nexport = ISubMesh;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "import DisplayObjectContainer\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Camera\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport LightEvent\t\t\t\t= require(\"awayjs-core/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-core/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "import DisplayObjectContainer\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-core/lib/core/base/Geometry\");\nimport LineSubMesh\t\t\t\t= require(\"awayjs-core/lib/core/base/LineSubMesh\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\n\tpublic static THICKNESS_DATA:string = \"thickness\";\n\tpublic static COLOR_DATA:string = \"colors\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static COLOR_FORMAT:string = \"float4\";\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _boundingPositionDirty = true;\n\tprivate _thicknessDirty:boolean = true;\n\tprivate _colorsDirty:boolean = true;\n\n\tprivate _startPositions:Array<number>;\n\tprivate _endPositions:Array<number>;\n\tprivate _boundingPositions:Array<number>\n\tprivate _thickness:Array<number>;\n\tprivate _startColors:Array<number>;\n\tprivate _endColors:Array<number>;\n\n\tprivate _numSegments:number;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _thicknessUpdated:SubGeometryEvent;\n\tprivate _colorUpdated:SubGeometryEvent;\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\n\n\t\tvar stride:number = 0;\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tstride += 1;\n\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\n\t\tstride += 4;\n\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\n\n\t\tvar len:number = this._pNumVertices*stride;\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(len);\n\t\telse if (this._pVertices.length != len)\n\t\t\tthis._pVertices.length = len;\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._startPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._endPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Array<number>\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._startColors;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._endColors;\n\t}\n\n\t/**\n\t * The total amount of segments in the TriangleSubGeometry.\n\t */\n\tpublic get numSegments():number\n\t{\n\t\treturn this._numSegments;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper(true);\n\n\t\tthis._pSubMeshClass = LineSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._boundingPositionDirty)\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\n\n\t\treturn this._boundingPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\t\tvar indices:Array<number>;\n\n\t\tthis._startPositions = startValues;\n\n\t\tif (this._startPositions == null)\n\t\t\tthis._startPositions = new Array<number>();\n\n\t\tthis._endPositions = endValues;\n\n\t\tif (this._endPositions == null)\n\t\t\tthis._endPositions = new Array<number>();\n\n\t\tthis._boundingPositionDirty = true;\n\n\t\tthis._numSegments = this._startPositions.length/3;\n\n\t\tthis._pNumVertices = this._numSegments*4;\n\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(lenV);\n\t\telse if (this._pVertices.length != lenV)\n\t\t\tthis._pVertices.length = lenV;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\n\t\tpositions = this._pVertices;\n\t\tindices = new Array();\n\n\t\twhile (i < startValues.length) {\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\n\t\t\tpositions[index] = values[i];\n\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\tpositions[index + 2] = values[i + 2];\n\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\n\t\t\tpositions[index + 3] = values[i];\n\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\tpositions[index + 5] = values[i + 2];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tvar o:number = index/stride - 3;\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\n\t\t\t\tj = 0;\n\t\t\t\ti += 3;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.updateIndices(indices);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic updateThickness(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar thickness:Array<number>;\n\n\t\tthis._thickness = values;\n\n\t\tif (values != null) {\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\n\t\t\tthickness = this._pVertices;\n\n\t\t\tindex = offset\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyThicknessUpdate();\n\n\t\tthis._thicknessDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar colors:Array<number>;\n\n\t\tthis._startColors = startValues;\n\n\t\tthis._endColors = endValues;\n\n\t\t//default to white\n\t\tif (this._startColors == null) {\n\t\t\tthis._startColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._startColors.length)\n\t\t\t\tthis._startColors[i++] = 1;\n\t\t}\n\n\t\tif (this._endColors == null) {\n\t\t\tthis._endColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._endColors.length)\n\t\t\t\tthis._endColors[i++] = 1;\n\t\t}\n\n\t\ti = 0;\n\t\tj = 0;\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\n\t\tcolors = this._pVertices;\n\n\t\tindex = offset;\n\n\t\twhile (i < this._startColors.length) {\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\n\t\t\tcolors[index] = values[i];\n\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\tcolors[index + 3] = values[i + 3];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tj = 0;\n\t\t\t\ti += 4;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyColorsUpdate();\n\n\t\tthis._colorsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._startPositions = null;\n\t\tthis._endPositions = null;\n\t\tthis._thickness = null;\n\t\tthis._startColors = null;\n\t\tthis._endColors = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\t\tclone.updateThickness(this._thickness.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyThicknessUpdate();\n\t\tthis.notifyColorsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyThicknessUpdate()\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\treturn;\n\n\t\tthis._thicknessDirty = true;\n\n\t\tif (!this._thicknessUpdated)\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\n\n\t\tthis.dispatchEvent(this._thicknessUpdated);\n\t}\n\n\tprivate notifyColorsUpdate()\n\t{\n\t\tif (this._colorsDirty)\n\t\t\treturn;\n\n\t\tthis._colorsDirty = true;\n\n\t\tif (!this._colorUpdated)\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\n\n\t\tthis.dispatchEvent(this._colorUpdated);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import ISubMesh\t\t\t\t\t= require(\"awayjs-core/lib/core/base/ISubMesh\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-core/lib/core/base/SubMeshBase\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IRenderer\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SUB_MESH;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import Loader\t\t\t\t\t= require(\"awayjs-core/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/core/base/Geometry\");\nimport ISubMeshClass\t\t\t= require(\"awayjs-core/lib/core/base/ISubMeshClass\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends NamedAssetBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\n\tpublic _pStrideOffsetDirty:boolean = true;\n\n\tpublic _pIndices:Array<number> /*uint*/;\n\tpublic _pVertices:Array<number>;\n\n\tprivate _numIndices:number;\n\tprivate _numTriangles:number;\n\tpublic _pNumVertices:number;\n\n\tpublic _pConcatenateArrays:boolean = true;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _pStride:Object = new Object();\n\tpublic _pOffset:Object = new Object();\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSubMeshClass:ISubMeshClass;\n\n\tpublic get subMeshClass():ISubMeshClass\n\t{\n\t\treturn this._pSubMeshClass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get concatenateArrays():boolean\n\t{\n\t\treturn this._pConcatenateArrays;\n\t}\n\n\tpublic set concatenateArrays(value:boolean)\n\t{\n\t\tif (this._pConcatenateArrays == value)\n\t\t\treturn;\n\n\t\tthis._pConcatenateArrays = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (value)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Array<number>\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tthis.updateVertices();\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._pNumVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper();\n\n\t\tthis._pConcatenateArrays = concatenatedArrays;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getStride(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pStride[dataType];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getOffset(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pOffset[dataType];\n\t}\n\n\tpublic updateVertices()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pIndices = null;\n\t\tthis._pVertices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tthis._pIndices = indices;\n\t\tthis._numIndices = indices.length;\n\n\t\tthis._numTriangles = this._numIndices/3;\n\n\t\tthis.notifyIndicesUpdate();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import IAnimator\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/core/geom/UVTransform\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport IRenderable\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport IRenderer\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Mesh\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends NamedAssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubMesh\t\t\t= require(\"awayjs-core/lib/core/base/TriangleSubMesh\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\n\tpublic static UV_DATA:string = \"uvs\";\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static NORMAL_FORMAT:string = \"float3\";\n\tpublic static TANGENT_FORMAT:string = \"float3\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _vertexNormals:Array<number>;\n\tprivate _vertexTangents:Array<number>;\n\tprivate _uvs:Array<number>;\n\tprivate _secondaryUVs:Array<number>;\n\tprivate _jointIndices:Array<number>;\n\tprivate _jointWeights:Array<number>;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\tprivate _numCondensedJoints:number;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _normalsUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\n\t\tthis.notifyJointIndicesUpdate();\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._vertexNormals != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._vertexTangents != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._secondaryUVs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._jointIndices != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tif (this._jointWeights != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\n\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (this._pConcatenateArrays)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyNormalsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexNormals():Array<number>\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\treturn this._vertexNormals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexTangents():Array<number>\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\treturn this._vertexTangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Array<number>\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Array<number>\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._useCondensedIndices)\n\t\t\treturn this._condensedJointIndices;\n\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():Array<number>\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._jointWeights;\n\t}\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\tpublic get numCondensedJoints():number\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._numCondensedJoints;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = TriangleSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyUVsUpdate()\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateVertexNormals(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar normals:Array<number>;\n\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._vertexNormals = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tnormals = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tnormals[index] = values[i++];\n\t\t\t\t\tnormals[index + 1] = values[i++];\n\t\t\t\t\tnormals[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexNormals == null) {\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\n\t\t\t//autoderived normals\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\n\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear normal values\n\t\t\tvar lenV:number = normals.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tnormals[index] = 0;\n\t\t\t\tnormals[index + 1] = 0;\n\t\t\t\tnormals[index + 2] = 0;\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\tvar weight:number;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face normals\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average normals collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = normals[index];\n\t\t\t\tvar vy:number = normals[index + 1];\n\t\t\t\tvar vz:number = normals[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\tnormals[index] = vx*d;\n\t\t\t\t\tnormals[index + 1] = vy*d;\n\t\t\t\t\tnormals[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyNormalsUpdate();\n\n\t\tthis._vertexNormalsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic updateVertexTangents(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar tangents:Array<number>;\n\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\n\t\t\tthis._vertexTangents = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\ttangents = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\ttangents[index] = values[i++];\n\t\t\t\t\ttangents[index + 1] = values[i++];\n\t\t\t\t\ttangents[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexTangents == null) {\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\t\t//autoderived tangents\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear tangent values\n\t\t\tvar lenV:number = tangents.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\ttangents[index] = 0;\n\t\t\t\ttangents[index + 1] = 0;\n\t\t\t\ttangents[index + 2] = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar weight:number;\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face tangents\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average tangents collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = tangents[index];\n\t\t\t\tvar vy:number = tangents[index + 1];\n\t\t\t\tvar vz:number = tangents[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\ttangents[index] = vx*d;\n\t\t\t\t\ttangents[index + 1] = vy*d;\n\t\t\t\t\ttangents[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._vertexTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic updateSecondaryUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._secondaryUVs = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tuvs = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tuvs[index] = values[i++];\n\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifySecondaryUVsUpdate();\n\n\t\tthis._secondaryUVsDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic updateJointIndices(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointIndices:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointIndices = values;\n\n\t\tif (values != null) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\ti = 0;\n\t\t\t\tj = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tif (!this._concatenateArrays)\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\n\t\t\t\t\t\toldIndex = values[i++];\n\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\n\t\t\t\t\t}\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t\tthis._numCondensedJoints = newIndex;\n\t\t\t} else if (this._concatenateArrays) {\n\n\t\t\t\ti = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointIndicesUpdate();\n\n\t\tthis._jointIndicesDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic updateJointWeights(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointWeights:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointWeights = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tjointWeights = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tj = 0;\n\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointWeightsUpdate();\n\n\t\tthis._jointWeightsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._vertexNormals = null;\n\t\tthis._vertexTangents = null;\n\t\tthis._uvs = null;\n\t\tthis._secondaryUVs = null;\n\t\tthis._jointIndices = null;\n\t\tthis._jointWeights = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\n\t\telse\n\t\t\tclone.updateVertexNormals(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\n\t\telse\n\t\t\tclone.updateVertexTangents(null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t\tnormals = this._pVertices;\n\t\t\ttangents = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t\tnormals = this._vertexNormals;\n\t\t\ttangents = this._vertexTangents;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (bakeNormals || bakeTangents) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t\t// bake normal\n\t\t\tif (bakeNormals) {\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += nStride;\n\t\t\t}\n\n\t\t\t// bake tangent\n\t\t\tif (bakeTangents) {\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tStride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\tvar positions:Array<number> = this._positions\n\t\tvar uvs:Array<number> = this._uvs;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceTangents == null)\n\t\t\tthis._faceTangents = new Array<number>(len);\n\n\t\twhile (i < len) {\n\t\t\tindex1 = this._pIndices[i];\n\t\t\tindex2 = this._pIndices[i + 1];\n\t\t\tindex3 = this._pIndices[i + 2];\n\n\t\t\tv0 = uvs[index1*2 + 1];\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\n\n\t\t\tvi = index1*3;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*3;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*3;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tthis._faceTangents[i++] = denom*cx;\n\t\t\tthis._faceTangents[i++] = denom*cy;\n\t\t\tthis._faceTangents[i++] = denom*cz;\n\t\t}\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t\tthis.notifyUVsUpdate();\n\t\tthis.notifySecondaryUVsUpdate();\n\t\tthis.notifyJointIndicesUpdate();\n\t\tthis.notifyJointWeightsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyNormalsUpdate()\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (!this._normalsUpdated)\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.dispatchEvent(this._normalsUpdated);\n\t}\n\n\tprivate notifyTangentsUpdate()\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (!this._tangentsUpdated)\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\n\n\t\tthis.dispatchEvent(this._tangentsUpdated);\n\t}\n\n\tprivate notifyUVsUpdate()\n\t{\n\t\tif (this._uvsDirty)\n\t\t\treturn;\n\n\t\tthis._uvsDirty = true;\n\n\t\tif (!this._uvsUpdated)\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\n\n\t\tthis.dispatchEvent(this._uvsUpdated);\n\t}\n\n\tprivate notifySecondaryUVsUpdate()\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\treturn;\n\n\t\tthis._secondaryUVsDirty = true;\n\n\t\tif (!this._secondaryUVsUpdated)\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\n\t}\n\n\tprivate notifyJointIndicesUpdate()\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\treturn;\n\n\t\tthis._jointIndicesDirty = true;\n\n\t\tif (!this._jointIndicesUpdated)\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\n\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\n\t}\n\n\tprivate notifyJointWeightsUpdate()\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\treturn;\n\n\t\tthis._jointWeightsDirty = true;\n\n\t\tif (!this._jointWeightsUpdated)\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import ISubMesh\t\t\t\t\t= require(\"awayjs-core/lib/core/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-core/lib/core/base/SubMeshBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IRenderer\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "class ContextMode\n{\n\tstatic AUTO:string = \"auto\";\n\tstatic WEBGL:string = \"webgl\";\n\tstatic FLASH:string = \"flash\";\n\tstatic NATIVE:string = \"native\";\n}\n\nexport = ContextMode;",
    "import Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\n\n/**\n *\n * @class away.base.IContext\n */\ninterface IContext\n{\n\tcontainer:HTMLElement;\n\n\tclear(red?: number, green?: number, blue?: number, alpha?: number, depth?: number, stencil?: number, mask?: number);\n\n\tconfigureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil?:boolean);\n\n\tdispose();\n\n\tpresent();\n\n\tsetScissorRectangle(rect:Rectangle);\n}\n\nexport = IContext;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsRect(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n\tpublic alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n\tpublic blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n\tpublic blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n\tpublic greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n\tpublic greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n\tpublic redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n\tpublic redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n\t/**\n\t * Concatenates the ColorTranform object specified by the <code>second</code>\n\t * parameter with the current ColorTransform object and sets the current\n\t * object as the result, which is an additive combination of the two color\n\t * transformations. When you apply the concatenated ColorTransform object,\n\t * the effect is the same as applying the <code>second</code> color\n\t * transformation after the <i>original</i> color transformation.\n\t *\n\t * @param second The ColorTransform object to be combined with the current\n\t *               ColorTransform object.\n\t */\n\tpublic concat(second:ColorTransform):void\n\t{\n\t\tthis.redMultiplier += second.redMultiplier;\n\t\tthis.greenMultiplier += second.greenMultiplier;\n\t\tthis.blueMultiplier += second.blueMultiplier;\n\t\tthis.alphaMultiplier += second.alphaMultiplier;\n\t}\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/core/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:number[] = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Orientation3D\t\t\t= require(\"awayjs-core/lib/core/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/core/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:number[];\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:number[] = null)\n\t{\n\t\tif (v != null && v.length == 16)\n\t\t\tthis.rawData = v.concat();\n\t\telse\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\tthis.append(m);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData.slice(0));\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar len:number = sourceMatrix3D.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tdest.rawData = this.rawData.slice(0);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\t// Initial Tests - Not OK\n\n\t\tvar vec:Vector3D[] = [];\n\t\tvar m = this.clone();\n\t\tvar mr = m.rawData;\n\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\n\t\tvar scale:Vector3D = new Vector3D();\n\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\n\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\n\t\t\tscale.z = -scale.z;\n\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\n\t\tvar rot = new Vector3D();\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\n\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\n\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\n\t\t\t\t}\n\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar m = new Matrix3D();\n\t\tm.position = new Vector3D(x, y, z);\n\t\tthis.prepend(m);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tif (components.length < 3) return false\n\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\n\n\t\tthis.identity();\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\n\n\t\tvar angle:number;\n\t\tangle = -components[1].x;\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\n\t\tangle = -components[1].y;\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\n\t\tangle = -components[1].z;\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\n\n\t\tthis.position = components[0];\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar oRawData:number[] = this.rawData.slice(0);\n\n\t\tthis.rawData[1] = oRawData[4];\n\t\tthis.rawData[2] = oRawData[8];\n\t\tthis.rawData[3] = oRawData[12];\n\t\tthis.rawData[4] = oRawData[1];\n\t\tthis.rawData[6] = oRawData[9];\n\t\tthis.rawData[7] = oRawData[13];\n\t\tthis.rawData[8] = oRawData[2];\n\t\tthis.rawData[9] = oRawData[6];\n\t\tthis.rawData[11] = oRawData[14];\n\t\tthis.rawData[12] = oRawData[3];\n\t\tthis.rawData[13] = oRawData[7];\n\t\tthis.rawData[14] = oRawData[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/core/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/core/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/core/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/core/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/core/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoader\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderToken\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/core/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategyBase\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.loadData(data, '', context, ns, parser);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\t//var asset : IAsset;\n\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\n\t\t\t\tasset = this._assets[ c ];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t\t/*\n\t\t\t for each (asset in _assets)\n\t\t\t asset.dispose();\n\t\t\t */\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoadingSessions()\n\t{\n\t\tvar i:number;\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tvar length:number = this._loadingSessions.length;\n\n\t\tfor (i = 0; i < length; i++)\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\n\n\t\tthis._loadingSessions = null;\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar l:number = this._assets.length;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\n\t\tthis._loadingSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loadingSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\n\t}\n\n\tprivate loadingSessionGC():void\n\t{\n\t\tvar loader:AssetLoader;\n\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\n\t\t\tloader = this._loadingSessionsGarbage.pop();\n\t\t\tthis.killLoadingSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\n\t}\n\n\tprivate killLoadingSession(loader:AssetLoader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/core/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/core/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoader\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderToken\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "class AssetLoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.AssetLoader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = AssetLoaderContext;",
    "import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoader\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n\n/**\n * Dispatched when a skybox asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a camera3d asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a mesh asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a geometry asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton pose asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a container asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture projector asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a material asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a animator asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation set has been constructed from a group of animation state resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation node has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light picker asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an effect method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an shadow map method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Instances of this class are returned as tokens by loading operations\n * to provide an object on which events can be listened for in cases where\n * the actual asset loader is not directly available (e.g. when using the\n * AssetLibrary to perform the load.)\n *\n * By listening for events on this class instead of directly on the\n * AssetLibrary, one can distinguish different loads from each other.\n *\n * The token will dispatch all events that the original AssetLoader dispatches,\n * while not providing an interface to obstruct the load and is as such a\n * safer return value for loader wrappers than the loader itself.\n */\nclass AssetLoaderToken extends EventDispatcher\n{\n\tpublic _iLoader:AssetLoader;\n\n\tconstructor(loader:AssetLoader)\n\t{\n\t\tsuper();\n\n\t\tthis._iLoader = loader;\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.addEventListener(type, listener);\n\t}\n\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.removeEventListener(type, listener);\n\t}\n\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\n\t{\n\t\treturn this._iLoader.hasEventListener(type, listener);\n\t}\n\n\t/*\n\t public willTrigger(type:string):boolean\n\t {\n\t return this._iLoader.willTrigger(type);\n\t }\n\t */\n}\n\nexport = AssetLoaderToken;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/core/library/AssetLoaderToken\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/core/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/core/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport CubeTextureParser\t\t= require(\"awayjs-core/lib/parsers/CubeTextureParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Texture2DParser\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The AssetLoader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass AssetLoader extends EventDispatcher\n{\n\tprivate _context:AssetLoaderContext;\n\tprivate _token:AssetLoaderToken;\n\tprivate _uri:string;\n\tprivate _content:DisplayObject;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Texture2DParser, CubeTextureParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\n\t\t\tAssetLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * AssetLoader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = id;\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/')\n\t\t\tend = end.substr(1);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsingAfterDependencies();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._token = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\n\t\t\t\treturn new AssetLoader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t\t\telse\n\t\t\t\tthrow new Error(message);\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = AssetLoader;",
    "class AssetType\n{\n\tpublic static ANIMATION_NODE:string = 'animationNode';\n\tpublic static ANIMATION_SET:string = 'animationSet';\n\tpublic static ANIMATION_STATE:string = 'animationState';\n\tpublic static ANIMATOR:string = 'animator';\n\tpublic static BILLBOARD:string = 'billboard';\n\tpublic static CAMERA:string = 'camera';\n\tpublic static CONTAINER:string = 'container';\n\tpublic static EFFECTS_METHOD:string = 'effectsMethod';\n\tpublic static GEOMETRY:string = 'geometry';\n\tpublic static LINE_SEGMENT:string = 'lineSegment';\n\tpublic static LIGHT:string = 'light';\n\tpublic static LIGHT_PICKER:string = 'lightPicker';\n\tpublic static MATERIAL:string = 'material';\n\tpublic static MESH:string = 'mesh';\n\tpublic static TRIANGLE_SUB_MESH:string = 'triangleSubMesh';\n\tpublic static LINE_SUB_MESH:string = 'lineSubMesh';\n\tpublic static PRIMITIVE_PREFAB:string = 'primitivePrefab';\n\tpublic static SHADOW_MAP_METHOD:string = 'shadowMapMethod';\n\tpublic static SKELETON:string = 'skeleton';\n\tpublic static SKELETON_POSE:string = 'skeletonPose';\n\tpublic static SKYBOX:string = 'skybox';\n\tpublic static STATE_TRANSITION:string = 'stateTransition';\n\tpublic static TEXTURE:string = 'texture';\n\tpublic static TEXTURE_PROJECTOR:string = 'textureProjector';\n}\n\nexport = AssetType;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/core/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/core/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/core/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/core/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "import IEventDispatcher\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\n\ninterface IAsset extends IEventDispatcher\n{\n\t/**\n\t *\n\t */\n\tname:string;\n\n\t/**\n\t *\n\t */\n\tid:number;\n\n\t/**\n\t *\n\t */\n\tassetNamespace:string;\n\n\t/**\n\t *\n\t */\n\tassetType:string;\n\n\t/**\n\t *\n\t */\n\tassetFullPath:Array<string>;\n\n\t/**\n\t *\n\t * @param name\n\t * @param ns\n\t */\n\tassetPathEquals(name:string, ns:string):boolean;\n\n\t/**\n\t *\n\t * @param name\n\t * @param ns\n\t * @param overrideOriginal\n\t */\n\tresetAssetPath(name:string, ns:string, overrideOriginal?:boolean):void;\n\n\t/**\n\t *\n\t */\n\tdispose();\n\n}\n\nexport = IAsset;\n",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass NamedAssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = NamedAssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : NamedAssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = NamedAssetBase;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/core/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/core/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/core/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\n * and AssetLibrary instead in most cases.\n *\n * @see AssetLoader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(camera:IEntity)\n\t{\n\t\tsuper(camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(directionalLight:IEntity)\n\t{\n\t\tsuper(directionalLight);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\n\tprivate _entity:IEntity;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper();\n\t\tthis._entity = entity;\n\t\tthis._iNumEntities = 1;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._entity.worldBounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._entity.isIntersectingRay(rayPosition, rayDirection);\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateBoundsPrimitive():IEntity\n\t{\n\t\treturn this._entity.bounds.boundingEntity;\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(lightProbe:IEntity)\n\t{\n\t\tsuper(lightProbe);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _boundsChildrenVisible:boolean;\n\tprivate _explicitBoundsVisible:boolean;\n\tprivate _implicitBoundsVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\tpublic _pBoundsPrimitive:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsVisible():boolean\n\t{\n\t\treturn this._explicitBoundsVisible;\n\t}\n\n\tpublic set boundsVisible(value:boolean)\n\t{\n\t\tif (this._explicitBoundsVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitBoundsVisible = value;\n\n\t\tthis._iUpdateImplicitBoundsVisible(this._iParent? this._iParent.boundsChildrenVisible : false);\n\n\t}\n\n\tpublic get boundsChildrenVisible():boolean\n\t{\n\t\treturn this._boundsChildrenVisible;\n\t}\n\n\tpublic set boundsChildrenVisible(value:boolean)\n\t{\n\t\tif (this._boundsChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._boundsChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitBoundsVisible(this._boundsChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._implicitBoundsVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._implicitBoundsVisible)\n\t\t\t\tthis._pBoundsPrimitive.partitionNode.acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateBoundsPrimitive():IEntity\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitBoundsVisible(this.boundsChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitBoundsVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitBoundsVisible(value:boolean)\n\t{\n\t\tif (this._implicitBoundsVisible == this._explicitBoundsVisible || value)\n\t\t\treturn;\n\n\t\tthis._implicitBoundsVisible = this._explicitBoundsVisible || value;\n\n\t\tthis._iUpdateEntityBounds();\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitBoundsVisible(this._boundsChildrenVisible);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsBoundsVisible():boolean\n\t{\n\t\treturn this._implicitBoundsVisible;\n\t}\n\n//\t\tpublic _pUpdateNumEntities(value:number)\n//\t\t{\n//\t\t\tvar diff:number = value - this._pNumEntities;\n//\t\t\tvar node:NodeBase = this;\n//\n//\t\t\tdo {\n//\t\t\t\tnode._pNumEntities += diff;\n//\t\t\t} while ((node = node._iParent) != null);\n//\t\t}\n\n\tpublic _iUpdateEntityBounds()\n\t{\n\t\tif (this._pBoundsPrimitive) {\n\t\t\tthis._pBoundsPrimitive.dispose();\n\t\t\tthis._pBoundsPrimitive = null;\n\t\t}\n\n\t\tif (this._implicitBoundsVisible)\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NullNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:ICollector)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(entity:DisplayObject)\n\t{\n\t\tvar node:EntityNode = entity.partitionNode;\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(entity:DisplayObject)\n\t{\n\t\tvar node:EntityNode = entity.partitionNode;\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pointLight:IEntity)\n\t{\n\t\tsuper(pointLight);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(skyBox:IEntity)\n\t{\n\t\tsuper(skyBox);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/View\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\n\n/**\n * Provides an interface for picking objects that can pick 3d objects from a view or scene.\n *\n * @interface away.pick.IPicker\n */\ninterface IPicker\n{\n\t/**\n\t * Gets the collision object from the screen coordinates of the picking ray.\n\t *\n\t * @param x The x coordinate of the picking ray in screen-space.\n\t * @param y The y coordinate of the picking ray in screen-space.\n\t * @param view The view on which the picking object acts.\n\t */\n\tgetViewCollision(x:number, y:number, view:View):PickingCollisionVO;\n\n\t/**\n\t * Gets the collision object from the scene position and direction of the picking ray.\n\t *\n\t * @param position The position of the picking ray in scene-space.\n\t * @param direction The direction of the picking ray in scene-space.\n\t * @param scene The scene on which the picking object acts.\n\t */\n\tgetSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO;\n\n\t/**\n\t * Determines whether the picker takes account of the mouseEnabled properties of entities. Defaults to true.\n\t */\n\tonlyMouseEnabled:boolean; // GET / SET\n\n\t/**\n\t * Disposes memory used by the IPicker object\n\t */\n\tdispose();\n}\n\nexport = IPicker;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * Provides an interface for picking colliders that can be assigned to individual entities in a scene for specific picking behaviour.\n * Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.entities.Entity#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @interface away.pick.IPickingCollider\n */\ninterface IPickingCollider\n{\n\t/**\n\t * Sets the position and direction of a picking ray in local coordinates to the entity.\n\t *\n\t * @param localDirection The position vector in local coordinates\n\t * @param localPosition The direction vector in local coordinates\n\t */\n\tsetLocalRay(localPosition:Vector3D, localDirection:Vector3D);\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param entity The entity instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t */\n\ttestBillboardCollision(entity:IEntity, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\n\t/**\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\n\t *\n\t * @param entity The entity instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\ttestMeshCollision(entity:IEntity, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\n}\n\nexport = IPickingCollider;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/View\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-core/lib/core/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-core/lib/core/pool/EntityListItem\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-core/lib/core/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:ICollector):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? new Vector3D() : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-core/lib/core/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-core/lib/core/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-core/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:RenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-core/lib/core/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-core/lib/core/pool/RenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-core/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;",
    "import IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-core/lib/core/pool/RenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:RenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, materialOwner:IMaterialOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\t\tthis.materialOwner = materialOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-core/lib/core/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-core/lib/core/pool/RenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:RenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.material.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-core/lib/core/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "/**\n * IMaterialData is an interface for classes that are used in the rendering pipeline to render the\n * contents of a texture\n *\n * @class away.pool.IMaterialData\n */\ninterface IMaterialData\n{\n\t/**\n\t *\n\t */\n\tdispose();\n\n\t/**\n\t *\n\t */\n\tinvalidateMaterial();\n\n\t/**\n\t *\n\t */\n\tinvalidateAnimation();\n}\n\nexport = IMaterialData;",
    "import IMaterialPass\t\t\t\t= require(\"awayjs-core/lib/materials/passes/IMaterialPass\");\n\n/**\n * IMaterialPassData is an interface for classes that are used in the rendering pipeline to render the\n * contents of a material pass\n *\n * @class away.pool.IMaterialPassData\n */\ninterface IMaterialPassData\n{\n\t/**\n\t *\n\t */\n\tmaterialPass:IMaterialPass;\n\n\t/**\n\t *\n\t */\n\tdispose();\n\n\t/**\n\t *\n\t */\n\tinvalidate();\n}\n\nexport = IMaterialPassData;",
    "import IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-core/lib/core/pool/RenderablePool\");\n\n/**\n * IRenderableClass is an interface for the constructable class definition IRenderable that is used to\n * create renderable objects in the rendering pipeline to render the contents of a partition\n *\n * @class away.render.IRenderableClass\n */\ninterface IRenderableClass\n{\n\t/**\n\t *\n\t */\n\tid:string;\n\n\t/**\n\t *\n\t */\n\tnew(pool:RenderablePool, materialOwner:IMaterialOwner):IRenderable;\n}\n\nexport = IRenderableClass;",
    "import IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * IRenderable is an interface for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.IRenderable\n */\ninterface IRenderable\n{\n\t/**\n\t *\n\t */\n\tnext:IRenderable;\n\n\n\t/**\n\t *\n\t */\n\tmaterialId:number;\n\n\t/**\n\t *\n\t */\n\tmaterialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tsourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\trenderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tzIndex:number;\n\n\t/**\n\t *\n\t */\n\tdispose();\n\n\t/**\n\t *\n\t */\n\tinvalidateGeometry();\n\n\t/**\n\t *\n\t */\n\tinvalidateIndexData();\n\n\t/**\n\t *\n\t */\n\tinvalidateVertexData(dataType:string);\n}\n\nexport = IRenderable;",
    "/**\n * ITextureData is an interface for classes that are used in the rendering pipeline to render the\n * contents of a texture\n *\n * @class away.pool.ITextureData\n */\ninterface ITextureData\n{\n\t/**\n\t *\n\t */\n\tdispose();\n\n\t/**\n\t *\n\t */\n\tinvalidate();\n}\n\nexport = ITextureData;",
    "import IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderableClass\");\n\n/**\n * @class away.pool.RenderablePool\n */\nclass RenderablePool\n{\n\tprivate static _pools:Object = new Object();\n\n\tprivate _pool:Object = new Object();\n\tprivate _renderableClass:IRenderableClass;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tconstructor(renderableClass:IRenderableClass)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(materialOwner:IMaterialOwner):IRenderable\n\t{\n\t\treturn <IRenderable> (this._pool[materialOwner.id] || (this._pool[materialOwner.id] = materialOwner._iAddRenderable(new this._renderableClass(this, materialOwner))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(materialOwner:IMaterialOwner)\n\t{\n\t\tmaterialOwner._iRemoveRenderable(this._pool[materialOwner.id]);\n\n\t\tthis._pool[materialOwner.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderablePool\n\t */\n\tpublic static getPool(renderableClass:IRenderableClass):RenderablePool\n\t{\n\t\tvar pool:RenderablePool = RenderablePool._pools[renderableClass.id];\n\n\t\tif (pool != undefined)\n\t\t\treturn pool;\n\n\t\treturn <RenderablePool> (RenderablePool._pools[renderableClass.id] = new RenderablePool(renderableClass));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tpublic static disposePool(renderableClass:any)\n\t{\n\t\tif (RenderablePool._pools[renderableClass.id])\n\t\t\tRenderablePool._pools[renderableClass.id] = undefined;\n\t}\n}\n\nexport = RenderablePool;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-core/lib/core/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-core/lib/core/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-core/lib/core/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-core/lib/core/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/CSSMaterialBase\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\tthis._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;",
    "import LineSubMesh\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-core/lib/core/base/TriangleSubMesh\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-core/lib/core/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-core/lib/core/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-core/lib/core/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-core/lib/core/pool/EntityListItem\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-core/lib/core/pool/RenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-core/lib/core/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-core/lib/core/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-core/lib/core/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-core/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Skybox\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-core/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/CSSMaterialBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _lineSegmentRenderablePool:RenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\tthis._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ICollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:ICollector)\n\t{\n\t\t//reset head values\n\t\tthis._renderableHead = null;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this);\n\t\t\titem = item.next;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase = <CSSMaterialBase> renderable.materialOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;",
    "import LineSubMesh\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-core/lib/core/base/TriangleSubMesh\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-core/lib/core/sort/IEntitySorter\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-core/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Skybox\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * IRenderer is an interface for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.IRenderer\n */\ninterface IRenderer extends IEventDispatcher\n{\n\t/**\n\t *\n\t */\n\trenderableSorter:IEntitySorter;\n\n\t/**\n\t *\n\t */\n\tshareContext:boolean;\n\n\t/**\n\t *\n\t */\n\tx:number /*uint*/;\n\n\t/**\n\t *\n\t */\n\ty:number /*uint*/;\n\n\t/**\n\t *\n\t */\n\twidth:number /*uint*/;\n\n\t/**\n\t *\n\t */\n\theight:number /*uint*/;\n\n\t/**\n\t *\n\t */\n\tviewPort:Rectangle;\n\n\t/**\n\t *\n\t */\n\tscissorRect:Rectangle;\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tapplyBillboard(billboard:Billboard);\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tapplyLineSubMesh(triangleSubMesh:LineSubMesh);\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tapplyTriangleSubMesh(triangleSubMesh:TriangleSubMesh);\n\n\t/**\n\t *\n\t */\n\tdispose();\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\trender(entityCollector:ICollector);\n\n\t/**\n\t * @internal\n\t */\n\t_iBackgroundR:number /*uint*/;\n\n\t/**\n\t * @internal\n\t */\n\t_iBackgroundG:number /*uint*/;\n\n\t/**\n\t * @internal\n\t */\n\t_iBackgroundB:number /*uint*/;\n\n\t/**\n\t * @internal\n\t */\n\t_iBackgroundAlpha:number;\n\n\t/**\n\t * @internal\n\t */\n\t_iCreateEntityCollector():ICollector;\n\n\t_iRender(entityCollector:ICollector, target?:TextureProxyBase, scissorRect?:Rectangle, surfaceSelector?:number);\n\n\t_iRenderCascades(entityCollector:ICollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n}\n\nexport = IRenderer;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\n\n/**\n * @interface away.sort.IEntitySorter\n */\ninterface IEntitySorter\n{\n\tsortBlendedRenderables(head:IRenderable):IRenderable;\n\n\tsortOpaqueRenderables(head:IRenderable):IRenderable;\n}\n\nexport = IEntitySorter;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-core/lib/core/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on material id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.materialId;\n\t\t\t\tvar mb:number = headB.materialId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat\n{\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\tpublic align:string;\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\tpublic color:boolean;\n\n\t/**\n\t * The name of the font for text in this text format, as a string. The\n\t * default value is <code>null</code>, which means that Flash Player uses\n\t * Times New Roman font for the text.\n\t */\n\tpublic font:string;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\tpublic target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.target = target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-core/lib/core/traverse/CollectorBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase implements ICollector\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-core/lib/core/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-core/lib/core/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase implements ICollector\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-core/lib/core/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-core/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-core/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-core/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-core/lib/entities/DirectionalLight\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.ICollector\n */\ninterface ICollector\n{\n\t/**\n\t *\n\t */\n\tcamera:Camera;\n\n\t/**\n\t *\n\t */\n\tscene:Scene;\n\n\t/**\n\t *\n\t */\n\tnumEntities:number;\n\n\t/**\n\t *\n\t */\n\tnumInteractiveEntities:number;\n\n\t/**\n\t *\n\t */\n\tclear();\n\n\t/**\n\t *\n\t */\n\tentityHead;\n\n\t/**\n\t *\n\t * @param node\n\t */\n\tenterNode(node:NodeBase):boolean;\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tapplyDirectionalLight(entity:IEntity);\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tapplyEntity(entity:IEntity);\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tapplyLightProbe(entity:IEntity);\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tapplyPointLight(entity:IEntity);\n\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tapplySkybox(entity:IEntity);\n}\n\nexport = ICollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-core/lib/core/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-core/lib/core/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import IAnimator\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/core/geom/UVTransform\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport EntityNode\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport IRenderer\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t= require(\"awayjs-core/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.BILLBOARD;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromExtremes(0, 0, 0, this._billboardWidth, this._billboardHeight, 0);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pBoundsInvalid = true;\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateVertexData(\"vertices\"); //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyBillboard(this);\n\t}\n}\n\nexport = Billboard;",
    "import BoundingVolumeBase\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport DisplayObjectContainer\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport CameraNode\t\t\t\t= require(\"awayjs-core/lib/core/partition/CameraNode\");\nimport EntityNode\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport IRenderer\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t= require(\"awayjs-core/lib/events/CameraEvent\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t}\n\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new CameraNode(this);\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CAMERA;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t\tthis._pBounds.nullify();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-core/lib/core/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-core/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t/**\n\t *\n\t * @returns {away.bounds.NullBounds}\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t//directional lights are to be considered global, hence always in view\n\t\treturn new NullBounds();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new DirectionalLightNode(this);\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar bounds:BoundingVolumeBase = entity.bounds;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(bounds.aabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = DirectionalLight;",
    "import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-core/lib/controllers/ControllerBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Transform\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Transform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport Partition\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-core/lib/core/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\n\ninterface IEntity extends IAsset\n{\n\tx:number;\n\ty:number;\n\tz:number;\n\n\trotationX:number;\n\trotationY:number;\n\trotationZ:number;\n\n\tscaleX:number;\n\tscaleY:number;\n\tscaleZ:number;\n\n\t/**\n\t *\n\t */\n\tbounds:BoundingVolumeBase;\n\n\t/**\n\t *\n\t */\n\tcastsShadows:boolean;\n\n\t/**\n\t *\n\t */\n\tinverseSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpartitionNode:EntityNode;\n\n\t/**\n\t *\n\t */\n\tpickingCollider:IPickingCollider;\n\n\t/**\n\t *\n\t */\n\ttransform:Transform;\n\n\t/**\n\t *\n\t */\n\tscene:Scene;\n\n\t/**\n\t *\n\t */\n\tscenePosition:Vector3D;\n\n\t/**\n\t *\n\t */\n\tsceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tworldBounds:BoundingVolumeBase;\n\n\t/**\n\t *\n\t */\n\tzOffset:number\n\n\t/**\n\t *\n\t */\n\tisIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean;\n\n\t/**\n\t *\n\t *\n\t * @param target\n\t * @param upAxis\n\t */\n\tlookAt(target:Vector3D, upAxis?:Vector3D);\n\n\t/**\n\t * @internal\n\t */\n\t_iPickingCollisionVO:PickingCollisionVO;\n\n\t/**\n\t * @internal\n\t */\n\t_iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\t_iAssignedPartition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\t_iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean;\n\n\t/**\n\t * @internal\n\t */\n\t_iIsMouseEnabled():boolean\n\n\t/**\n\t * @internal\n\t */\n\t_iIsVisible():boolean\n\n\t_iInternalUpdate()\n\n\t/**\n\t * The transformation matrix that transforms from model to world space, adapted with any special operations needed to render.\n\t * For example, assuring certain alignedness which is not inherent in the scene transform. By default, this would\n\t * return the scene transform.\n\t */\n\tgetRenderSceneTransform(camera:Camera):Matrix3D;\n\n\t/**\n\t *\n\t * @param renderer\n\t * @private\n\t */\n\t_iCollectRenderables(renderer:IRenderer);\n}\n\nexport = IEntity;",
    "import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-core/lib/core/partition/LightProbeNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new LightProbeNode(this);\n\t}\n\n\t//@override\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\t//@override\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds();\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = LightProbe;",
    "import IAnimator\t\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-core/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SEGMENT;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromExtremes(this._startPosition.x, this._startPosition.y, this._startPosition.z, this._endPosition.x, this._endPosition.y, this._endPosition.z);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateVertexData(\"vertices\"); //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = LineSegment;",
    "import IAnimator\t\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-core/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/core/base/Geometry\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-core/lib/core/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-core/lib/core/base/ISubMeshClass\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MESH;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.bounds = this.bounds.clone();\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromGeometry(this._geometry);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n}\n\nexport = Mesh;",
    "import BoundingSphere\t\t\t\t= require(\"awayjs-core/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-core/lib/core/partition/PointLightNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-core/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis.pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new PointLightNode(this);\n\t}\n\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromSphere(new Vector3D(), this._pFallOff);\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t//point lights are culled based on their falloff radius\n\t\treturn new BoundingSphere();\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar bounds:BoundingVolumeBase = entity.bounds;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = bounds.aabb;\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-core/lib/core/base/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;",
    "import IAnimator\t\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-core/lib/core/partition/SkyboxNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(material:MaterialBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\t}\n\n/**\n * The material with which to render the Skybox.\n */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material)\n\t\t\tthis._material.iRemoveOwner(<IMaterialOwner> this);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tthis._material.iAddOwner(<IMaterialOwner> this);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKYBOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\t// dead end\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():SkyboxNode\n\t{\n\t\treturn new SkyboxNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn <BoundingVolumeBase> new NullBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\n\t}\n}\n\nexport = Skybox;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-core/lib/core/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-core/lib/core/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-core/lib/core/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-core/lib/core/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-core/lib/core/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-core/lib/core/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-core/lib/core/text/TextLineMetrics\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends DisplayObject\n{\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t * \n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Camera\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\n\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base interface for dispatching events\n *\n * @interface away.events.IEventDispatcher\n *\n */\ninterface IEventDispatcher\n{\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\taddEventListener(type:string, listener:Function);\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tremoveEventListener(type:string, listener:Function);\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tdispatchEvent(event:Event);\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t * @param {Object} Target object listener is added to\n\t */\n\thasEventListener(type:string, listener?:Function) : boolean;\n}\n\nexport = IEventDispatcher;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:DisplayObject;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:DisplayObject = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import View\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/View\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The material owner inside which the event took place.\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.materialOwner = this.materialOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass StageEvent extends Event\n{\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = StageEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\tprivate _dataType:string;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, dataType:string = \"\")\n\t{\n\t\tsuper(type);\n\n\t\tthis._dataType = dataType;\n\t}\n\n\t/**\n\t * The data type of the vertex data.\n\t */\n\tpublic get dataType():string\n\t{\n\t\treturn this._dataType;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import View\t\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/View\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-core/lib/core/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-core/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.materialOwner = collider.materialOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import IAnimationSet\t\t\t= require(\"awayjs-core/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/core/base/BlendMode\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-core/lib/core/base/IMaterialOwner\");\nimport IStage\t\t\t\t\t= require(\"awayjs-core/lib/core/base/IStage\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport IRenderable\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport IMaterialData\t\t\t= require(\"awayjs-core/lib/core/pool/IMaterialData\");\nimport IMaterialPassData\t\t= require(\"awayjs-core/lib/core/pool/IMaterialPassData\");\nimport Camera\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport MaterialEvent\t\t\t= require(\"awayjs-core/lib/events/MaterialEvent\");\nimport LightPickerBase\t\t\t= require(\"awayjs-core/lib/materials/lightpickers/LightPickerBase\");\nimport IMaterialPass\t\t\t= require(\"awayjs-core/lib/materials/passes/IMaterialPass\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends NamedAssetBase implements IAsset\n{\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _materialPassData:Array<IMaterialPassData> = new Array<IMaterialPassData>();\n\tprivate _materialData:Array<IMaterialData> = new Array<IMaterialData>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pScreenPassesInvalid:boolean = true;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IMaterialOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _numPasses:number = 0;\n\tprivate _passes:Array<IMaterialPass>;\n\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IMaterialOwner>();\n\t\tthis._passes = new Array<IMaterialPass>();\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MATERIAL;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tthis._pClearScreenPasses();\n\n\t\tlen = this._materialData.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._materialData[i].dispose();\n\n\t\tthis._materialData = new Array<IMaterialData>();\n\n\t\tlen = this._materialPassData.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].dispose();\n\n\t\tthis._materialPassData = new Array<IMaterialPassData>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the material requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t/**\n\t * Sets the render state for a pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param pass The pass data to activate.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivatePass(pass:IMaterialPassData, stage:IStage, camera:Camera) // ARCANE\n\t{\n\t\tpass.materialPass._iActivate(pass, stage, camera);\n\t}\n\n\t/**\n\t * Clears the render state for a pass. This needs to be called before activating another pass.\n\t * @param pass The pass to deactivate.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @internal\n\t */\n\tpublic _iDeactivatePass(pass:IMaterialPassData, stage:IStage) // ARCANE\n\t{\n\t\tpass.materialPass._iDeactivate(pass, stage);\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling renderPass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRenderPass(pass:IMaterialPassData, renderable:IRenderable, stage:IStage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.collectLights(renderable);\n\n\t\tpass.materialPass._iRender(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IMaterialOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IMaterialOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IMaterialOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes an IMaterialOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IMaterialOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\t}\n\n\t/**\n\t * A list of the IMaterialOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IMaterialOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * The amount of passes used by the material.\n\t *\n\t * @private\n\t */\n\tpublic _iNumScreenPasses():number\n\t{\n\t\treturn this._numPasses;\n\t}\n\n\t/**\n\t * A list of the screen passes used in this material\n\t *\n\t * @private\n\t */\n\tpublic get _iScreenPasses():Array<IMaterialPass>\n\t{\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._materialPassData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].invalidate();\n\n\t\tthis.invalidateMaterial();\n\t}\n\n\t/**\n\t * Flags that the screen passes have become invalid and need possible re-ordering / adding / deleting\n\t */\n\tpublic _pInvalidateScreenPasses()\n\t{\n\t\tthis._pScreenPassesInvalid = true;\n\t}\n\n\t/**\n\t * Removes a pass from the material.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemoveScreenPass(pass:IMaterialPass)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\n\t\tthis._numPasses--;\n\t}\n\n\t/**\n\t * Removes all passes from the material\n\t */\n\tpublic _pClearScreenPasses()\n\t{\n\t\tfor (var i:number = 0; i < this._numPasses; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = this._numPasses = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the material\n\t * @param pass\n\t */\n\tpublic _pAddScreenPass(pass:IMaterialPass)\n\t{\n\t\tthis._passes[this._numPasses++] = pass;\n\n\t\tpass.lightPicker = this._pLightPicker;\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis.invalidateMaterial();\n\t}\n\n\tpublic _iAddMaterialData(materialData:IMaterialData):IMaterialData\n\t{\n\t\tthis._materialData.push(materialData);\n\n\t\treturn materialData;\n\t}\n\n\tpublic _iRemoveMaterialData(materialData:IMaterialData):IMaterialData\n\t{\n\t\tthis._materialData.splice(this._materialData.indexOf(materialData), 1);\n\n\t\treturn materialData;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _iUpdateMaterial()\n\t{\n\t}\n\t\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateMaterial();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._materialData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialData[i].invalidateAnimation();\n\t}\n\t\n\tprivate invalidateMaterial()\n\t{\n\t\tvar len:number = this._materialData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialData[i].invalidateMaterial();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddMaterialPassData(materialPassData:IMaterialPassData):IMaterialPassData\n\t{\n\t\tthis._materialPassData.push(materialPassData);\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic _iRemoveMaterialPassData(materialPassData:IMaterialPassData):IMaterialPassData\n\t{\n\t\tthis._materialPassData.splice(this._materialPassData.indexOf(materialPassData), 1);\n\n\t\treturn materialPassData;\n\t}\n}\n\nexport = MaterialBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-core/lib/core/traverse/ICollector\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-core/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-core/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-core/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT_PICKER;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-core/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-core/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-core/lib/entities/PointLight\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-core/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import IAnimationSet\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-core/lib/animators/IAnimator\");\nimport IStage\t\t\t\t\t\t= require(\"awayjs-core/lib/core/base/IStage\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/core/base/BlendMode\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport IMaterialPassData\t\t\t= require(\"awayjs-core/lib/core/pool/IMaterialPassData\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-core/lib/core/pool/IRenderable\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-core/lib/materials/lightpickers/LightPickerBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * MaterialPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\ninterface IMaterialPass extends IEventDispatcher\n{\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tdispose();\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\t_iRender(pass:IMaterialPassData, renderable:IRenderable, stage:IStage, camera:Camera, viewProjection:Matrix3D);\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\t_iActivate(pass:IMaterialPassData, stage:IStage, camera:Camera);\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\t_iDeactivate(pass:IMaterialPassData, stage:IStage);\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see away.materials.LightPickerBase\n\t * @see away.materials.StaticLightPicker\n\t */\n\tlightPicker:LightPickerBase;\n}\n\nexport = IMaterialPass;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-core/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-core/lib/entities/PointLight\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-core/lib/materials/shadowmappers/ShadowMapperBase\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-core/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-core/lib/materials/shadowmappers/ShadowMapperBase\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-core/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import Scene\t\t\t\t\t\t= require(\"awayjs-core/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-core/lib/core/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-core/lib/core/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-core/lib/core/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-core/lib/core/traverse/ShadowCasterCollector\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureProxyBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureProxyBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/core/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ImageCubeTexture\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * CubeTextureParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass CubeTextureParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new CubeTextureParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:ImageCubeTexture = new ImageCubeTexture(\n\n\t\t\t\tthis._getHTMLImageElement(CubeTextureParser.posX), this._getHTMLImageElement(CubeTextureParser.negX), this._getHTMLImageElement(CubeTextureParser.posY), this._getHTMLImageElement(CubeTextureParser.negY), this._getHTMLImageElement(CubeTextureParser.posZ), this._getHTMLImageElement(CubeTextureParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('CubeTextureParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"CubeTextureParser: JSON data error - cubes require id of:   \\n\" + CubeTextureParser.posX + ', ' + CubeTextureParser.negX + ',  \\n' + CubeTextureParser.posY + ', ' + CubeTextureParser.negY + ',  \\n' + CubeTextureParser.posZ + ', ' + CubeTextureParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ CubeTextureParser.posX ] != null && this._imgDependencyDictionary[ CubeTextureParser.negX ] != null && this._imgDependencyDictionary[ CubeTextureParser.posY ] != null && this._imgDependencyDictionary[ CubeTextureParser.negY ] != null && this._imgDependencyDictionary[ CubeTextureParser.posZ ] != null && this._imgDependencyDictionary[ CubeTextureParser.negZ ] != null );\n\t}\n\n\tprivate _getHTMLImageElement(name:string):HTMLImageElement\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency) {\n\t\t\treturn <HTMLImageElement> (<ImageTexture> dependency.assets[0]).htmlImageElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n\nexport = CubeTextureParser;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see AssetLoader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:DisplayObject;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* TODO: Implement ParserUtils;\n\t public _pGetTextData():string\n\t {\n\t return ParserUtils.toString(_data);\n\t }\n\n\t public _pGetByteData():ByteArray\n\t {\n\t return ParserUtils.toByteArray(_data);\n\t }\n\t */\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapDataValid(bitmapData:BitmapData):boolean\n\t{\n\t\tvar isValid:boolean = TextureUtils.isBitmapDataValid(bitmapData);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsingAfterDependencies()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data.arraybytes);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/core/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/core/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false)\n\t{\n\t\tthis._id = id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/core/net/URLLoaderDataFormat\");\nimport Billboard\t\t\t\t= require(\"awayjs-core/lib/entities/Billboard\");\nimport CSSMaterialBase\t\t\t= require(\"awayjs-core/lib/materials/CSSMaterialBase\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n/**\n * Texture2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Texture2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Texture2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:Texture2DBase;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (TextureUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = new ImageTexture(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\n\t\t\tif (TextureUtils.isHTMLImageElementValid(<HTMLImageElement> this.data)) {\n\t\t\t\tasset = new ImageTexture(<HTMLImageElement> this.data);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (TextureUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = new ImageTexture(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = new ImageTexture(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = new Billboard(new CSSMaterialBase(asset));\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Texture2DParser;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends NamedAssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-core/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-core/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-core/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-core/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// central vertex\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 1;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = -1;\n\t\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 2;\n\n\t\t\t\t\t\tnextVertexIndex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 2;\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = -1;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = 1;\n\t\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 2;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 1;\n\n\t\t\t\t\t\tnextVertexIndex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 2;\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-core/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-core/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import DisplayObject\t\t\t= require(\"awayjs-core/lib/core/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-core/lib/core/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-core/lib/entities/Mesh\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-core/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-core/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.PRIMITIVE_PREFAB;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/core/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-core/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/core/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/core/base/TriangleSubGeometry\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-core/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport IEventDispatcher\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\n\n/**\n * IMaterialOwner provides an interface for objects that can use materials.\n *\n * @interface away.base.IMaterialOwner\n */\ninterface IProjection extends IEventDispatcher\n{\n\tcoordinateSystem:string;\n\n\tfrustumCorners:Array<number>\n\n\tmatrix:Matrix3D;\n\n\tnear:number;\n\n\toriginX:number;\n\n\toriginY:number;\n\n\tfar:number;\n\n\t_iAspectRatio:number;\n\n\tproject(point3d:Vector3D):Vector3D;\n\n\tunproject(nX:number, nY:number, sZ:number):Vector3D;\n\n\t_iUpdateScissorRect(x:number, y:number, width:number, height:number);\n\n\t_iUpdateViewport(x:number, y:number, width:number, height:number);\n}\n\nexport = IProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass BitmapCubeTexture extends CubeTextureBase\n{\n\tprivate _bitmapDatas:Array<BitmapData> = new Array<BitmapData>(6);\n\n\t/**\n\t * The texture on the cube's right face.\n\t */\n\tpublic get positiveX():BitmapData\n\t{\n\t\treturn this._bitmapDatas[0];\n\t}\n\n\tpublic set positiveX(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[0] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's left face.\n\t */\n\tpublic get negativeX():BitmapData\n\t{\n\t\treturn this._bitmapDatas[1];\n\t}\n\n\tpublic set negativeX(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[1] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's top face.\n\t */\n\tpublic get positiveY():BitmapData\n\t{\n\t\treturn this._bitmapDatas[2];\n\t}\n\n\tpublic set positiveY(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[2] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's bottom face.\n\t */\n\tpublic get negativeY():BitmapData\n\t{\n\t\treturn this._bitmapDatas[3];\n\t}\n\n\tpublic set negativeY(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[3] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's far face.\n\t */\n\tpublic get positiveZ():BitmapData\n\t{\n\t\treturn this._bitmapDatas[4];\n\t}\n\n\tpublic set positiveZ(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[4] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's near face.\n\t */\n\tpublic get negativeZ():BitmapData\n\t{\n\t\treturn this._bitmapDatas[5];\n\t}\n\n\tpublic set negativeZ(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[5] = value;\n\t}\n\n\tconstructor(posX:BitmapData, negX:BitmapData, posY:BitmapData, negY:BitmapData, posZ:BitmapData, negZ:BitmapData, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis._testSize(this._bitmapDatas[0] = posX);\n\t\tthis._testSize(this._bitmapDatas[1] = negX);\n\t\tthis._testSize(this._bitmapDatas[2] = posY);\n\t\tthis._testSize(this._bitmapDatas[3] = negY);\n\t\tthis._testSize(this._bitmapDatas[4] = posZ);\n\t\tthis._testSize(this._bitmapDatas[5] = negZ);\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(posX.width);\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t * @private\n\t */\n\tprivate _testSize(value:BitmapData)\n\t{\n\t\tif (value.width != value.height)\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\n\t\tif (!TextureUtils.isBitmapDataValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tvar len:number = this._bitmapDatas.length\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._bitmapDatas[i].dispose();\n\t\t\tthis._bitmapDatas[i] = null;\n\t\t}\n\n\t\tthis._bitmapDatas = null;\n\t}\n\n\tpublic _iGetTextureData(side:number):BitmapData\n\t{\n\t\treturn this._bitmapDatas[side];\n\t}\n}\n\nexport = BitmapCubeTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass BitmapTexture extends Texture2DBase\n{\n\tpublic _bitmapData:BitmapData;\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get bitmapData():BitmapData\n\t{\n\t\treturn this._bitmapData;\n\t}\n\n\tpublic set bitmapData(value:BitmapData)\n\t{\n\t\tif (this._bitmapData == value)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isBitmapDataValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._bitmapData = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(value.width, value.height);\n\t}\n\n\tconstructor(bitmapData:BitmapData, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis.bitmapData = bitmapData;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._bitmapData.dispose();\n\t\tthis._bitmapData = null;\n\t}\n\n\tpublic _iGetTextureData():BitmapData\n\t{\n\t\treturn this._bitmapData;\n\t}\n}\n\nexport = BitmapTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeTextureBase extends TextureProxyBase\n{\n\tpublic _mipmapDataArray:Array<Array<BitmapData>> = new Array<Array<BitmapData>>(6);\n\tpublic _mipmapDataDirtyArray:Array<boolean> = new Array<boolean>(6);\n\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _pSetSize(size:number)\n\t{\n\t\tif (this._pSize != size)\n\t\t\tthis.invalidateSize();\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\n\n\t\tthis._pSize = size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[i];\n\t\t\tvar len:number = mipmapData.length;\n\t\t\tfor (var j:number = 0; j < len; j++)\n\t\t\t\tMipmapGenerator.freeMipMapHolder(mipmapData[j]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tsuper.invalidateContent();\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\n\t}\n\n\tpublic _iGetMipmapData(side:number):Array<BitmapData>\n\t{\n\t\tif (this._mipmapDataDirtyArray[side]) {\n\t\t\tthis._mipmapDataDirtyArray[side] = false;\n\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array<BitmapData>());\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);\n\t\t}\n\n\t\treturn this._mipmapDataArray[side];\n\t}\n\n\tpublic _iGetTextureData(side:number):any\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CubeTextureBase;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass ImageCubeTexture extends CubeTextureBase\n{\n\tprivate _htmlImageElements:Array<HTMLImageElement> = new Array<HTMLImageElement>(6);\n\n\t/**\n\t * The texture on the cube's right face.\n\t */\n\tpublic get positiveX():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[0];\n\t}\n\n\tpublic set positiveX(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[0] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's left face.\n\t */\n\tpublic get negativeX():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[1];\n\t}\n\n\tpublic set negativeX(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[1] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's top face.\n\t */\n\tpublic get positiveY():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[2];\n\t}\n\n\tpublic set positiveY(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[2] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's bottom face.\n\t */\n\tpublic get negativeY():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[3];\n\t}\n\n\tpublic set negativeY(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[3] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's far face.\n\t */\n\tpublic get positiveZ():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[4];\n\t}\n\n\tpublic set positiveZ(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[4] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's near face.\n\t */\n\tpublic get negativeZ():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[5];\n\t}\n\n\tpublic set negativeZ(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[5] = value;\n\t}\n\n\tconstructor(posX:HTMLImageElement, negX:HTMLImageElement, posY:HTMLImageElement, negY:HTMLImageElement, posZ:HTMLImageElement, negZ:HTMLImageElement, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis._testSize(this._htmlImageElements[0] = posX);\n\t\tthis._testSize(this._htmlImageElements[1] = negX);\n\t\tthis._testSize(this._htmlImageElements[2] = posY);\n\t\tthis._testSize(this._htmlImageElements[3] = negY);\n\t\tthis._testSize(this._htmlImageElements[4] = posZ);\n\t\tthis._testSize(this._htmlImageElements[5] = negZ);\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(posX.width);\n\t}\n\n\tprivate _testSize(value:HTMLImageElement)\n\t{\n\t\tif (value.width != value.height)\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\tpublic _iGetTextureData(side:number):HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[side];\n\t}\n}\n\nexport = ImageCubeTexture;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass ImageTexture extends Texture2DBase\n{\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t *\n\t * @param htmlImageElement\n\t * @param generateMipmaps\n\t */\n\tconstructor(htmlImageElement:HTMLImageElement, generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\n\t\tthis.htmlImageElement = htmlImageElement;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlImageElement():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElement;\n\t}\n\n\tpublic set htmlImageElement(value:HTMLImageElement)\n\t{\n\t\tif (this._htmlImageElement == value)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._htmlImageElement = value;\n\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width, value.height);\n\t}\n\n\tpublic _iGetTextureData():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElement;\n\t}\n}\n\nexport = ImageTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\n\n/**\n * MipmapGenerator is a helper class that uploads BitmapData to a Texture including mipmap levels.\n */\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapData;\n\n\t/**\n\t * Uploads a BitmapData with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static generateMipMaps(source:HTMLImageElement, output?:Array<BitmapData>, alpha?:boolean);\n\tpublic static generateMipMaps(source:BitmapData, output?:Array<BitmapData>, alpha?:boolean);\n\tpublic static generateMipMaps(source:any, output?:Array<BitmapData>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapData;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\twhile (w >= 1 && h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], w, h);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapData, newW:number, newH:number):BitmapData\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator.freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapData(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static freeMipMapHolder(mipMapHolder:BitmapData)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass RenderTexture extends Texture2DBase\n{\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (value == this._pWidth)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isDimensionValid(value))\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(value, this._pHeight);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (value == this._pHeight)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isDimensionValid(value))\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(this._pWidth, value);\n\t}\n\n\tconstructor(width:number, height:number)\n\t{\n\t\tsuper(false);\n\n\t\tthis._pSetSize(width, height);\n\t}\n}\n\nexport = RenderTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport BitmapDataChannel\t\t= require(\"awayjs-core/lib/core/base/BitmapDataChannel\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/core/geom/Point\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/core/geom/Rectangle\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\n/**\n * A convenience texture that encodes a specular map in the red channel, and the gloss map in the green channel, as expected by BasicSpecularMapMethod\n */\nclass SpecularBitmapTexture extends BitmapTexture\n{\n\tprivate _specularMap:BitmapData;\n\tprivate _glossMap:BitmapData;\n\t\n\tconstructor(specularMap:BitmapData = null, glossMap:BitmapData = null, generateMipmaps:boolean = true)\n\t{\n\t\tvar bmd:BitmapData = specularMap? specularMap : glossMap;\n\n\t\tbmd = bmd? new BitmapData(bmd.width, bmd.height, false, 0xffffff) : new BitmapData(1, 1, false, 0xffffff);\n\t\t\n\t\tsuper(bmd, generateMipmaps);\n\t\t\n\t\tthis.specularMap = specularMap;\n\t\tthis.glossMap = glossMap;\n\t}\n\t\n\tpublic get specularMap():BitmapData\n\t{\n\t\treturn this._specularMap;\n\t}\n\t\n\tpublic set specularMap(value:BitmapData)\n\t{\n\t\tthis._specularMap = value;\n\n\t\tthis.invalidateContent();\n\t\t\n\t\tthis._testSize();\n\t}\n\t\n\tpublic get glossMap():BitmapData\n\t{\n\t\treturn this._glossMap;\n\t}\n\t\n\tpublic set glossMap(value:BitmapData)\n\t{\n\t\tthis._glossMap = value;\n\t\tthis.invalidateContent();\n\t\t\n\t\tthis._testSize();\n\t}\n\t\n\tprivate _testSize()\n\t{\n\t\tvar w:Number, h:Number;\n\t\t\n\t\tif (this._specularMap) {\n\t\t\tw = this._specularMap.width;\n\t\t\th = this._specularMap.height;\n\t\t} else if (this._glossMap) {\n\t\t\tw = this._glossMap.width;\n\t\t\th = this._glossMap.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\t\t\n\t\tif (w != this._bitmapData.width && h != this._bitmapData.height) {\n\t\t\tvar oldBitmap:BitmapData = this._bitmapData;\n\t\t\tthis.bitmapData = new BitmapData(this._specularMap.width, this._specularMap.height, false, 0xffffff);\n\t\t\toldBitmap.dispose();\n\t\t}\n\t}\n\n\tpublic _iGetTextureData():BitmapData\n\t{\n\t\tvar rect:Rectangle = this._specularMap.rect;\n\t\tvar origin:Point = new Point();\n\n\t\tthis._bitmapData.fillRect(rect, 0xffffff);\n\n\t\tif (this._glossMap)\n\t\t\tthis._bitmapData.copyChannel(this._glossMap, rect, origin, BitmapDataChannel.GREEN, BitmapDataChannel.GREEN);\n\n\t\tif (this._specularMap)\n\t\t\tthis._bitmapData.copyChannel(this._specularMap, rect, origin, BitmapDataChannel.RED, BitmapDataChannel.RED);\n\n\t\treturn this._bitmapData;\n\t}\n}\n\nexport = SpecularBitmapTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass Texture2DBase extends TextureProxyBase\n{\n\tprivate _mipmapData:Array<BitmapData>;\n\tprivate _mipmapDataDirty:boolean;\n\tpublic _pWidth:number;\n\tpublic _pHeight:number;\n\t\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper(generateMipmaps);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._mipmapData) {\n\t\t\tvar len:number = this._mipmapData.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tMipmapGenerator.freeMipMapHolder(this._mipmapData[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tsuper.invalidateContent();\n\n\t\tthis._mipmapDataDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _pSetSize(width:number, height:number)\n\t{\n\t\tif (this._pWidth != width || this._pHeight != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._mipmapDataDirty = true;\n\n\t\tthis._pWidth = width;\n\t\tthis._pHeight = height;\n\t}\n\n\tpublic _iGetMipmapData():Array<BitmapData>\n\t{\n\t\tif (this._mipmapDataDirty) {\n\t\t\tthis._mipmapDataDirty = false;\n\n\t\t\tif (!this._mipmapData)\n\t\t\t\tthis._mipmapData = new Array<BitmapData>();\n\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(), this._mipmapData, true);\n\t\t}\n\n\t\treturn this._mipmapData;\n\t}\n\n\tpublic _iGetTextureData():any\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = Texture2DBase;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/core/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/core/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/core/library/NamedAssetBase\");\nimport ITextureData\t\t\t\t= require(\"awayjs-core/lib/core/pool/ITextureData\");\n\n/**\n *\n */\nclass TextureProxyBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pSize:number;\n\tpublic _pFormat:string = \"bgra\"\n\tprivate _hasMipmaps:boolean;\n\tprivate _generateMipmaps:boolean;\n\tprivate _textureData:Array<ITextureData> = new Array<ITextureData>();\n\t\n\t/**\n\t *\n\t */\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._generateMipmaps = this._hasMipmaps = generateMipmaps;\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._pSize;\n\t}\n\n\tpublic get hasMipmaps():boolean\n\t{\n\t\treturn this._hasMipmaps;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get generateMipmaps():boolean\n\t{\n\t\treturn this._generateMipmaps;\n\t}\n\n\tpublic set generateMipmaps(value:boolean)\n\t{\n\t\tif (this._generateMipmaps == value)\n\t\t\treturn;\n\n\t\tthis._generateMipmaps = this._hasMipmaps = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TEXTURE;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureData.length\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureData[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureData.length)\n\t\t\tthis._textureData[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureData.length)\n\t\t\tthis._textureData[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureData(textureData:ITextureData):ITextureData\n\t{\n\t\tthis._textureData.push(textureData);\n\n\t\treturn textureData;\n\t}\n\n\tpublic _iRemoveTextureData(textureData:ITextureData):ITextureData\n\t{\n\t\tthis._textureData.splice(this._textureData.indexOf(textureData), 1);\n\n\t\treturn textureData;\n\t}\n}\n\nexport = TextureProxyBase;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number = 0;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = 4;\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\n\t\tif (length == null) {\n\t\t\tlength = bytes.length;\n\t\t}\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length) {\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t\t}\n\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 2;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tpublic readInt():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\n\t}\n\n\tpublic readShort():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\t\treturn short;\n\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\t\treturn double;\n\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\nimport CastError\t\t\t\t= require(\"awayjs-core/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t} else {\n\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/core/base/BitmapData\");\n\nclass TextureUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isBitmapDataValid(bitmapData:BitmapData):boolean\n\t{\n\t\tif (bitmapData == null) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn TextureUtils.isDimensionValid(bitmapData.width) && TextureUtils.isDimensionValid(bitmapData.height);\n\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn TextureUtils.isDimensionValid(image.width) && TextureUtils.isDimensionValid(image.height);\n\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\n\t\treturn d >= 1 && d <= TextureUtils.MAX_SIZE && TextureUtils.isPowerOfTwo(d);\n\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\n\t\treturn value? ( ( value & -value ) == value ) : false;\n\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > TextureUtils.MAX_SIZE)\n\t\t\tp = TextureUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = TextureUtils",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\n\t\tsuper();\n\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0) {\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t\t}\n\n\t}\n\n\tpublic get currentCount():number\n\t{\n\n\t\treturn this._currentCount;\n\n\t}\n\n\tpublic get delay():number\n\t{\n\n\t\treturn this._delay;\n\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t}\n\n\t\tthis._currentCount = 0;\n\n\t}\n\n\tpublic get running():boolean\n\t{\n\n\t\treturn this._running;\n\n\t}\n\n\tpublic start():void\n\t{\n\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\n\t}\n\n\tpublic stop():void\n\t{\n\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\n\t}\n\n\tprivate tick():void\n\t{\n\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\n\t\t}\n\n\t}\n}\n\nexport = Timer;",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ]
}