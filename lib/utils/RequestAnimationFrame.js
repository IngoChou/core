var getTimer = require("awayjs-core/lib/utils/getTimer");
var RequestAnimationFrame = (function () {
    function RequestAnimationFrame(callback, callbackContext) {
        var _this = this;
        this._active = false;
        this._argsArray = new Array();
        this._getTimer = getTimer;
        this.setCallback(callback, callbackContext);
        this._rafUpdateFunction = function () {
            if (_this._active)
                _this._tick();
        };
        this._argsArray.push(this._dt);
    }
    // Public
    /**
     *
     * @param callback
     * @param callbackContext
     */
    RequestAnimationFrame.prototype.setCallback = function (callback, callbackContext) {
        this._callback = callback;
        this._callbackContext = callbackContext;
    };
    /**
     *
     */
    RequestAnimationFrame.prototype.start = function () {
        this._prevTime = this._getTimer();
        this._active = true;
        if (window.requestAnimationFrame) {
            window.requestAnimationFrame(this._rafUpdateFunction);
        }
        else {
            if (window['mozRequestAnimationFrame'])
                window.requestAnimationFrame = window['mozRequestAnimationFrame'];
            else if (window['webkitRequestAnimationFrame'])
                window.requestAnimationFrame = window['webkitRequestAnimationFrame'];
            else if (window['oRequestAnimationFrame'])
                window.requestAnimationFrame = window['oRequestAnimationFrame'];
        }
    };
    /**
     *
     */
    RequestAnimationFrame.prototype.stop = function () {
        this._active = false;
    };
    Object.defineProperty(RequestAnimationFrame.prototype, "active", {
        // Get / Set
        /**
         *
         * @returns {boolean}
         */
        get: function () {
            return this._active;
        },
        enumerable: true,
        configurable: true
    });
    // Private
    /**
     *
     * @private
     */
    RequestAnimationFrame.prototype._tick = function () {
        this._currentTime = this._getTimer();
        this._dt = this._currentTime - this._prevTime;
        this._argsArray[0] = this._dt;
        this._callback.apply(this._callbackContext, this._argsArray);
        window.requestAnimationFrame(this._rafUpdateFunction);
        this._prevTime = this._currentTime;
    };
    return RequestAnimationFrame;
})();
module.exports = RequestAnimationFrame;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1jb3JlL2xpYi91dGlscy9SZXF1ZXN0QW5pbWF0aW9uRnJhbWUudHMiXSwibmFtZXMiOlsiUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiUmVxdWVzdEFuaW1hdGlvbkZyYW1lLmNvbnN0cnVjdG9yIiwiUmVxdWVzdEFuaW1hdGlvbkZyYW1lLnNldENhbGxiYWNrIiwiUmVxdWVzdEFuaW1hdGlvbkZyYW1lLnN0YXJ0IiwiUmVxdWVzdEFuaW1hdGlvbkZyYW1lLnN0b3AiLCJSZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYWN0aXZlIiwiUmVxdWVzdEFuaW1hdGlvbkZyYW1lLl90aWNrIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLFFBQVEsV0FBZSxnQ0FBZ0MsQ0FBQyxDQUFDO0FBRWhFLElBQU0scUJBQXFCO0lBWTFCQSxTQVpLQSxxQkFBcUJBLENBWWRBLFFBQWlCQSxFQUFFQSxlQUFzQkE7UUFadERDLGlCQWlHQ0E7UUE3RlFBLFlBQU9BLEdBQVdBLEtBQUtBLENBQUNBO1FBS3hCQSxlQUFVQSxHQUFjQSxJQUFJQSxLQUFLQSxFQUFFQSxDQUFDQTtRQUszQ0EsSUFBSUEsQ0FBQ0EsU0FBU0EsR0FBR0EsUUFBUUEsQ0FBQ0E7UUFFMUJBLElBQUlBLENBQUNBLFdBQVdBLENBQUNBLFFBQVFBLEVBQUVBLGVBQWVBLENBQUNBLENBQUNBO1FBRTVDQSxJQUFJQSxDQUFDQSxrQkFBa0JBLEdBQUdBO1lBQ3pCQSxFQUFFQSxDQUFDQSxDQUFDQSxLQUFJQSxDQUFDQSxPQUFPQSxDQUFDQTtnQkFDaEJBLEtBQUlBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1FBQ2ZBLENBQUNBLENBQUFBO1FBRURBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBO0lBQ2hDQSxDQUFDQTtJQUVERCxTQUFTQTtJQUVUQTs7OztPQUlHQTtJQUNJQSwyQ0FBV0EsR0FBbEJBLFVBQW1CQSxRQUFpQkEsRUFBRUEsZUFBc0JBO1FBRTNERSxJQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxRQUFRQSxDQUFDQTtRQUMxQkEsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxHQUFHQSxlQUFlQSxDQUFDQTtJQUN6Q0EsQ0FBQ0E7SUFFREY7O09BRUdBO0lBQ0lBLHFDQUFLQSxHQUFaQTtRQUVDRyxJQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxFQUFFQSxDQUFDQTtRQUNsQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFFcEJBLEVBQUVBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLHFCQUFxQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDbENBLE1BQU1BLENBQUNBLHFCQUFxQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0Esa0JBQWtCQSxDQUFDQSxDQUFDQTtRQUN2REEsQ0FBQ0E7UUFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDUEEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsMEJBQTBCQSxDQUFDQSxDQUFDQTtnQkFDdENBLE1BQU1BLENBQUNBLHFCQUFxQkEsR0FBR0EsTUFBTUEsQ0FBQ0EsMEJBQTBCQSxDQUFDQSxDQUFDQTtZQUNuRUEsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsNkJBQTZCQSxDQUFDQSxDQUFDQTtnQkFDOUNBLE1BQU1BLENBQUNBLHFCQUFxQkEsR0FBR0EsTUFBTUEsQ0FBQ0EsNkJBQTZCQSxDQUFDQSxDQUFDQTtZQUN0RUEsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0Esd0JBQXdCQSxDQUFDQSxDQUFDQTtnQkFDekNBLE1BQU1BLENBQUNBLHFCQUFxQkEsR0FBR0EsTUFBTUEsQ0FBQ0Esd0JBQXdCQSxDQUFDQSxDQUFDQTtRQUNsRUEsQ0FBQ0E7SUFDRkEsQ0FBQ0E7SUFFREg7O09BRUdBO0lBQ0lBLG9DQUFJQSxHQUFYQTtRQUVDSSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxLQUFLQSxDQUFDQTtJQUN0QkEsQ0FBQ0E7SUFRREosc0JBQVdBLHlDQUFNQTtRQU5qQkEsWUFBWUE7UUFFWkE7OztXQUdHQTthQUNIQTtZQUVDSyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQTtRQUNyQkEsQ0FBQ0E7OztPQUFBTDtJQUVEQSxVQUFVQTtJQUVWQTs7O09BR0dBO0lBQ0tBLHFDQUFLQSxHQUFiQTtRQUVDTSxJQUFJQSxDQUFDQSxZQUFZQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxFQUFFQSxDQUFDQTtRQUNyQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsR0FBR0EsSUFBSUEsQ0FBQ0EsWUFBWUEsR0FBR0EsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0E7UUFDOUNBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBO1FBQzlCQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBO1FBRTdEQSxNQUFNQSxDQUFDQSxxQkFBcUJBLENBQUNBLElBQUlBLENBQUNBLGtCQUFrQkEsQ0FBQ0EsQ0FBQ0E7UUFFdERBLElBQUlBLENBQUNBLFNBQVNBLEdBQUdBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBO0lBQ3BDQSxDQUFDQTtJQUdGTiw0QkFBQ0E7QUFBREEsQ0FqR0EsQUFpR0NBLElBQUE7QUFFRCxBQUErQixpQkFBdEIscUJBQXFCLENBQUMiLCJmaWxlIjoidXRpbHMvUmVxdWVzdEFuaW1hdGlvbkZyYW1lLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZXRUaW1lclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvZ2V0VGltZXJcIik7XHJcblxyXG5jbGFzcyBSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcclxue1xyXG5cdHByaXZhdGUgX2NhbGxiYWNrOkZ1bmN0aW9uO1xyXG5cdHByaXZhdGUgX2NhbGxiYWNrQ29udGV4dDpPYmplY3Q7XHJcblx0cHJpdmF0ZSBfYWN0aXZlOmJvb2xlYW4gPSBmYWxzZTtcclxuXHRwcml2YXRlIF9yYWZVcGRhdGVGdW5jdGlvbjphbnk7XHJcblx0cHJpdmF0ZSBfcHJldlRpbWU6bnVtYmVyO1xyXG5cdHByaXZhdGUgX2R0Om51bWJlcjtcclxuXHRwcml2YXRlIF9jdXJyZW50VGltZTpudW1iZXI7XHJcblx0cHJpdmF0ZSBfYXJnc0FycmF5OkFycmF5PGFueT4gPSBuZXcgQXJyYXkoKTtcclxuXHRwcml2YXRlIF9nZXRUaW1lcjpGdW5jdGlvbjtcclxuXHJcblx0Y29uc3RydWN0b3IoY2FsbGJhY2s6RnVuY3Rpb24sIGNhbGxiYWNrQ29udGV4dDpPYmplY3QpXHJcblx0e1xyXG5cdFx0dGhpcy5fZ2V0VGltZXIgPSBnZXRUaW1lcjtcclxuXHJcblx0XHR0aGlzLnNldENhbGxiYWNrKGNhbGxiYWNrLCBjYWxsYmFja0NvbnRleHQpO1xyXG5cclxuXHRcdHRoaXMuX3JhZlVwZGF0ZUZ1bmN0aW9uID0gKCkgPT4ge1xyXG5cdFx0XHRpZiAodGhpcy5fYWN0aXZlKVxyXG5cdFx0XHRcdHRoaXMuX3RpY2soKTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLl9hcmdzQXJyYXkucHVzaCh0aGlzLl9kdCk7XHJcblx0fVxyXG5cclxuXHQvLyBQdWJsaWNcclxuXHJcblx0LyoqXHJcblx0ICpcclxuXHQgKiBAcGFyYW0gY2FsbGJhY2tcclxuXHQgKiBAcGFyYW0gY2FsbGJhY2tDb250ZXh0XHJcblx0ICovXHJcblx0cHVibGljIHNldENhbGxiYWNrKGNhbGxiYWNrOkZ1bmN0aW9uLCBjYWxsYmFja0NvbnRleHQ6T2JqZWN0KVxyXG5cdHtcclxuXHRcdHRoaXMuX2NhbGxiYWNrID0gY2FsbGJhY2s7XHJcblx0XHR0aGlzLl9jYWxsYmFja0NvbnRleHQgPSBjYWxsYmFja0NvbnRleHQ7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKlxyXG5cdCAqL1xyXG5cdHB1YmxpYyBzdGFydCgpXHJcblx0e1xyXG5cdFx0dGhpcy5fcHJldlRpbWUgPSB0aGlzLl9nZXRUaW1lcigpO1xyXG5cdFx0dGhpcy5fYWN0aXZlID0gdHJ1ZTtcclxuXHJcblx0XHRpZiAod2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xyXG5cdFx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuX3JhZlVwZGF0ZUZ1bmN0aW9uKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGlmICh3aW5kb3dbJ21velJlcXVlc3RBbmltYXRpb25GcmFtZSddKVxyXG5cdFx0XHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSB3aW5kb3dbJ21velJlcXVlc3RBbmltYXRpb25GcmFtZSddO1xyXG5cdFx0XHRlbHNlIGlmICh3aW5kb3dbJ3dlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSddKVxyXG5cdFx0XHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSB3aW5kb3dbJ3dlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSddO1xyXG5cdFx0XHRlbHNlIGlmICh3aW5kb3dbJ29SZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXSlcclxuXHRcdFx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93WydvUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKlxyXG5cdCAqL1xyXG5cdHB1YmxpYyBzdG9wKClcclxuXHR7XHJcblx0XHR0aGlzLl9hY3RpdmUgPSBmYWxzZTtcclxuXHR9XHJcblxyXG5cdC8vIEdldCAvIFNldFxyXG5cclxuXHQvKipcclxuXHQgKlxyXG5cdCAqIEByZXR1cm5zIHtib29sZWFufVxyXG5cdCAqL1xyXG5cdHB1YmxpYyBnZXQgYWN0aXZlKCk6Ym9vbGVhblxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLl9hY3RpdmU7XHJcblx0fVxyXG5cclxuXHQvLyBQcml2YXRlXHJcblxyXG5cdC8qKlxyXG5cdCAqXHJcblx0ICogQHByaXZhdGVcclxuXHQgKi9cclxuXHRwcml2YXRlIF90aWNrKCk6dm9pZFxyXG5cdHtcclxuXHRcdHRoaXMuX2N1cnJlbnRUaW1lID0gdGhpcy5fZ2V0VGltZXIoKTtcclxuXHRcdHRoaXMuX2R0ID0gdGhpcy5fY3VycmVudFRpbWUgLSB0aGlzLl9wcmV2VGltZTtcclxuXHRcdHRoaXMuX2FyZ3NBcnJheVswXSA9IHRoaXMuX2R0O1xyXG5cdFx0dGhpcy5fY2FsbGJhY2suYXBwbHkodGhpcy5fY2FsbGJhY2tDb250ZXh0LCB0aGlzLl9hcmdzQXJyYXkpO1xyXG5cclxuXHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5fcmFmVXBkYXRlRnVuY3Rpb24pO1xyXG5cclxuXHRcdHRoaXMuX3ByZXZUaW1lID0gdGhpcy5fY3VycmVudFRpbWU7XHJcblx0fVxyXG5cclxuXHJcbn1cclxuXHJcbmV4cG9ydCA9IFJlcXVlc3RBbmltYXRpb25GcmFtZTsiXX0=