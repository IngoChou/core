var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AbstractMethodError = require("awayjs-core/lib/errors/AbstractMethodError");
var MipmapGenerator = require("awayjs-core/lib/textures/MipmapGenerator");
var TextureBase = require("awayjs-core/lib/textures/TextureBase");
var CubeTextureBase = (function (_super) {
    __extends(CubeTextureBase, _super);
    function CubeTextureBase() {
        _super.call(this);
        this._mipmapDataArray = new Array(6);
        this._mipmapDataDirtyArray = new Array(6);
    }
    /**
     *
     * @param width
     * @param height
     * @private
     */
    CubeTextureBase.prototype._pSetSize = function (size) {
        if (this._pSize != size)
            this.invalidateSize();
        for (var i = 0; i < 6; i++)
            this._mipmapDataDirtyArray[i] = true;
        this._pSize = size;
    };
    /**
     * @inheritDoc
     */
    CubeTextureBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        for (var i = 0; i < 6; i++) {
            var mipmapData = this._mipmapDataArray[i];
            var len = mipmapData.length;
            for (var j = 0; j < len; j++)
                MipmapGenerator.freeMipMapHolder(mipmapData[j]);
        }
    };
    /**
     *
     */
    CubeTextureBase.prototype.invalidateContent = function () {
        _super.prototype.invalidateContent.call(this);
        for (var i = 0; i < 6; i++)
            this._mipmapDataDirtyArray[i] = true;
    };
    CubeTextureBase.prototype._iGetMipmapData = function (side) {
        if (this._mipmapDataDirtyArray[side]) {
            this._mipmapDataDirtyArray[side] = false;
            var mipmapData = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array());
            MipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);
        }
        return this._mipmapDataArray[side];
    };
    CubeTextureBase.prototype._iGetTextureData = function (side) {
        throw new AbstractMethodError();
    };
    return CubeTextureBase;
})(TextureBase);
module.exports = CubeTextureBase;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1jb3JlL2xpYi90ZXh0dXJlcy9DdWJlVGV4dHVyZUJhc2UudHMiXSwibmFtZXMiOlsiQ3ViZVRleHR1cmVCYXNlIiwiQ3ViZVRleHR1cmVCYXNlLmNvbnN0cnVjdG9yIiwiQ3ViZVRleHR1cmVCYXNlLl9wU2V0U2l6ZSIsIkN1YmVUZXh0dXJlQmFzZS5kaXNwb3NlIiwiQ3ViZVRleHR1cmVCYXNlLmludmFsaWRhdGVDb250ZW50IiwiQ3ViZVRleHR1cmVCYXNlLl9pR2V0TWlwbWFwRGF0YSIsIkN1YmVUZXh0dXJlQmFzZS5faUdldFRleHR1cmVEYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFPLG1CQUFtQixXQUFZLDRDQUE0QyxDQUFDLENBQUM7QUFDcEYsSUFBTyxlQUFlLFdBQWEsMENBQTBDLENBQUMsQ0FBQztBQUMvRSxJQUFPLFdBQVcsV0FBYyxzQ0FBc0MsQ0FBQyxDQUFDO0FBRXhFLElBQU0sZUFBZTtJQUFTQSxVQUF4QkEsZUFBZUEsVUFBb0JBO0lBS3hDQSxTQUxLQSxlQUFlQTtRQU9uQkMsaUJBQU9BLENBQUNBO1FBTEZBLHFCQUFnQkEsR0FBNEJBLElBQUlBLEtBQUtBLENBQW9CQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUM1RUEsMEJBQXFCQSxHQUFrQkEsSUFBSUEsS0FBS0EsQ0FBVUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFLcEVBLENBQUNBO0lBRUREOzs7OztPQUtHQTtJQUNJQSxtQ0FBU0EsR0FBaEJBLFVBQWlCQSxJQUFXQTtRQUUzQkUsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsSUFBSUEsSUFBSUEsQ0FBQ0E7WUFDdkJBLElBQUlBLENBQUNBLGNBQWNBLEVBQUVBLENBQUNBO1FBRXZCQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFVQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQTtZQUNoQ0EsSUFBSUEsQ0FBQ0EscUJBQXFCQSxDQUFDQSxDQUFDQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUV0Q0EsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDcEJBLENBQUNBO0lBRURGOztPQUVHQTtJQUNJQSxpQ0FBT0EsR0FBZEE7UUFFQ0csZ0JBQUtBLENBQUNBLE9BQU9BLFdBQUVBLENBQUNBO1FBRWhCQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFVQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxDQUFDQTtZQUNuQ0EsSUFBSUEsVUFBVUEsR0FBcUJBLElBQUlBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDNURBLElBQUlBLEdBQUdBLEdBQVVBLFVBQVVBLENBQUNBLE1BQU1BLENBQUNBO1lBQ25DQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFVQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxHQUFHQSxFQUFFQSxDQUFDQSxFQUFFQTtnQkFDbENBLGVBQWVBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDbERBLENBQUNBO0lBQ0ZBLENBQUNBO0lBRURIOztPQUVHQTtJQUNJQSwyQ0FBaUJBLEdBQXhCQTtRQUVDSSxnQkFBS0EsQ0FBQ0EsaUJBQWlCQSxXQUFFQSxDQUFDQTtRQUUxQkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUE7WUFDaENBLElBQUlBLENBQUNBLHFCQUFxQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDdkNBLENBQUNBO0lBRU1KLHlDQUFlQSxHQUF0QkEsVUFBdUJBLElBQVdBO1FBRWpDSyxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxxQkFBcUJBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ3RDQSxJQUFJQSxDQUFDQSxxQkFBcUJBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO1lBRXpDQSxJQUFJQSxVQUFVQSxHQUFxQkEsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLElBQUlBLEtBQUtBLEVBQWNBLENBQUNBLENBQUNBO1lBQzFIQSxlQUFlQSxDQUFDQSxlQUFlQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLFVBQVVBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBO1FBQ2hGQSxDQUFDQTtRQUVEQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO0lBQ3BDQSxDQUFDQTtJQUVNTCwwQ0FBZ0JBLEdBQXZCQSxVQUF3QkEsSUFBV0E7UUFFbENNLE1BQU1BLElBQUlBLG1CQUFtQkEsRUFBRUEsQ0FBQ0E7SUFDakNBLENBQUNBO0lBQ0ZOLHNCQUFDQTtBQUFEQSxDQXJFQSxBQXFFQ0EsRUFyRTZCLFdBQVcsRUFxRXhDO0FBRUQsQUFBeUIsaUJBQWhCLGVBQWUsQ0FBQyIsImZpbGUiOiJ0ZXh0dXJlcy9DdWJlVGV4dHVyZUJhc2UuanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJpdG1hcERhdGFcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9kYXRhL0JpdG1hcERhdGFcIik7XG5pbXBvcnQgQWJzdHJhY3RNZXRob2RFcnJvclx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZXJyb3JzL0Fic3RyYWN0TWV0aG9kRXJyb3JcIik7XG5pbXBvcnQgTWlwbWFwR2VuZXJhdG9yXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3RleHR1cmVzL01pcG1hcEdlbmVyYXRvclwiKTtcbmltcG9ydCBUZXh0dXJlQmFzZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3RleHR1cmVzL1RleHR1cmVCYXNlXCIpO1xuXG5jbGFzcyBDdWJlVGV4dHVyZUJhc2UgZXh0ZW5kcyBUZXh0dXJlQmFzZVxue1xuXHRwdWJsaWMgX21pcG1hcERhdGFBcnJheTpBcnJheTxBcnJheTxCaXRtYXBEYXRhPj4gPSBuZXcgQXJyYXk8QXJyYXk8Qml0bWFwRGF0YT4+KDYpO1xuXHRwdWJsaWMgX21pcG1hcERhdGFEaXJ0eUFycmF5OkFycmF5PGJvb2xlYW4+ID0gbmV3IEFycmF5PGJvb2xlYW4+KDYpO1xuXG5cdGNvbnN0cnVjdG9yKClcblx0e1xuXHRcdHN1cGVyKCk7XG5cdH1cblxuXHQvKipcblx0ICpcblx0ICogQHBhcmFtIHdpZHRoXG5cdCAqIEBwYXJhbSBoZWlnaHRcblx0ICogQHByaXZhdGVcblx0ICovXG5cdHB1YmxpYyBfcFNldFNpemUoc2l6ZTpudW1iZXIpXG5cdHtcblx0XHRpZiAodGhpcy5fcFNpemUgIT0gc2l6ZSlcblx0XHRcdHRoaXMuaW52YWxpZGF0ZVNpemUoKTtcblxuXHRcdGZvciAodmFyIGk6bnVtYmVyID0gMDsgaSA8IDY7IGkrKylcblx0XHRcdHRoaXMuX21pcG1hcERhdGFEaXJ0eUFycmF5W2ldID0gdHJ1ZTtcblxuXHRcdHRoaXMuX3BTaXplID0gc2l6ZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAaW5oZXJpdERvY1xuXHQgKi9cblx0cHVibGljIGRpc3Bvc2UoKVxuXHR7XG5cdFx0c3VwZXIuZGlzcG9zZSgpO1xuXG5cdFx0Zm9yICh2YXIgaTpudW1iZXIgPSAwOyBpIDwgNjsgaSsrKSB7XG5cdFx0XHR2YXIgbWlwbWFwRGF0YTpBcnJheTxCaXRtYXBEYXRhPiA9IHRoaXMuX21pcG1hcERhdGFBcnJheVtpXTtcblx0XHRcdHZhciBsZW46bnVtYmVyID0gbWlwbWFwRGF0YS5sZW5ndGg7XG5cdFx0XHRmb3IgKHZhciBqOm51bWJlciA9IDA7IGogPCBsZW47IGorKylcblx0XHRcdFx0TWlwbWFwR2VuZXJhdG9yLmZyZWVNaXBNYXBIb2xkZXIobWlwbWFwRGF0YVtqXSk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqXG5cdCAqL1xuXHRwdWJsaWMgaW52YWxpZGF0ZUNvbnRlbnQoKTp2b2lkXG5cdHtcblx0XHRzdXBlci5pbnZhbGlkYXRlQ29udGVudCgpO1xuXG5cdFx0Zm9yICh2YXIgaTpudW1iZXIgPSAwOyBpIDwgNjsgaSsrKVxuXHRcdFx0dGhpcy5fbWlwbWFwRGF0YURpcnR5QXJyYXlbaV0gPSB0cnVlO1xuXHR9XG5cblx0cHVibGljIF9pR2V0TWlwbWFwRGF0YShzaWRlOm51bWJlcik6QXJyYXk8Qml0bWFwRGF0YT5cblx0e1xuXHRcdGlmICh0aGlzLl9taXBtYXBEYXRhRGlydHlBcnJheVtzaWRlXSkge1xuXHRcdFx0dGhpcy5fbWlwbWFwRGF0YURpcnR5QXJyYXlbc2lkZV0gPSBmYWxzZTtcblxuXHRcdFx0dmFyIG1pcG1hcERhdGE6QXJyYXk8Qml0bWFwRGF0YT4gPSB0aGlzLl9taXBtYXBEYXRhQXJyYXlbc2lkZV0gfHwgKHRoaXMuX21pcG1hcERhdGFBcnJheVtzaWRlXSA9IG5ldyBBcnJheTxCaXRtYXBEYXRhPigpKTtcblx0XHRcdE1pcG1hcEdlbmVyYXRvci5nZW5lcmF0ZU1pcE1hcHModGhpcy5faUdldFRleHR1cmVEYXRhKHNpZGUpLCBtaXBtYXBEYXRhLCB0cnVlKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5fbWlwbWFwRGF0YUFycmF5W3NpZGVdO1xuXHR9XG5cblx0cHVibGljIF9pR2V0VGV4dHVyZURhdGEoc2lkZTpudW1iZXIpOmFueVxuXHR7XG5cdFx0dGhyb3cgbmV3IEFic3RyYWN0TWV0aG9kRXJyb3IoKTtcblx0fVxufVxuXG5leHBvcnQgPSBDdWJlVGV4dHVyZUJhc2U7Il19