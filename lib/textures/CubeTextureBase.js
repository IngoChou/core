var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AbstractMethodError = require("awayjs-core/lib/errors/AbstractMethodError");
var MipmapGenerator = require("awayjs-core/lib/textures/MipmapGenerator");
var TextureProxyBase = require("awayjs-core/lib/textures/TextureProxyBase");
var CubeTextureBase = (function (_super) {
    __extends(CubeTextureBase, _super);
    function CubeTextureBase(generateMipmaps) {
        if (generateMipmaps === void 0) { generateMipmaps = false; }
        _super.call(this, generateMipmaps);
        this._mipmapDataArray = new Array(6);
        this._mipmapDataDirtyArray = new Array(6);
    }
    /**
     *
     * @param width
     * @param height
     * @private
     */
    CubeTextureBase.prototype._pSetSize = function (size) {
        if (this._pSize != size)
            this.invalidateSize();
        for (var i = 0; i < 6; i++)
            this._mipmapDataDirtyArray[i] = true;
        this._pSize = size;
    };
    /**
     * @inheritDoc
     */
    CubeTextureBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        for (var i = 0; i < 6; i++) {
            var mipmapData = this._mipmapDataArray[i];
            var len = mipmapData.length;
            for (var j = 0; j < len; j++)
                MipmapGenerator.freeMipMapHolder(mipmapData[j]);
        }
    };
    /**
     *
     */
    CubeTextureBase.prototype.invalidateContent = function () {
        _super.prototype.invalidateContent.call(this);
        for (var i = 0; i < 6; i++)
            this._mipmapDataDirtyArray[i] = true;
    };
    CubeTextureBase.prototype._iGetMipmapData = function (side) {
        if (this._mipmapDataDirtyArray[side]) {
            this._mipmapDataDirtyArray[side] = false;
            var mipmapData = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array());
            MipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);
        }
        return this._mipmapDataArray[side];
    };
    CubeTextureBase.prototype._iGetTextureData = function (side) {
        throw new AbstractMethodError();
    };
    return CubeTextureBase;
})(TextureProxyBase);
module.exports = CubeTextureBase;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1jb3JlL2xpYi90ZXh0dXJlcy9jdWJldGV4dHVyZWJhc2UudHMiXSwibmFtZXMiOlsiQ3ViZVRleHR1cmVCYXNlIiwiQ3ViZVRleHR1cmVCYXNlLmNvbnN0cnVjdG9yIiwiQ3ViZVRleHR1cmVCYXNlLl9wU2V0U2l6ZSIsIkN1YmVUZXh0dXJlQmFzZS5kaXNwb3NlIiwiQ3ViZVRleHR1cmVCYXNlLmludmFsaWRhdGVDb250ZW50IiwiQ3ViZVRleHR1cmVCYXNlLl9pR2V0TWlwbWFwRGF0YSIsIkN1YmVUZXh0dXJlQmFzZS5faUdldFRleHR1cmVEYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFPLG1CQUFtQixXQUFZLDRDQUE0QyxDQUFDLENBQUM7QUFDcEYsSUFBTyxlQUFlLFdBQWEsMENBQTBDLENBQUMsQ0FBQztBQUMvRSxJQUFPLGdCQUFnQixXQUFhLDJDQUEyQyxDQUFDLENBQUM7QUFFakYsSUFBTSxlQUFlO0lBQVNBLFVBQXhCQSxlQUFlQSxVQUF5QkE7SUFLN0NBLFNBTEtBLGVBQWVBLENBS1JBLGVBQStCQTtRQUEvQkMsK0JBQStCQSxHQUEvQkEsdUJBQStCQTtRQUUxQ0Esa0JBQU1BLGVBQWVBLENBQUNBLENBQUNBO1FBTGpCQSxxQkFBZ0JBLEdBQTRCQSxJQUFJQSxLQUFLQSxDQUFvQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDNUVBLDBCQUFxQkEsR0FBa0JBLElBQUlBLEtBQUtBLENBQVVBLENBQUNBLENBQUNBLENBQUNBO0lBS3BFQSxDQUFDQTtJQUVERDs7Ozs7T0FLR0E7SUFDSUEsbUNBQVNBLEdBQWhCQSxVQUFpQkEsSUFBV0E7UUFFM0JFLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLElBQUlBLElBQUlBLENBQUNBO1lBQ3ZCQSxJQUFJQSxDQUFDQSxjQUFjQSxFQUFFQSxDQUFDQTtRQUV2QkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUE7WUFDaENBLElBQUlBLENBQUNBLHFCQUFxQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFFdENBLElBQUlBLENBQUNBLE1BQU1BLEdBQUdBLElBQUlBLENBQUNBO0lBQ3BCQSxDQUFDQTtJQUVERjs7T0FFR0E7SUFDSUEsaUNBQU9BLEdBQWRBO1FBRUNHLGdCQUFLQSxDQUFDQSxPQUFPQSxXQUFFQSxDQUFDQTtRQUVoQkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7WUFDbkNBLElBQUlBLFVBQVVBLEdBQXFCQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQzVEQSxJQUFJQSxHQUFHQSxHQUFVQSxVQUFVQSxDQUFDQSxNQUFNQSxDQUFDQTtZQUNuQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsR0FBR0EsRUFBRUEsQ0FBQ0EsRUFBRUE7Z0JBQ2xDQSxlQUFlQSxDQUFDQSxnQkFBZ0JBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQ2xEQSxDQUFDQTtJQUNGQSxDQUFDQTtJQUVESDs7T0FFR0E7SUFDSUEsMkNBQWlCQSxHQUF4QkE7UUFFQ0ksZ0JBQUtBLENBQUNBLGlCQUFpQkEsV0FBRUEsQ0FBQ0E7UUFFMUJBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQVVBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBO1lBQ2hDQSxJQUFJQSxDQUFDQSxxQkFBcUJBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBO0lBQ3ZDQSxDQUFDQTtJQUVNSix5Q0FBZUEsR0FBdEJBLFVBQXVCQSxJQUFXQTtRQUVqQ0ssRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EscUJBQXFCQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN0Q0EsSUFBSUEsQ0FBQ0EscUJBQXFCQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUV6Q0EsSUFBSUEsVUFBVUEsR0FBcUJBLElBQUlBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxJQUFJQSxLQUFLQSxFQUFjQSxDQUFDQSxDQUFDQTtZQUMxSEEsZUFBZUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxVQUFVQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUNoRkEsQ0FBQ0E7UUFFREEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtJQUNwQ0EsQ0FBQ0E7SUFFTUwsMENBQWdCQSxHQUF2QkEsVUFBd0JBLElBQVdBO1FBRWxDTSxNQUFNQSxJQUFJQSxtQkFBbUJBLEVBQUVBLENBQUNBO0lBQ2pDQSxDQUFDQTtJQUNGTixzQkFBQ0E7QUFBREEsQ0FyRUEsQUFxRUNBLEVBckU2QixnQkFBZ0IsRUFxRTdDO0FBRUQsQUFBeUIsaUJBQWhCLGVBQWUsQ0FBQyIsImZpbGUiOiJ0ZXh0dXJlcy9DdWJlVGV4dHVyZUJhc2UuanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJpdG1hcERhdGFcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9iYXNlL0JpdG1hcERhdGFcIik7XG5pbXBvcnQgQWJzdHJhY3RNZXRob2RFcnJvclx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZXJyb3JzL0Fic3RyYWN0TWV0aG9kRXJyb3JcIik7XG5pbXBvcnQgTWlwbWFwR2VuZXJhdG9yXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3RleHR1cmVzL01pcG1hcEdlbmVyYXRvclwiKTtcbmltcG9ydCBUZXh0dXJlUHJveHlCYXNlXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3RleHR1cmVzL1RleHR1cmVQcm94eUJhc2VcIik7XG5cbmNsYXNzIEN1YmVUZXh0dXJlQmFzZSBleHRlbmRzIFRleHR1cmVQcm94eUJhc2Vcbntcblx0cHVibGljIF9taXBtYXBEYXRhQXJyYXk6QXJyYXk8QXJyYXk8Qml0bWFwRGF0YT4+ID0gbmV3IEFycmF5PEFycmF5PEJpdG1hcERhdGE+Pig2KTtcblx0cHVibGljIF9taXBtYXBEYXRhRGlydHlBcnJheTpBcnJheTxib29sZWFuPiA9IG5ldyBBcnJheTxib29sZWFuPig2KTtcblxuXHRjb25zdHJ1Y3RvcihnZW5lcmF0ZU1pcG1hcHM6Ym9vbGVhbiA9IGZhbHNlKVxuXHR7XG5cdFx0c3VwZXIoZ2VuZXJhdGVNaXBtYXBzKTtcblx0fVxuXG5cdC8qKlxuXHQgKlxuXHQgKiBAcGFyYW0gd2lkdGhcblx0ICogQHBhcmFtIGhlaWdodFxuXHQgKiBAcHJpdmF0ZVxuXHQgKi9cblx0cHVibGljIF9wU2V0U2l6ZShzaXplOm51bWJlcilcblx0e1xuXHRcdGlmICh0aGlzLl9wU2l6ZSAhPSBzaXplKVxuXHRcdFx0dGhpcy5pbnZhbGlkYXRlU2l6ZSgpO1xuXG5cdFx0Zm9yICh2YXIgaTpudW1iZXIgPSAwOyBpIDwgNjsgaSsrKVxuXHRcdFx0dGhpcy5fbWlwbWFwRGF0YURpcnR5QXJyYXlbaV0gPSB0cnVlO1xuXG5cdFx0dGhpcy5fcFNpemUgPSBzaXplO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBpbmhlcml0RG9jXG5cdCAqL1xuXHRwdWJsaWMgZGlzcG9zZSgpXG5cdHtcblx0XHRzdXBlci5kaXNwb3NlKCk7XG5cblx0XHRmb3IgKHZhciBpOm51bWJlciA9IDA7IGkgPCA2OyBpKyspIHtcblx0XHRcdHZhciBtaXBtYXBEYXRhOkFycmF5PEJpdG1hcERhdGE+ID0gdGhpcy5fbWlwbWFwRGF0YUFycmF5W2ldO1xuXHRcdFx0dmFyIGxlbjpudW1iZXIgPSBtaXBtYXBEYXRhLmxlbmd0aDtcblx0XHRcdGZvciAodmFyIGo6bnVtYmVyID0gMDsgaiA8IGxlbjsgaisrKVxuXHRcdFx0XHRNaXBtYXBHZW5lcmF0b3IuZnJlZU1pcE1hcEhvbGRlcihtaXBtYXBEYXRhW2pdKTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICpcblx0ICovXG5cdHB1YmxpYyBpbnZhbGlkYXRlQ29udGVudCgpOnZvaWRcblx0e1xuXHRcdHN1cGVyLmludmFsaWRhdGVDb250ZW50KCk7XG5cblx0XHRmb3IgKHZhciBpOm51bWJlciA9IDA7IGkgPCA2OyBpKyspXG5cdFx0XHR0aGlzLl9taXBtYXBEYXRhRGlydHlBcnJheVtpXSA9IHRydWU7XG5cdH1cblxuXHRwdWJsaWMgX2lHZXRNaXBtYXBEYXRhKHNpZGU6bnVtYmVyKTpBcnJheTxCaXRtYXBEYXRhPlxuXHR7XG5cdFx0aWYgKHRoaXMuX21pcG1hcERhdGFEaXJ0eUFycmF5W3NpZGVdKSB7XG5cdFx0XHR0aGlzLl9taXBtYXBEYXRhRGlydHlBcnJheVtzaWRlXSA9IGZhbHNlO1xuXG5cdFx0XHR2YXIgbWlwbWFwRGF0YTpBcnJheTxCaXRtYXBEYXRhPiA9IHRoaXMuX21pcG1hcERhdGFBcnJheVtzaWRlXSB8fCAodGhpcy5fbWlwbWFwRGF0YUFycmF5W3NpZGVdID0gbmV3IEFycmF5PEJpdG1hcERhdGE+KCkpO1xuXHRcdFx0TWlwbWFwR2VuZXJhdG9yLmdlbmVyYXRlTWlwTWFwcyh0aGlzLl9pR2V0VGV4dHVyZURhdGEoc2lkZSksIG1pcG1hcERhdGEsIHRydWUpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLl9taXBtYXBEYXRhQXJyYXlbc2lkZV07XG5cdH1cblxuXHRwdWJsaWMgX2lHZXRUZXh0dXJlRGF0YShzaWRlOm51bWJlcik6YW55XG5cdHtcblx0XHR0aHJvdyBuZXcgQWJzdHJhY3RNZXRob2RFcnJvcigpO1xuXHR9XG59XG5cbmV4cG9ydCA9IEN1YmVUZXh0dXJlQmFzZTsiXX0=